Index: src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.client;\r\n\r\nimport foundry.veil.Veil;\r\nimport net.fabricmc.api.ClientModInitializer;\r\nimport net.fabricmc.fabric.api.blockrenderlayer.v1.BlockRenderLayerMap;\r\nimport net.fabricmc.fabric.api.client.event.lifecycle.v1.ClientTickEvents;\r\nimport net.fabricmc.fabric.api.client.keybinding.v1.KeyBindingHelper;\r\nimport net.fabricmc.fabric.api.client.particle.v1.ParticleFactoryRegistry;\r\nimport net.fabricmc.fabric.api.client.rendering.v1.EntityRendererRegistry;\r\nimport net.fabricmc.fabric.api.client.rendering.v1.WorldRenderEvents;\r\nimport net.minecraft.client.MinecraftClient;\r\nimport net.minecraft.client.option.KeyBinding;\r\nimport net.minecraft.client.render.RenderLayer;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.client.misc.StickDashHandler;\r\nimport org.copycraftDev.new_horizons.client.particle.ModParticlesClient;\r\nimport org.copycraftDev.new_horizons.client.rendering.CelestialBodyRenderer;\r\nimport org.copycraftDev.new_horizons.core.bigbang.BigBangClientManager;\r\nimport org.copycraftDev.new_horizons.core.entity.ModEntities;\r\nimport org.copycraftDev.new_horizons.core.particle.FogParticle;\r\nimport org.copycraftDev.new_horizons.core.particle.ModParticles;\r\nimport org.copycraftDev.new_horizons.client.render.entity.SeatEntityRenderer;\r\nimport org.copycraftDev.new_horizons.extrastuff.PlanetTextureGenerator;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliGeometryBuilder;\r\nimport org.copycraftDev.new_horizons.core.blocks.ModBlocks;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliRenderingRegistry;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsRenderer;\r\nimport org.lwjgl.glfw.GLFW;\r\n\r\n\r\npublic class NewHorizonsClient implements ClientModInitializer {\r\n    private static float currentTickDelta = 0.0F;\r\n    static double speed = 0;\r\n    static Vec3d direction = Vec3d.ZERO;\r\n    static Vec3d speed3d = Vec3d.ZERO;\r\n\r\n    // Declare key bindings without initializing them statically\r\n    public static KeyBinding ARROW_UP;\r\n    public static KeyBinding ARROW_DOWN;\r\n    public static KeyBinding ARROW_LEFT;\r\n    public static KeyBinding ARROW_RIGHT;\r\n\r\n    private static Vec3d movementDirection = Vec3d.ZERO;\r\n\r\n\r\n    @Override\r\n    public void onInitializeClient() {\r\n        Veil.init();\r\n\r\n        PhysicsRenderer.register();\r\n        org.copycraftDev.new_horizons.physics.PhysicsRenderer.register();\r\n\r\n\r\n        CelestialBodyRenderer.register();\r\n        LazuliRenderingRegistry.registerLazuliRenderPhases();\r\n\r\n        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.PRIVACY_GLASS, RenderLayer.getTranslucent());\r\n\r\n        ClientTickEvents.END_CLIENT_TICK.register(client -> {\r\n            BigBangClientManager.tick(client.world);\r\n\r\n\r\n        });\r\n\r\n        // Register particles\r\n        ParticleFactoryRegistry.getInstance().register(ModParticles.FOG_PARTICLE, spriteProvider ->\r\n                new ModParticlesClient.FogParticle.Factory(spriteProvider)\r\n        );\r\n\r\n        // Register keybindings\r\n        registerKeyBindings();\r\n\r\n        // Register particle and entity renderers\r\n        ParticleFactoryRegistry.getInstance().register(ModParticles.FOG_PARTICLE, FogParticle.Factory::new);\r\n        EntityRendererRegistry.register(ModEntities.SEAT_ENTITY, SeatEntityRenderer::new);\r\n\r\n        WorldRenderEvents.BEFORE_ENTITIES.register((context) -> {\r\n            MinecraftClient client = MinecraftClient.getInstance();\r\n\r\n            if (client.player == null) return;\r\n            var player = client.player;\r\n\r\n            // === Invert Pitch/Yaw if Player is in a Vehicle ===\r\n            if (player.hasVehicle()) {\r\n                double playerPitch = Math.toRadians(player.getYaw());   // Invert yaw\r\n                double playerYaw = -Math.toRadians(player.getPitch());  // Invert pitch\r\n                LazuliGeometryBuilder.setRenderingSpaceDir(playerPitch, 0, playerYaw);\r\n            }\r\n\r\n            // === Input Detection (per frame!) ===\r\n            Vec3d inputVec = Vec3d.ZERO;\r\n\r\n            if (ARROW_UP.isPressed()) {\r\n                inputVec = inputVec.add(0, 0, 1);\r\n            }\r\n            if (ARROW_DOWN.isPressed()) {\r\n                inputVec = inputVec.add(0, 0, -1);\r\n            }\r\n            if (ARROW_LEFT.isPressed()) {\r\n                inputVec = inputVec.add(1, 0, 0);\r\n            }\r\n            if (ARROW_RIGHT.isPressed()) {\r\n                inputVec = inputVec.add(-1, 0, 0);\r\n            }\r\n\r\n            Vec3d acceleration = inputVec;\r\n\r\n            if (inputVec.lengthSquared() > 0) {\r\n                inputVec = inputVec.normalize();\r\n\r\n                // \uD83D\uDC22 SLOWER acceleration\r\n                speed += (0.5 - speed) * 0.005; // Acceleration approaches 0.5 slower\r\n\r\n                // \uD83D\uDC0C SLOWER acceleration effect per frame\r\n                speed3d = speed3d.add(acceleration.multiply(0.005));\r\n            } else {\r\n                // \uD83E\uDDCA More subtle deceleration (feels \"floaty\")\r\n                speed *= 0.98;\r\n                speed3d = speed3d.multiply(0.96);\r\n            }\r\n\r\n            // ✋ Optional: Cap max speed\r\n            double maxSpeed = 0.2;\r\n            if (speed3d.length() > maxSpeed) {\r\n                speed3d = speed3d.normalize().multiply(maxSpeed);\r\n            }\r\n\r\n            movementDirection = inputVec;\r\n            Vec3d displacement = speed3d;\r\n\r\n            // === Apply Movement to Rendering Space ===\r\n            LazuliGeometryBuilder.rotatedSpaceDisplaceRenderingSpacePos(displacement);\r\n        });\r\n    }\r\n\r\n    private void registerKeyBindings() {\r\n        // Registering key bindings\r\n        ARROW_UP = new KeyBinding(\r\n                \"key.new_horizons.arrow_up\",   // Translation key\r\n                GLFW.GLFW_KEY_UP,              // Default key (Up Arrow)\r\n                \"category.new_horizons\"        // Keybinding category\r\n        );\r\n\r\n        ARROW_DOWN = new KeyBinding(\r\n                \"key.new_horizons.arrow_down\", // Translation key\r\n                GLFW.GLFW_KEY_DOWN,            // Default key (Down Arrow)\r\n                \"category.new_horizons\"        // Keybinding category\r\n        );\r\n\r\n        ARROW_LEFT = new KeyBinding(\r\n                \"key.new_horizons.arrow_left\", // Translation key\r\n                GLFW.GLFW_KEY_LEFT,            // Default key (Left Arrow)\r\n                \"category.new_horizons\"        // Keybinding category\r\n        );\r\n\r\n        ARROW_RIGHT = new KeyBinding(\r\n                \"key.new_horizons.arrow_right\",// Translation key\r\n                GLFW.GLFW_KEY_RIGHT,           // Default key (Right Arrow)\r\n                \"category.new_horizons\"        // Keybinding category\r\n        );\r\n\r\n        KeyBindingHelper.registerKeyBinding(ARROW_UP);\r\n        KeyBindingHelper.registerKeyBinding(ARROW_DOWN);\r\n        KeyBindingHelper.registerKeyBinding(ARROW_LEFT);\r\n        KeyBindingHelper.registerKeyBinding(ARROW_RIGHT);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java b/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java
--- a/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java	(date 1748176846000)
@@ -9,117 +9,137 @@
 import net.fabricmc.fabric.api.client.rendering.v1.EntityRendererRegistry;
 import net.fabricmc.fabric.api.client.rendering.v1.WorldRenderEvents;
 import net.minecraft.client.MinecraftClient;
+import net.minecraft.client.gui.screen.ingame.InventoryScreen;
 import net.minecraft.client.option.KeyBinding;
 import net.minecraft.client.render.RenderLayer;
+import net.minecraft.client.render.VertexConsumerProvider;
+import net.minecraft.client.render.entity.EntityRenderer;
+import net.minecraft.client.render.entity.EntityRendererFactory;
+import net.minecraft.client.util.math.MatrixStack;
+import net.minecraft.util.Identifier;
 import net.minecraft.util.math.Vec3d;
-import org.copycraftDev.new_horizons.client.misc.StickDashHandler;
 import org.copycraftDev.new_horizons.client.particle.ModParticlesClient;
 import org.copycraftDev.new_horizons.client.rendering.CelestialBodyRenderer;
 import org.copycraftDev.new_horizons.core.bigbang.BigBangClientManager;
+import org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;
 import org.copycraftDev.new_horizons.core.entity.ModEntities;
-import org.copycraftDev.new_horizons.core.particle.FogParticle;
 import org.copycraftDev.new_horizons.core.particle.ModParticles;
 import org.copycraftDev.new_horizons.client.render.entity.SeatEntityRenderer;
-import org.copycraftDev.new_horizons.extrastuff.PlanetTextureGenerator;
 import org.copycraftDev.new_horizons.lazuli_snnipets.LazuliGeometryBuilder;
 import org.copycraftDev.new_horizons.core.blocks.ModBlocks;
 import org.copycraftDev.new_horizons.lazuli_snnipets.LazuliRenderingRegistry;
+import org.copycraftDev.new_horizons.physics.PhysicsMain;
 import org.copycraftDev.new_horizons.physics.PhysicsRenderer;
 import org.lwjgl.glfw.GLFW;
 
+import java.util.Collection;
 
 public class NewHorizonsClient implements ClientModInitializer {
     private static float currentTickDelta = 0.0F;
     static double speed = 0;
     static Vec3d direction = Vec3d.ZERO;
     static Vec3d speed3d = Vec3d.ZERO;
+    public static boolean controlling = false;
 
-    // Declare key bindings without initializing them statically
     public static KeyBinding ARROW_UP;
     public static KeyBinding ARROW_DOWN;
     public static KeyBinding ARROW_LEFT;
     public static KeyBinding ARROW_RIGHT;
+    public static KeyBinding FRONT;
+    public static KeyBinding RIGHT;
+    public static KeyBinding BACK;
+    public static KeyBinding LEFT;
+    public static KeyBinding YAW_L;
+    public static KeyBinding YAW_R;
+    public static KeyBinding UP;
+    public static KeyBinding DOWN;
+    public static KeyBinding PITCH_UP;
+    public static KeyBinding PITCH_DOWN;
+    public static KeyBinding ROLL_LEFT;
+    public static KeyBinding ROLL_RIGHT;
 
     private static Vec3d movementDirection = Vec3d.ZERO;
 
+    public static void setControlling(boolean x) {
+        controlling = x;
+    }
+
+    public static boolean getControlling() {
+        return controlling;
+    }
 
     @Override
     public void onInitializeClient() {
+        registerKeyBindings();
+
         Veil.init();
-
+        PhysicsRenderer.register();
         PhysicsRenderer.register();
-        org.copycraftDev.new_horizons.physics.PhysicsRenderer.register();
-
 
         CelestialBodyRenderer.register();
         LazuliRenderingRegistry.registerLazuliRenderPhases();
 
+        ClientTickEvents.END_CLIENT_TICK.register(client -> {
+            if (client.player == null) return;
+            if (controlling) {
+                if (client.options.dropKey.isPressed()) {
+                    client.options.dropKey.setPressed(false);
+                }
+                if (client.options.inventoryKey.isPressed()) {
+                    client.options.inventoryKey.setPressed(false);
+                }
+                if (client.currentScreen instanceof InventoryScreen) {
+                    client.setScreen(null);
+                }
+            }
+        });
+
         BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.PRIVACY_GLASS, RenderLayer.getTranslucent());
 
         ClientTickEvents.END_CLIENT_TICK.register(client -> {
             BigBangClientManager.tick(client.world);
-
-
         });
 
-        // Register particles
-        ParticleFactoryRegistry.getInstance().register(ModParticles.FOG_PARTICLE, spriteProvider ->
-                new ModParticlesClient.FogParticle.Factory(spriteProvider)
-        );
-
-        // Register keybindings
-        registerKeyBindings();
-
-        // Register particle and entity renderers
-        ParticleFactoryRegistry.getInstance().register(ModParticles.FOG_PARTICLE, FogParticle.Factory::new);
+        ParticleFactoryRegistry.getInstance().register(ModParticles.FOG_PARTICLE, ModParticlesClient.FogParticle.Factory::new);
         EntityRendererRegistry.register(ModEntities.SEAT_ENTITY, SeatEntityRenderer::new);
 
-        WorldRenderEvents.BEFORE_ENTITIES.register((context) -> {
+        WorldRenderEvents.BEFORE_ENTITIES.register(context -> {
             MinecraftClient client = MinecraftClient.getInstance();
+            if (client.player == null || !controlling) return;
 
-            if (client.player == null) return;
             var player = client.player;
-
-            // === Invert Pitch/Yaw if Player is in a Vehicle ===
             if (player.hasVehicle()) {
-                double playerPitch = Math.toRadians(player.getYaw());   // Invert yaw
-                double playerYaw = -Math.toRadians(player.getPitch());  // Invert pitch
+                double playerPitch = Math.toRadians(player.getYaw());
+                double playerYaw = -Math.toRadians(player.getPitch());
                 LazuliGeometryBuilder.setRenderingSpaceDir(playerPitch, 0, playerYaw);
             }
 
-            // === Input Detection (per frame!) ===
             Vec3d inputVec = Vec3d.ZERO;
+            Vec3d rotationInput = Vec3d.ZERO;
 
-            if (ARROW_UP.isPressed()) {
-                inputVec = inputVec.add(0, 0, 1);
-            }
-            if (ARROW_DOWN.isPressed()) {
-                inputVec = inputVec.add(0, 0, -1);
-            }
-            if (ARROW_LEFT.isPressed()) {
-                inputVec = inputVec.add(1, 0, 0);
-            }
-            if (ARROW_RIGHT.isPressed()) {
-                inputVec = inputVec.add(-1, 0, 0);
-            }
+            if (FRONT.isPressed()) inputVec = inputVec.add(0, 0, 1);
+            if (BACK.isPressed()) inputVec = inputVec.add(0, 0, -1);
+            if (RIGHT.isPressed()) inputVec = inputVec.add(1, 0, 0);
+            if (LEFT.isPressed()) inputVec = inputVec.add(-1, 0, 0);
+            if (UP.isPressed()) inputVec = inputVec.add(0, 1, 0);
+            if (DOWN.isPressed()) inputVec = inputVec.add(0, -1, 0);
 
-            Vec3d acceleration = inputVec;
+            if (YAW_L.isPressed()) rotationInput = rotationInput.add(0, 1, 0);
+            if (YAW_R.isPressed()) rotationInput = rotationInput.add(0, -1, 0);
+            if (PITCH_UP.isPressed()) rotationInput = rotationInput.add(1, 0, 0);
+            if (PITCH_DOWN.isPressed()) rotationInput = rotationInput.add(-1, 0, 0);
+            if (ROLL_LEFT.isPressed()) rotationInput = rotationInput.add(0, 0, 1);
+            if (ROLL_RIGHT.isPressed()) rotationInput = rotationInput.add(0, 0, -1);
 
             if (inputVec.lengthSquared() > 0) {
                 inputVec = inputVec.normalize();
-
-                // 🐢 SLOWER acceleration
-                speed += (0.5 - speed) * 0.005; // Acceleration approaches 0.5 slower
-
-                // 🐌 SLOWER acceleration effect per frame
-                speed3d = speed3d.add(acceleration.multiply(0.005));
+                speed += (0.5 - speed) * 0.005;
+                speed3d = speed3d.add(inputVec.multiply(0.005));
             } else {
-                // 🧊 More subtle deceleration (feels "floaty")
                 speed *= 0.98;
                 speed3d = speed3d.multiply(0.96);
             }
 
-            // ✋ Optional: Cap max speed
             double maxSpeed = 0.2;
             if (speed3d.length() > maxSpeed) {
                 speed3d = speed3d.normalize().multiply(maxSpeed);
@@ -127,41 +147,61 @@
 
             movementDirection = inputVec;
             Vec3d displacement = speed3d;
-
-            // === Apply Movement to Rendering Space ===
             LazuliGeometryBuilder.rotatedSpaceDisplaceRenderingSpacePos(displacement);
+
+            Collection<PhysicsMain.PhysicsObject> allObjects = PhysicsMain.PHYSICS_MANAGER.getAllObjects();
+            if (!allObjects.isEmpty()) {
+                PhysicsMain.PhysicsObject activeShip = allObjects.iterator().next();
+                activeShip.addVelocity(displacement);
+                if (rotationInput.lengthSquared() > 0) {
+                    activeShip.addRotation(rotationInput.multiply(0.5));
+                }
+            }
         });
+
+        EntityRendererRegistry.register(ModEntities.BLOCK_COLLIDER,
+                ctx -> new EntityRenderer<BlockColliderEntity>(ctx) {
+                    @Override
+                    public void render(BlockColliderEntity entity, float yaw, float tickDelta,
+                                       MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light) {}
+                    @Override
+                    public Identifier getTexture(BlockColliderEntity entity) { return null; }
+                });
     }
 
     private void registerKeyBindings() {
-        // Registering key bindings
-        ARROW_UP = new KeyBinding(
-                "key.new_horizons.arrow_up",   // Translation key
-                GLFW.GLFW_KEY_UP,              // Default key (Up Arrow)
-                "category.new_horizons"        // Keybinding category
-        );
-
-        ARROW_DOWN = new KeyBinding(
-                "key.new_horizons.arrow_down", // Translation key
-                GLFW.GLFW_KEY_DOWN,            // Default key (Down Arrow)
-                "category.new_horizons"        // Keybinding category
-        );
-
-        ARROW_LEFT = new KeyBinding(
-                "key.new_horizons.arrow_left", // Translation key
-                GLFW.GLFW_KEY_LEFT,            // Default key (Left Arrow)
-                "category.new_horizons"        // Keybinding category
-        );
-
-        ARROW_RIGHT = new KeyBinding(
-                "key.new_horizons.arrow_right",// Translation key
-                GLFW.GLFW_KEY_RIGHT,           // Default key (Right Arrow)
-                "category.new_horizons"        // Keybinding category
-        );
+        ARROW_UP = new KeyBinding("key.new_horizons.arrow_up", GLFW.GLFW_KEY_UP, "category.new_horizons");
+        ARROW_DOWN = new KeyBinding("key.new_horizons.arrow_down", GLFW.GLFW_KEY_DOWN, "category.new_horizons");
+        ARROW_LEFT = new KeyBinding("key.new_horizons.arrow_left", GLFW.GLFW_KEY_LEFT, "category.new_horizons");
+        ARROW_RIGHT = new KeyBinding("key.new_horizons.arrow_right", GLFW.GLFW_KEY_RIGHT, "category.new_horizons");
+        FRONT = new KeyBinding("key.new_horizons.w", GLFW.GLFW_KEY_W, "category.new_horizons");
+        RIGHT = new KeyBinding("key.new_horizons.d", GLFW.GLFW_KEY_D, "category.new_horizons");
+        BACK = new KeyBinding("key.new_horizons.s", GLFW.GLFW_KEY_S, "category.new_horizons");
+        LEFT = new KeyBinding("key.new_horizons.a", GLFW.GLFW_KEY_A, "category.new_horizons");
+        YAW_L = new KeyBinding("key.new_horizons.q", GLFW.GLFW_KEY_Q, "category.new_horizons");
+        YAW_R = new KeyBinding("key.new_horizons.e", GLFW.GLFW_KEY_E, "category.new_horizons");
+        UP = new KeyBinding("key.new_horizons.up", GLFW.GLFW_KEY_KP_9, "category.new_horizons");
+        DOWN = new KeyBinding("key.new_horizons.down", GLFW.GLFW_KEY_KP_3, "category.new_horizons");
+        PITCH_UP = new KeyBinding("key.new_horizons.pitch_up", GLFW.GLFW_KEY_KP_8, "category.new_horizons");
+        PITCH_DOWN = new KeyBinding("key.new_horizons.pitch_down", GLFW.GLFW_KEY_KP_2, "category.new_horizons");
+        ROLL_LEFT = new KeyBinding("key.new_horizons.roll_left", GLFW.GLFW_KEY_KP_4, "category.new_horizons");
+        ROLL_RIGHT = new KeyBinding("key.new_horizons.roll_right", GLFW.GLFW_KEY_KP_6, "category.new_horizons");
 
         KeyBindingHelper.registerKeyBinding(ARROW_UP);
         KeyBindingHelper.registerKeyBinding(ARROW_DOWN);
         KeyBindingHelper.registerKeyBinding(ARROW_LEFT);
         KeyBindingHelper.registerKeyBinding(ARROW_RIGHT);
+        KeyBindingHelper.registerKeyBinding(FRONT);
+        KeyBindingHelper.registerKeyBinding(RIGHT);
+        KeyBindingHelper.registerKeyBinding(BACK);
+        KeyBindingHelper.registerKeyBinding(LEFT);
+        KeyBindingHelper.registerKeyBinding(YAW_L);
+        KeyBindingHelper.registerKeyBinding(YAW_R);
+        KeyBindingHelper.registerKeyBinding(UP);
+        KeyBindingHelper.registerKeyBinding(DOWN);
+        KeyBindingHelper.registerKeyBinding(PITCH_UP);
+        KeyBindingHelper.registerKeyBinding(PITCH_DOWN);
+        KeyBindingHelper.registerKeyBinding(ROLL_LEFT);
+        KeyBindingHelper.registerKeyBinding(ROLL_RIGHT);
     }
 }
Index: src/main/java/org/copycraftDev/new_horizons/ModCommands.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons;\r\n\r\nimport com.mojang.brigadier.arguments.BoolArgumentType;\r\nimport com.mojang.brigadier.arguments.IntegerArgumentType;\r\nimport com.mojang.brigadier.arguments.StringArgumentType;\r\nimport nazario.liby.api.registry.auto.LibyAutoRegister;\r\nimport net.fabricmc.fabric.api.command.v2.CommandRegistrationCallback;\r\nimport net.minecraft.client.MinecraftClient;\r\nimport net.minecraft.entity.decoration.ArmorStandEntity;\r\nimport net.minecraft.server.command.CommandManager;\r\nimport net.minecraft.server.command.ServerCommandSource;\r\nimport net.minecraft.server.network.ServerPlayerEntity;\r\nimport net.minecraft.server.world.ServerWorld;\r\nimport net.minecraft.text.Text;\r\nimport net.minecraft.world.GameMode;\r\nimport org.copycraftDev.new_horizons.client.planets.CelestialBodyRegistry;\r\nimport org.copycraftDev.new_horizons.client.rendering.CelestialBodyRenderer;\r\nimport org.copycraftDev.new_horizons.client.rendering.ScreenOverlayRenderer;\r\nimport org.copycraftDev.new_horizons.core.bigbang.BigBangClientManager;\r\nimport org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliGeometryBuilder;\r\nimport org.copycraftDev.new_horizons.physics.block.AssemblerBlock;\r\n\r\n/**\r\n * All /new_horizons commands are server-side only.\r\n * Directly invokes client-side renderers without networking (unsupported in dedicated server).\r\n */\r\n@LibyAutoRegister(method = \"registerCommands\")\r\npublic class ModCommands {\r\n    public static void registerCommands() {\r\n        CommandRegistrationCallback.EVENT.register((dispatcher, registryAccess, environment) -> {\r\n            dispatcher.register(\r\n                    CommandManager.literal(\"new_horizons\")\r\n                            .requires(src -> src.hasPermissionLevel(2))\r\n\r\n                            // reload planet data\r\n                            .then(CommandManager.literal(\"reloadPlanets\")\r\n                                    .executes(ctx -> {\r\n                                       CelestialBodyRegistry.reloadPlanets();\r\n                                        return 1;\r\n                                    })\r\n                            )\r\n\r\n                            .then(CommandManager.literal(\"setassemblermaxrange\")\r\n                                    .then(CommandManager.argument(\"value\", IntegerArgumentType.integer(1))\r\n                                            .executes(ctx -> {\r\n                                                int val = IntegerArgumentType.getInteger(ctx, \"value\");\r\n                                                AssemblerBlock.maxRange = val;\r\n                                                ctx.getSource().sendFeedback(() -> Text.of(\"Assembler max range set to \" + val), false);\r\n                                                return 1;\r\n                                            })\r\n                                    )\r\n                            )\r\n\r\n\r\n                            // trigger kaboom effect\r\n                            .then(CommandManager.literal(\"kaboom\")\r\n                                    .then(CommandManager.argument(\"planet\", StringArgumentType.string())\r\n                                            .executes(ctx -> {\r\n                                                String planet = StringArgumentType.getString(ctx, \"planet\");\r\n                                                CelestialBodyRenderer.kaboom(planet);\r\n                                                return 1;\r\n                                            })\r\n                                    )\r\n                            )\r\n\r\n                            // restore explosions\r\n                            .then(CommandManager.literal(\"restore\")\r\n                                    .executes(ctx -> {\r\n                                        CelestialBodyRenderer.restore();\r\n                                        return 1;\r\n                                    })\r\n                            )\r\n\r\n                            // toggle planet rendering on/off\r\n                            .then(CommandManager.literal(\"toggleRender\")\r\n                                            .executes(ctx -> {\r\n                                                CelestialBodyRenderer.setShouldRender(!CelestialBodyRenderer.shouldRender);\r\n                                                System.out.println(\"Planet rendering \" + (CelestialBodyRenderer.shouldRender ? \"enabled\" : \"disabled\"));\r\n                                                return 1;\r\n                                            })\r\n                                    )\r\n\r\n\r\n                            // blackout: full-screen black + message\r\n                            .then(CommandManager.literal(\"blackout\")\r\n                                    .then(CommandManager.argument(\"message\", StringArgumentType.greedyString())\r\n                                            .executes(ctx -> {\r\n                                                String msg = StringArgumentType.getString(ctx, \"message\");\r\n                                                ScreenOverlayRenderer.showOverlay(msg);\r\n                                                return 1;\r\n                                            })\r\n                                    )\r\n                            )\r\n\r\n                            // clear overlay\r\n                            .then(CommandManager.literal(\"clearOverlay\")\r\n                                    .executes(ctx -> {\r\n                                        ScreenOverlayRenderer.clearOverlay();\r\n                                        return 1;\r\n                                    })\r\n                            )\r\n                            // initiate bigbang particle event\r\n                            // /new_horizons bigbang <count> <radius>\r\n                            .then(CommandManager.literal(\"bigbang\")\r\n                                    .then(CommandManager.argument(\"count\", IntegerArgumentType.integer(1))\r\n                                            .then(CommandManager.argument(\"radius\", IntegerArgumentType.integer(1, 200))\r\n                                                    .executes(ctx -> {\r\n                                                        int count = IntegerArgumentType.getInteger(ctx, \"count\");\r\n                                                        int radius = IntegerArgumentType.getInteger(ctx, \"radius\");\r\n\r\n                                                        if (ctx.getSource().getServer().isDedicated()) {\r\n                                                            ctx.getSource().sendError(Text.of(\"This only works in singleplayer.\"));\r\n                                                            return 0;\r\n                                                        }\r\n\r\n                                                        MinecraftClient client = MinecraftClient.getInstance();\r\n                                                        client.execute(() -> BigBangClientManager.spawnParticles( count, radius));\r\n\r\n                                                        ctx.getSource().sendFeedback(() -> Text.of(\"Big Bang initiated with \" + count + \" particles in \" + radius + \" block radius!\"), false);\r\n                                                        return 1;\r\n                                                    })\r\n                                            )\r\n                                    ))\r\n                            // toggle bigbang particles\r\n                            .then(CommandManager.literal(\"executeBigBang\")\r\n                                    .executes(ctx -> {\r\n                                        ServerPlayerEntity player = ctx.getSource().getPlayer();\r\n                                        BigBangCutsceneManager.execute(player);\r\n                                        return 1;\r\n                                    })\r\n                            )\r\n\r\n\r\n\r\n            );\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/ModCommands.java b/src/main/java/org/copycraftDev/new_horizons/ModCommands.java
--- a/src/main/java/org/copycraftDev/new_horizons/ModCommands.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/ModCommands.java	(date 1748175364000)
@@ -13,8 +13,10 @@
 import net.minecraft.server.world.ServerWorld;
 import net.minecraft.text.Text;
 import net.minecraft.world.GameMode;
+import org.copycraftDev.new_horizons.client.NewHorizonsClient;
 import org.copycraftDev.new_horizons.client.planets.CelestialBodyRegistry;
 import org.copycraftDev.new_horizons.client.rendering.CelestialBodyRenderer;
+import org.copycraftDev.new_horizons.client.rendering.CelestialBodySkyRenderer;
 import org.copycraftDev.new_horizons.client.rendering.ScreenOverlayRenderer;
 import org.copycraftDev.new_horizons.core.bigbang.BigBangClientManager;
 import org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;
@@ -76,10 +78,18 @@
                             .then(CommandManager.literal("toggleRender")
                                             .executes(ctx -> {
                                                 CelestialBodyRenderer.setShouldRender(!CelestialBodyRenderer.shouldRender);
+                                                CelestialBodySkyRenderer.setShouldRender(CelestialBodyRenderer.shouldRender);
                                                 System.out.println("Planet rendering " + (CelestialBodyRenderer.shouldRender ? "enabled" : "disabled"));
                                                 return 1;
                                             })
                                     )
+
+                            .then(CommandManager.literal("toggleshipcontroll")
+                                    .executes(ctx -> {
+                                        NewHorizonsClient.setControlling(!NewHorizonsClient.getControlling());
+                                        return 1;
+                                    })
+                            )
 
 
                             // blackout: full-screen black + message
Index: src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.physics;\r\n\r\nimport net.minecraft.util.math.Vec3d;\r\n\r\npublic class PhysicsConfig {\r\n    public static final double GRAVITY = -0.04;\r\n    public static final double DRAG = 0.998;\r\n    public static final double TERMINAL_VELOCITY = -2.0;\r\n    public static final Vec3d ROTATIONAL_DAMPING = new Vec3d(0.98, 0.98, 0.98);\r\n    public static final double FRICTION = 1;\r\n    public static final double BOUNCE_FACTOR = 1;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java
--- a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java	(date 1748177182000)
@@ -3,10 +3,10 @@
 import net.minecraft.util.math.Vec3d;
 
 public class PhysicsConfig {
-    public static final double GRAVITY = -0.04;
+    public static final double GRAVITY = -0.4;
     public static final double DRAG = 0.998;
-    public static final double TERMINAL_VELOCITY = -2.0;
-    public static final Vec3d ROTATIONAL_DAMPING = new Vec3d(0.98, 0.98, 0.98);
+    public static final double TERMINAL_VELOCITY = 2.0;
+    public static final Vec3d ROTATIONAL_DAMPING = new Vec3d(0, 0, 0);
     public static final double FRICTION = 1;
-    public static final double BOUNCE_FACTOR = 1;
+    public static final double BOUNCE_FACTOR = 0;
 }
Index: src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.physics;\r\n\r\nimport net.minecraft.block.BlockState;\r\nimport net.minecraft.block.Blocks;\r\nimport net.minecraft.block.entity.BlockEntity;\r\nimport net.minecraft.entity.Entity;\r\nimport net.minecraft.server.MinecraftServer;\r\nimport net.minecraft.server.world.ServerWorld;\r\nimport net.minecraft.util.math.*;\r\nimport net.minecraft.world.WorldAccess;\r\nimport org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;\r\nimport org.copycraftDev.new_horizons.core.entity.ModEntities;\r\n\r\nimport java.util.*;\r\n\r\npublic class PhysicsMain {\r\n    public static final PhysicsManager PHYSICS_MANAGER = new PhysicsManager();\r\n\r\n    public static class PhysicsManager {\r\n        private static final List<PhysicsObject> activeObjects = new ArrayList<>();\r\n\r\n\r\n        /** create a new object at pos, remembering the block‑grid origin */\r\n        public PhysicsObject create(ServerWorld world, Vec3d pos, BlockPos origin) {\r\n            PhysicsObject obj = new PhysicsObject(pos, origin);\r\n            activeObjects.add(obj);\r\n            return obj;\r\n        }\r\n        public void removeObject(PhysicsObject object) {\r\n            activeObjects.remove(object);\r\n        }\r\n        public List<PhysicsObject> getAllObjects() {\r\n            return activeObjects;\r\n        }\r\n\r\n        /** call once per tick on server */\r\n        public static void tickAll(MinecraftServer world) {\r\n            for (PhysicsObject obj : new ArrayList<>(activeObjects)) {\r\n                obj.tick(world.getOverworld());\r\n                BlockAttachmentHandler.attachDetachedBlocks(world.getOverworld(), obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class PhysicsObject {\r\n        private final BlockPos origin;\r\n        private Vec3d position;\r\n        private Vec3d velocity = Vec3d.ZERO;\r\n        private Vec3d rotation = Vec3d.ZERO;\r\n        private Box localBounds = null;\r\n\r\n        private final Map<BlockPos, BlockState> blocks = new HashMap<>();\r\n        final Map<BlockPos, BlockEntity> blockEntities = new HashMap<>();\r\n        private final List<BlockPos> previousGlobals = new ArrayList<>();\r\n        private final Map<PhysicsObject, Map<Vec3d, BlockColliderEntity>> colliders = new IdentityHashMap<>();\r\n\r\n        public PhysicsObject(Vec3d startPos, BlockPos origin) {\r\n            this.position = startPos;\r\n            this.origin = origin;\r\n        }\r\n\r\n        /** easy control methods **/\r\n        public void setVelocity(Vec3d v) { velocity = v; }\r\n        public void addVelocity(Vec3d dv) { velocity = velocity.add(dv); }\r\n        public void setRotation(Vec3d rotDegrees) { rotation = rotDegrees; }\r\n        public void addRotation(Vec3d dRot) { rotation = rotation.add(dRot); }\r\n        public BlockPos getOrigin() { return origin; }\r\n        public Vec3d getPosition() { return position; }\r\n        public Vec3d getVelocity() { return velocity; }\r\n        public Map<BlockPos, BlockEntity> getBlockEntities() {\r\n            return blockEntities;\r\n        }\r\n\r\n        public Map<BlockPos, BlockState> getBlocks() { return blocks; }\r\n\r\n        public void addBlock(BlockPos localPos, BlockState state, BlockEntity be) {\r\n            blocks.put(localPos, state);\r\n            if (be != null) blockEntities.put(localPos, be);\r\n            localBounds = null;\r\n        }\r\n\r\n        public void tick(ServerWorld world) {\r\n            for (PhysicsObject obj : PHYSICS_MANAGER.getAllObjects()) {\r\n                Map<Vec3d, BlockColliderEntity> map = colliders.computeIfAbsent(obj, o -> new HashMap<>());\r\n\r\n                for (var entry : obj.getBlocks().entrySet()) {\r\n                    Vec3d offset = Vec3d.of(entry.getKey());\r\n                    if (!map.containsKey(offset)) {\r\n                        BlockColliderEntity c = new BlockColliderEntity(ModEntities.BLOCK_COLLIDER, world);\r\n                        world.spawnEntity(c);\r\n                        c.init(obj, offset);\r\n                        map.put(offset, c);\r\n                    }\r\n                    map.get(offset).init(obj, offset);\r\n                }\r\n\r\n                map.keySet().removeIf(off -> {\r\n                    boolean gone = !obj.getBlocks().containsKey(off);\r\n                    if (gone) map.get(off).remove(Entity.RemovalReason.DISCARDED); // or .KILLED/.UNLOADED\r\n                    return gone;\r\n                });\r\n\r\n                // These must be done for each object!\r\n                obj.applyGravity();\r\n                Vec3d attempted = obj.velocity;\r\n                Vec3d moved = obj.doMovement(world, attempted);\r\n                obj.position = obj.position.add(moved);\r\n                obj.updateWorldBlocks(world);\r\n            }\r\n        }\r\n\r\n\r\n        private void applyGravity() {\r\n            velocity = velocity.add(0, PhysicsConfig.GRAVITY, 0);\r\n            if (velocity.y < PhysicsConfig.TERMINAL_VELOCITY) {\r\n                velocity = new Vec3d(velocity.x, PhysicsConfig.TERMINAL_VELOCITY, velocity.z);\r\n            }\r\n        }\r\n\r\n        private Vec3d doMovement(WorldAccess world, Vec3d attempted) {\r\n            Box bounds = getWorldBounds();\r\n            Vec3d moved = attempted;\r\n\r\n            // X axis\r\n            moved = tryMove(world, bounds, moved.x, 0, 0);\r\n            bounds = bounds.offset(moved.x, 0, 0);\r\n            // Y axis\r\n            double my = tryMove(world, bounds, 0, moved.y, 0).y;\r\n            moved = new Vec3d(moved.x, my, moved.z);\r\n            bounds = bounds.offset(0, my, 0);\r\n            // Z axis\r\n            double mz = tryMove(world, bounds, 0, 0, moved.z).z;\r\n            moved = new Vec3d(moved.x, moved.y, mz);\r\n\r\n            // bounce & friction\r\n            if (moved.y != attempted.y) velocity = new Vec3d(velocity.x, -velocity.y * PhysicsConfig.BOUNCE_FACTOR, velocity.z);\r\n            if (moved.x != attempted.x) velocity = new Vec3d(velocity.x * PhysicsConfig.FRICTION, velocity.y, velocity.z);\r\n            if (moved.z != attempted.z) velocity = new Vec3d(velocity.x, velocity.y, velocity.z * PhysicsConfig.FRICTION);\r\n\r\n            return moved;\r\n        }\r\n\r\n        private Vec3d tryMove(WorldAccess world, Box bounds, double dx, double dy, double dz) {\r\n            Box nb = bounds.offset(dx, dy, dz);\r\n            return collides(world, nb) ? Vec3d.ZERO : new Vec3d(dx, dy, dz);\r\n        }\r\n\r\n        private boolean collides(WorldAccess world, Box box) {\r\n            // —————— 1) world collision (unchanged) ——————\r\n            int minX = MathHelper.floor(box.minX), maxX = MathHelper.ceil(box.maxX);\r\n            int minY = MathHelper.floor(box.minY), maxY = MathHelper.ceil(box.maxY);\r\n            int minZ = MathHelper.floor(box.minZ), maxZ = MathHelper.ceil(box.maxZ);\r\n            BlockPos.Mutable mpos = new BlockPos.Mutable();\r\n            for (int x = minX; x < maxX; x++) {\r\n                for (int y = minY; y < maxY; y++) {\r\n                    for (int z = minZ; z < maxZ; z++) {\r\n                        mpos.set(x, y, z);\r\n                        BlockState s = world.getBlockState(mpos);\r\n                        if (!s.isAir() && s.getCollisionShape(world, mpos).getBoundingBoxes().stream()\r\n                                .anyMatch(bb -> Box.from(new BlockBox(mpos)).offset(mpos).intersects(box))) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // —————— 2) self‑collision: treat each stored block as collision shape ——————\r\n            Box worldBounds = getWorldBounds();\r\n            Vec3d objPos = getPosition();\r\n            for (BlockPos local : blocks.keySet()) {\r\n                // get that block’s AABB in world coords\r\n                Box bb = new Box(\r\n                        objPos.x + local.getX(),\r\n                        objPos.y + local.getY(),\r\n                        objPos.z + local.getZ(),\r\n                        objPos.x + local.getX() + 1,\r\n                        objPos.y + local.getY() + 1,\r\n                        objPos.z + local.getZ() + 1\r\n                );\r\n                if (bb.intersects(box)) {\r\n                    return true;\r\n                }\r\n\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        private Box getLocalBounds() {\r\n            if (localBounds != null) return localBounds;\r\n            Box b = null;\r\n            for (BlockPos p : blocks.keySet()) {\r\n                Box bb = new Box(p.getX(), p.getY(), p.getZ(),\r\n                        p.getX()+1, p.getY()+1, p.getZ()+1);\r\n                b = (b==null)? bb : b.union(bb);\r\n            }\r\n            localBounds = b;\r\n            return b;\r\n        }\r\n\r\n        public Box getWorldBounds() {\r\n            Box lb = getLocalBounds();\r\n            return new Box(lb.minX + position.x, lb.minY + position.y, lb.minZ + position.z,\r\n                    lb.maxX + position.x, lb.maxY + position.y, lb.maxZ + position.z);\r\n        }\r\n\r\n        private void updateWorldBlocks(ServerWorld world) {\r\n            // 1) remove last tick’s blocks from the world\r\n            for (BlockPos oldPos : previousGlobals) {\r\n                world.setBlockState(oldPos, Blocks.AIR.getDefaultState(), 3);\r\n            }\r\n            previousGlobals.clear();\r\n\r\n            // 2) place this tick’s blocks with flag=3 (update listeners & collision)\r\n            for (Map.Entry<BlockPos, BlockState> entry : blocks.entrySet()) {\r\n                BlockPos local = entry.getKey();\r\n                BlockState state = entry.getValue();\r\n                BlockPos global = new BlockPos(\r\n                        (int) Math.floor(position.x) + local.getX(),\r\n                        (int) Math.floor(position.y) + local.getY(),\r\n                        (int) Math.floor(position.z) + local.getZ()\r\n                );\r\n                world.setBlockState(global, state, 3);\r\n                previousGlobals.add(global);\r\n            }\r\n        }\r\n\r\n\r\n        public Vec3d getRotation() {\r\n            return rotation;\r\n        }\r\n\r\n        public boolean isAlive() {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java
--- a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java	(date 1747912716000)
@@ -7,6 +7,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.world.ServerWorld;
 import net.minecraft.util.math.*;
+import net.minecraft.world.World;
 import net.minecraft.world.WorldAccess;
 import org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;
 import org.copycraftDev.new_horizons.core.entity.ModEntities;
@@ -19,25 +20,24 @@
     public static class PhysicsManager {
         private static final List<PhysicsObject> activeObjects = new ArrayList<>();
 
-
-        /** create a new object at pos, remembering the block‑grid origin */
         public PhysicsObject create(ServerWorld world, Vec3d pos, BlockPos origin) {
             PhysicsObject obj = new PhysicsObject(pos, origin);
             activeObjects.add(obj);
             return obj;
         }
+
         public void removeObject(PhysicsObject object) {
             activeObjects.remove(object);
         }
+
         public List<PhysicsObject> getAllObjects() {
             return activeObjects;
         }
 
-        /** call once per tick on server */
-        public static void tickAll(MinecraftServer world) {
+        public static void tickAll(MinecraftServer server) {
+            ServerWorld world = server.getOverworld();
             for (PhysicsObject obj : new ArrayList<>(activeObjects)) {
-                obj.tick(world.getOverworld());
-                BlockAttachmentHandler.attachDetachedBlocks(world.getOverworld(), obj);
+                obj.tick(world);
             }
         }
     }
@@ -50,7 +50,7 @@
         private Box localBounds = null;
 
         private final Map<BlockPos, BlockState> blocks = new HashMap<>();
-        final Map<BlockPos, BlockEntity> blockEntities = new HashMap<>();
+        private final Map<BlockPos, BlockEntity> blockEntities = new HashMap<>();
         private final List<BlockPos> previousGlobals = new ArrayList<>();
         private final Map<PhysicsObject, Map<Vec3d, BlockColliderEntity>> colliders = new IdentityHashMap<>();
 
@@ -59,19 +59,19 @@
             this.origin = origin;
         }
 
-        /** easy control methods **/
         public void setVelocity(Vec3d v) { velocity = v; }
         public void addVelocity(Vec3d dv) { velocity = velocity.add(dv); }
         public void setRotation(Vec3d rotDegrees) { rotation = rotDegrees; }
         public void addRotation(Vec3d dRot) { rotation = rotation.add(dRot); }
+
         public BlockPos getOrigin() { return origin; }
         public Vec3d getPosition() { return position; }
         public Vec3d getVelocity() { return velocity; }
-        public Map<BlockPos, BlockEntity> getBlockEntities() {
-            return blockEntities;
-        }
+        public Vec3d getRotation() { return rotation; }
+        public boolean isAlive() { return true; }
 
         public Map<BlockPos, BlockState> getBlocks() { return blocks; }
+        public Map<BlockPos, BlockEntity> getBlockEntities() { return blockEntities; }
 
         public void addBlock(BlockPos localPos, BlockState state, BlockEntity be) {
             blocks.put(localPos, state);
@@ -96,11 +96,10 @@
 
                 map.keySet().removeIf(off -> {
                     boolean gone = !obj.getBlocks().containsKey(off);
-                    if (gone) map.get(off).remove(Entity.RemovalReason.DISCARDED); // or .KILLED/.UNLOADED
+                    if (gone) map.get(off).remove(Entity.RemovalReason.DISCARDED);
                     return gone;
                 });
 
-                // These must be done for each object!
                 obj.applyGravity();
                 Vec3d attempted = obj.velocity;
                 Vec3d moved = obj.doMovement(world, attempted);
@@ -109,7 +108,6 @@
             }
         }
 
-
         private void applyGravity() {
             velocity = velocity.add(0, PhysicsConfig.GRAVITY, 0);
             if (velocity.y < PhysicsConfig.TERMINAL_VELOCITY) {
@@ -121,18 +119,14 @@
             Box bounds = getWorldBounds();
             Vec3d moved = attempted;
 
-            // X axis
             moved = tryMove(world, bounds, moved.x, 0, 0);
             bounds = bounds.offset(moved.x, 0, 0);
-            // Y axis
             double my = tryMove(world, bounds, 0, moved.y, 0).y;
             moved = new Vec3d(moved.x, my, moved.z);
             bounds = bounds.offset(0, my, 0);
-            // Z axis
             double mz = tryMove(world, bounds, 0, 0, moved.z).z;
             moved = new Vec3d(moved.x, moved.y, mz);
 
-            // bounce & friction
             if (moved.y != attempted.y) velocity = new Vec3d(velocity.x, -velocity.y * PhysicsConfig.BOUNCE_FACTOR, velocity.z);
             if (moved.x != attempted.x) velocity = new Vec3d(velocity.x * PhysicsConfig.FRICTION, velocity.y, velocity.z);
             if (moved.z != attempted.z) velocity = new Vec3d(velocity.x, velocity.y, velocity.z * PhysicsConfig.FRICTION);
@@ -146,11 +140,11 @@
         }
 
         private boolean collides(WorldAccess world, Box box) {
-            // —————— 1) world collision (unchanged) ——————
             int minX = MathHelper.floor(box.minX), maxX = MathHelper.ceil(box.maxX);
             int minY = MathHelper.floor(box.minY), maxY = MathHelper.ceil(box.maxY);
             int minZ = MathHelper.floor(box.minZ), maxZ = MathHelper.ceil(box.maxZ);
             BlockPos.Mutable mpos = new BlockPos.Mutable();
+
             for (int x = minX; x < maxX; x++) {
                 for (int y = minY; y < maxY; y++) {
                     for (int z = minZ; z < maxZ; z++) {
@@ -164,11 +158,8 @@
                 }
             }
 
-            // —————— 2) self‑collision: treat each stored block as collision shape ——————
-            Box worldBounds = getWorldBounds();
             Vec3d objPos = getPosition();
             for (BlockPos local : blocks.keySet()) {
-                // get that block’s AABB in world coords
                 Box bb = new Box(
                         objPos.x + local.getX(),
                         objPos.y + local.getY(),
@@ -177,23 +168,19 @@
                         objPos.y + local.getY() + 1,
                         objPos.z + local.getZ() + 1
                 );
-                if (bb.intersects(box)) {
-                    return true;
-                }
-
+                if (bb.intersects(box)) return true;
             }
 
             return false;
         }
 
-
         private Box getLocalBounds() {
             if (localBounds != null) return localBounds;
             Box b = null;
             for (BlockPos p : blocks.keySet()) {
                 Box bb = new Box(p.getX(), p.getY(), p.getZ(),
-                        p.getX()+1, p.getY()+1, p.getZ()+1);
-                b = (b==null)? bb : b.union(bb);
+                        p.getX() + 1, p.getY() + 1, p.getZ() + 1);
+                b = (b == null) ? bb : b.union(bb);
             }
             localBounds = b;
             return b;
@@ -201,18 +188,15 @@
 
         public Box getWorldBounds() {
             Box lb = getLocalBounds();
-            return new Box(lb.minX + position.x, lb.minY + position.y, lb.minZ + position.z,
-                    lb.maxX + position.x, lb.maxY + position.y, lb.maxZ + position.z);
+            return new Box(
+                    lb.minX + position.x, lb.minY + position.y, lb.minZ + position.z,
+                    lb.maxX + position.x, lb.maxY + position.y, lb.maxZ + position.z
+            );
         }
 
         private void updateWorldBlocks(ServerWorld world) {
-            // 1) remove last tick’s blocks from the world
-            for (BlockPos oldPos : previousGlobals) {
-                world.setBlockState(oldPos, Blocks.AIR.getDefaultState(), 3);
-            }
             previousGlobals.clear();
 
-            // 2) place this tick’s blocks with flag=3 (update listeners & collision)
             for (Map.Entry<BlockPos, BlockState> entry : blocks.entrySet()) {
                 BlockPos local = entry.getKey();
                 BlockState state = entry.getValue();
@@ -221,18 +205,9 @@
                         (int) Math.floor(position.y) + local.getY(),
                         (int) Math.floor(position.z) + local.getZ()
                 );
-                world.setBlockState(global, state, 3);
                 previousGlobals.add(global);
+                // You may update blocks in the world here if needed
             }
         }
-
-
-        public Vec3d getRotation() {
-            return rotation;
-        }
-
-        public boolean isAlive() {
-            return true;
-        }
     }
 }
Index: src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.client.rendering;\r\n\r\nimport com.mojang.blaze3d.systems.RenderSystem;\r\nimport net.minecraft.client.gl.ShaderProgram;\r\nimport net.minecraft.client.render.*;\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.client.planets.CelestialBodyRegistry;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LapisRenderer;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliGeometryBuilder;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliRenderingRegistry;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliShaderRegistry;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\nimport java.util.concurrent.atomic.AtomicReference;\r\n\r\npublic class CelestialBodyRenderer {\r\n\r\n    // toggle this to turn rendering on/off each frame\r\n    public static boolean shouldRender = true;\r\n    public static void setShouldRender(boolean flag) {\r\n        shouldRender = flag;\r\n    }\r\n\r\n    private static ShaderProgram\r\n            RENDER_TYPE_PLANET,\r\n            RENDER_TYPE_PLANET_WITH_NIGHT,\r\n            RENDER_TYPE_ATMOSPHERE,\r\n            RENDER_TYPE_STAR,\r\n            RENDER_TYPE_STAR_AURA,\r\n            RENDERTYPE_KABOOM_OOHHHHHHHHHHHH_SHINY_1;\r\n\r\n    public static Set<String> explodedPlanets = new HashSet<>();\r\n    private static String explodingPlanet = null;\r\n    public static float explosionStartingTime;\r\n    public static AtomicReference<Float> time = new AtomicReference<>(0f);\r\n\r\n    public static final Identifier CELESTIAL_SYNC =\r\n            Identifier.of(\"new_horizons\", \"celestial_sync\");\r\n\r\n    public static void register() {\r\n        LazuliRenderingRegistry.register((context, viewProjMatrix, tickDelta) -> {\r\n            // *** early-out if rendering is disabled ***\r\n            if (!shouldRender) return;\r\n\r\n            Tessellator tessellator = Tessellator.getInstance();\r\n            time.updateAndGet(v -> v + context.tickCounter().getTickDelta(true));\r\n            Camera camera = context.camera();\r\n\r\n            LapisRenderer.farAwayRendering();\r\n\r\n            // load shaders\r\n            RENDER_TYPE_PLANET = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_PLANET);\r\n            RENDER_TYPE_PLANET_WITH_NIGHT = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_PLANET_WITH_NIGHT);\r\n            RENDER_TYPE_ATMOSPHERE = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_ATMOSPHERE);\r\n            RENDER_TYPE_STAR = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_STAR);\r\n            RENDER_TYPE_STAR_AURA = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_STAR_AURA);\r\n            RENDERTYPE_KABOOM_OOHHHHHHHHHHHH_SHINY_1 = LazuliShaderRegistry.getShader(ModShaders.RENDERTYPE_KABOOM_OOHHHHHHHHHHHH_SHINY_1);\r\n\r\n            if (RENDER_TYPE_PLANET == null) return;\r\n\r\n            // expire old explosion\r\n            if (time.get() - explosionStartingTime > 200f) {\r\n                explodingPlanet = null;\r\n            }\r\n\r\n            Map<Identifier, CelestialBodyRegistry.CelestialBodyData> planets =\r\n                    CelestialBodyRegistry.getAllPlanets();\r\n\r\n            for (var entry : planets.entrySet()) {\r\n\r\n                Vec3d orig=entry.getValue().center;\r\n                float ang= (float) (time.get()*entry.getValue().orbitSpeed);\r\n                double cos=Math.cos(ang), sin=Math.sin(ang);\r\n                Vec3d orb=new Vec3d(orig.x*cos - orig.z*sin, orig.y, orig.x*sin + orig.z*cos);\r\n\r\n                var planet = entry.getValue();\r\n                float angle = (float) planet.rotationSpeed * time.get();\r\n                double distance = planet.center.subtract(camera.getPos())\r\n.distanceTo(camera.getPos());\r\n                int resolution = Math.min(Math.max((int)( 300 - 0.1*( distance - planet.radius )),32),500);\r\n\r\n                RenderSystem.setShaderFogColor(0,0,0,0);\r\n\r\n\r\n                // bind textures\r\n                RenderSystem.setShaderTexture(0, planet.surfaceTexture);\r\n                RenderSystem.setShaderTexture(1, planet.heightMap);\r\n                RenderSystem.setShaderTexture(2, planet.normalMap);\r\n\r\n                BufferBuilder bb = tessellator.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION_TEXTURE_COLOR_NORMAL);\r\n\r\n                if (!explodedPlanets.contains(planet.name)) {\r\n                    if (planet.isStar) {\r\n                        // star core\r\n                        LapisRenderer.setShader(RENDER_TYPE_STAR);\r\n                        LazuliGeometryBuilder.buildTexturedSphere(\r\n                                resolution,\r\n                                (float) planet.radius, // scale down\r\n                                orb,\r\n                                new Vec3d(0, 1, 0),\r\n                                angle,\r\n                                false,\r\n                                camera,\r\n                                viewProjMatrix,\r\n                                bb\r\n                        );\r\n\r\n                        bb = LapisRenderer.drawAndReset(bb, tessellator);\r\n\r\n                        // star aura\r\n                        LapisRenderer.setShaderTexture(0, planet.surfaceTexture);\r\n                        LapisRenderer.setShader(RENDER_TYPE_STAR_AURA);\r\n                        LapisRenderer.enableCull();\r\n                        LazuliGeometryBuilder.buildTexturedSphere(\r\n                                resolution,\r\n                                (float) planet.radius,\r\n                                orb,\r\n                                new Vec3d(0, 1, 0),\r\n                                angle,\r\n                                false,\r\n                                camera,\r\n                                viewProjMatrix,\r\n                                bb\r\n                        );\r\n\r\n                        LapisRenderer.drawAndReset(bb, tessellator);\r\n\r\n                    } else {\r\n                        // planet surface (day/night)\r\n                        if (planet.hasDarkAlbedoMap) {\r\n                            LapisRenderer.setShaderTexture(3, planet.darkAlbedoMap);\r\n                            LapisRenderer.setShader(RENDER_TYPE_PLANET_WITH_NIGHT);\r\n                        } else {\r\n                            LapisRenderer.setShader(RENDER_TYPE_PLANET);\r\n                        }\r\n                        LazuliGeometryBuilder.buildTexturedSphere(\r\n                                resolution,\r\n                                (float) planet.radius, // scale down\r\n                                orb,\r\n                                new Vec3d(0, 1, 0),\r\n                                angle,\r\n                                false,\r\n                                camera,\r\n                                viewProjMatrix,\r\n                                bb\r\n                        );\r\n\r\n                        bb = LapisRenderer.drawAndReset(bb, tessellator);\r\n\r\n                        // atmosphere\r\n                        if (planet.hasAtmosphere) {\r\n                            RenderSystem.enableBlend();\r\n                            LapisRenderer.setShaderTexture(0, planet.darkAlbedoMap);\r\n                            LapisRenderer.setShader(RENDER_TYPE_ATMOSPHERE);\r\n                            LapisRenderer.enableCull();\r\n                            LazuliGeometryBuilder.buildTexturedSphere(\r\n                                    resolution / 2,\r\n                                    (float) planet.atmosphereRadius,\r\n                                    planet.center,\r\n                                    new Vec3d(0,1,0),\r\n                                    0,\r\n                                    true,\r\n                                    camera,\r\n                                    viewProjMatrix,\r\n                                    bb\r\n                            );\r\n                            bb = LapisRenderer.drawAndReset(bb, tessellator);\r\n\r\n                            RenderSystem.disableBlend();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // explosion effect (unchanged) …\r\n                if (planet.name.equals(explodingPlanet)) {\r\n                    float progress = time.get() - explosionStartingTime;\r\n                    // … inner glow, outer flash, ring\r\n                    // (same as your original code)\r\n                }\r\n            }\r\n\r\n            // cleanup\r\n            LapisRenderer.cleanupRenderSystem();\r\n        });\r\n    }\r\n\r\n    public static void kaboom(String planetName) {\r\n        explodedPlanets.add(planetName);\r\n        explodingPlanet = planetName;\r\n        explosionStartingTime = time.get();\r\n    }\r\n\r\n    public static void restore() {\r\n        explodedPlanets.clear();\r\n        explodingPlanet = null;\r\n    }\r\n\r\n\r\n\r\n\r\n    public static Vec3d getPlanetLocation(String planetName) {\r\n        for (var body : CelestialBodyRegistry.getAllPlanets().values()) {\r\n            if (body.name.equals(planetName)) {\r\n                return body.center;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java b/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java
--- a/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java	(date 1748178228000)
@@ -1,6 +1,9 @@
 package org.copycraftDev.new_horizons.client.rendering;
 
 import com.mojang.blaze3d.systems.RenderSystem;
+import foundry.veil.api.client.render.VeilRenderSystem;
+import foundry.veil.api.client.render.light.DirectionalLight;
+import foundry.veil.api.client.render.light.PointLight;
 import net.minecraft.client.gl.ShaderProgram;
 import net.minecraft.client.render.*;
 import net.minecraft.util.Identifier;
@@ -33,12 +36,11 @@
             RENDERTYPE_KABOOM_OOHHHHHHHHHHHH_SHINY_1;
 
     public static Set<String> explodedPlanets = new HashSet<>();
+    private static PointLight sunshine;
     private static String explodingPlanet = null;
     public static float explosionStartingTime;
     public static AtomicReference<Float> time = new AtomicReference<>(0f);
 
-    public static final Identifier CELESTIAL_SYNC =
-            Identifier.of("new_horizons", "celestial_sync");
 
     public static void register() {
         LazuliRenderingRegistry.register((context, viewProjMatrix, tickDelta) -> {
@@ -94,7 +96,10 @@
 
                 if (!explodedPlanets.contains(planet.name)) {
                     if (planet.isStar) {
-                        // star core
+                        sunshine = (PointLight) new PointLight()
+                                .setColor(0.9f, 0.9f, 1.0f)
+                                .setBrightness(200.0f);
+                        VeilRenderSystem.renderer().getLightRenderer().addLight(sunshine);
                         LapisRenderer.setShader(RENDER_TYPE_STAR);
                         LazuliGeometryBuilder.buildTexturedSphere(
                                 resolution,
Index: src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.client.planets;\r\n\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.NewHorizonsMain;\r\nimport org.copycraftDev.new_horizons.extrastuff.PlanetTextureGenerator;\r\nimport org.copycraftDev.new_horizons.extrastuff.TextureResizer;\r\n\r\nimport java.io.File;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class CelestialBodyRegistry {\r\n    private static final Map<Identifier, CelestialBodyData> REGISTERED_PLANETS = new HashMap<>();\r\n\r\n    static {\r\n        registerDefaults();\r\n    }\r\n\r\n\r\n    public static void reloadPlanets() {\r\n        REGISTERED_PLANETS.clear();\r\n        registerDefaults();\r\n        System.out.println(\"\uD83D\uDD04 Reloaded all planets\");\r\n    }\r\n\r\n\r\n    private static void registerDefaults() {\r\n        register(createSun());\r\n        register(createMercury());\r\n        register(createVenus());\r\n        register(createEarth());\r\n        register(createMars());\r\n        register(createJupiter());\r\n        register(createSaturn());\r\n        register(createUranus());\r\n        register(createNeptune());\r\n    }\r\n\r\n    private static CelestialBodyData createSun() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Sun\";\r\n        p.center = new Vec3d(0, 100, 0);\r\n        p.radius = 140;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.0;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 10;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath = \"textures/test_textures/8k_sun.jpg\";\r\n        p.heightMapPath       = \"textures/test_textures/sun_height_map.png\";\r\n        p.normalMapPath       = \"textures/test_textures/sun_normal_map.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createMercury() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Mercury\";\r\n        p.center = new Vec3d(0, 100, -390);\r\n        p.radius = 50;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_mercury.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/mercury_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/mercury_normal_map.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createVenus() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Venus\";\r\n        p.center = new Vec3d(10, 100, -720);\r\n        p.radius = 80;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_venus_surface.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/venus_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/venus_normal_map.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createEarth() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Earth\";\r\n        p.center = new Vec3d(20, 100, -1000);\r\n        p.radius = 100;\r\n        p.rotationSpeed = 0.003;\r\n        p.orbitSpeed = 0.002;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 105;\r\n        p.hasDarkAlbedoMap = true;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/earth_texture.png\";\r\n        p.atmosphereTexturePath = \"textures/test_textures/8k_earth_clouds.jpg\";\r\n        p.darkAlbedoMapPath     = \"textures/test_textures/earth_night.png\";\r\n        p.heightMapPath         = \"textures/test_textures/earth_height.png\";\r\n        p.normalMapPath         = \"textures/test_textures/earth_normal.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createMars() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Mars\";\r\n        p.center = new Vec3d(30, 100, -1520);\r\n        p.radius = 80;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_mars.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/mars_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/mars_normal.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createJupiter() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Jupiter\";\r\n        p.center = new Vec3d(40, 100, -5200);\r\n        p.radius = 110;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 115;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_jupiter.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/jupiter_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/jupitertest.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createSaturn() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Saturn\";\r\n        p.center = new Vec3d(50, 100, -9540);\r\n        p.radius = 110;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_saturn.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/saturn_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/saturn_normal_map.jpg\";\r\n        p.ringsTexturePath      = \"textures/test_textures/saturn_ring.jpg\";\r\n        p.ringsInnerRadius      = 100;\r\n        p.ringsOuterRadius      = 100;\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createUranus() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Uranus\";\r\n        p.center = new Vec3d(50, 100, -19200);\r\n        p.radius = 120;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/2k_uranus.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/earth_height.png\";\r\n        p.normalMapPath         = \"textures/test_textures/earth_normal.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createNeptune() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Neptune\";\r\n        p.center = new Vec3d(60, 100, -30006);\r\n        p.radius = 130;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 135;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/2k_neptune.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/neptune_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/neptune_normal.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static void register(CelestialBodyData planet) {\r\n        String key = planet.name.toLowerCase();\r\n\r\n        if (planet.usesGeneratedTexture) {\r\n            String genDir = \"assets/\" + NewHorizonsMain.MOD_ID + \"/textures/generated/\" + key;\r\n            File d = new File(genDir);\r\n            if (!d.exists() && !d.mkdirs()) {\r\n                System.err.println(\"Cannot create \" + genDir);\r\n            }\r\n            PlanetTextureGenerator gen = new PlanetTextureGenerator.Builder()\r\n                    .size(2048)\r\n                    .seed(123456L)\r\n                    .octaves(5)\r\n                    .frequency(3f)\r\n                    .build();\r\n            gen.generateAndRegister(NewHorizonsMain.MOD_ID, key);\r\n\r\n            planet.surfaceTexture = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_albedo.png\");\r\n            planet.heightMap      = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_height.png\");\r\n            planet.normalMap      = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_normal.png\");\r\n\r\n            planet.surfaceTexture = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_albedo.png\",\r\n                    4096,2048, key + \"_alb_resized\", false\r\n            );\r\n            planet.heightMap = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_height.png\",\r\n                    4096,2048, key + \"_hgt_resized\", false\r\n            );\r\n            planet.normalMap = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_normal.png\",\r\n                    4096,2048, key + \"_nrm_resized\", false\r\n            );\r\n        }\r\n\r\n        // handle rings if present\r\n        if (planet.ringsTexturePath != null) {\r\n            planet.ringsTexture = NewHorizonsMain.id(planet.ringsTexturePath);\r\n        }\r\n\r\n        REGISTERED_PLANETS.put(NewHorizonsMain.id(key), planet);\r\n        System.out.println(\"✅ Registered planet \" + planet.name);\r\n    }\r\n\r\n    public static CelestialBodyData getPlanet(Identifier id) {\r\n        return REGISTERED_PLANETS.get(id);\r\n    }\r\n\r\n    public static Map<Identifier,CelestialBodyData> getAllPlanets() {\r\n        return REGISTERED_PLANETS;\r\n    }\r\n\r\n    public static double getOrbitAngle(CelestialBodyData data, double worldTime, double partialTick) {\r\n        return (worldTime + partialTick) * data.orbitSpeed;\r\n    }\r\n\r\n    public static float getRotationAngle(CelestialBodyData data, double worldTime, double partialTick) {\r\n        double angle = (worldTime + partialTick) * data.rotationSpeed;\r\n        return (float)(angle % 360.0);\r\n    }\r\n\r\n    public static Vec3d getPlanetLocation(CelestialBodyData data, double worldTime, double partialTick) {\r\n        double θ = getOrbitAngle(data, worldTime, partialTick);\r\n        double r = data.center.length();\r\n        double x = data.center.x + r * Math.cos(θ);\r\n        double z = data.center.z + r * Math.sin(θ);\r\n        double y = data.center.y;\r\n        return new Vec3d(x, y, z);\r\n    }\r\n\r\n    public static class CelestialBodyData {\r\n        public String name;\r\n        public Vec3d center;\r\n        public double radius;\r\n        public double rotationSpeed;\r\n\r\n        public transient Identifier surfaceTexture;\r\n        public transient Identifier cloudsTexture;\r\n        public transient Identifier atmosphereTexture;\r\n        public transient Identifier darkAlbedoMap;\r\n        public transient Identifier heightMap;\r\n        public transient Identifier normalMap;\r\n\r\n        public transient Identifier ringsTexture;\r\n        public float ringsInnerRadius;\r\n        public float ringsOuterRadius;\r\n\r\n        public double orbitSpeed;\r\n        public boolean hasAtmosphere;\r\n        public boolean isStar;\r\n        public int[] atmosphereColor1;\r\n        public int[] atmosphereColor2;\r\n        public double atmosphereRadius;\r\n        public boolean hasDarkAlbedoMap;\r\n        String surfaceTexturePath, cloudsTexturePath, atmosphereTexturePath;\r\n        String darkAlbedoMapPath, normalMapPath, heightMapPath;\r\n        String ringsTexturePath;\r\n        public boolean usesGeneratedTexture;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java b/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java
--- a/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java	(date 1747756428000)
@@ -119,6 +119,7 @@
         p.darkAlbedoMapPath     = "textures/test_textures/earth_night.png";
         p.heightMapPath         = "textures/test_textures/earth_height.png";
         p.normalMapPath         = "textures/test_textures/earth_normal.png";
+        p.seed                  = 72456;
 
         return p;
     }
@@ -140,6 +141,7 @@
         p.surfaceTexturePath    = "textures/test_textures/8k_mars.jpg";
         p.heightMapPath         = "textures/test_textures/mars_height.jpg";
         p.normalMapPath         = "textures/test_textures/mars_normal.jpg";
+        p.seed                  = 2332;
 
         return p;
     }
@@ -161,6 +163,7 @@
         p.surfaceTexturePath    = "textures/test_textures/8k_jupiter.jpg";
         p.heightMapPath         = "textures/test_textures/jupiter_height.jpg";
         p.normalMapPath         = "textures/test_textures/jupitertest.jpg";
+        p.seed                  = 23453;
 
         return p;
     }
@@ -185,6 +188,8 @@
         p.ringsTexturePath      = "textures/test_textures/saturn_ring.jpg";
         p.ringsInnerRadius      = 100;
         p.ringsOuterRadius      = 100;
+        p.seed                  = 06623;
+
         return p;
     }
 
@@ -205,6 +210,7 @@
         p.surfaceTexturePath    = "textures/test_textures/2k_uranus.jpg";
         p.heightMapPath         = "textures/test_textures/earth_height.png";
         p.normalMapPath         = "textures/test_textures/earth_normal.png";
+        p.seed                  = 07343;
 
         return p;
     }
@@ -226,6 +232,7 @@
         p.surfaceTexturePath    = "textures/test_textures/2k_neptune.jpg";
         p.heightMapPath         = "textures/test_textures/neptune_height.jpg";
         p.normalMapPath         = "textures/test_textures/neptune_normal.jpg";
+        p.seed                  = 02223;
 
         return p;
     }
@@ -233,6 +240,16 @@
     private static void register(CelestialBodyData planet) {
         String key = planet.name.toLowerCase();
 
+        if (!planet.usesGeneratedTexture) {
+            planet.surfaceTexture  = NewHorizonsMain.id( planet.surfaceTexturePath );
+            planet.heightMap       = NewHorizonsMain.id( planet.heightMapPath );
+            planet.normalMap       = NewHorizonsMain.id( planet.normalMapPath );
+
+            if (planet.darkAlbedoMapPath    != null) planet.darkAlbedoMap    = NewHorizonsMain.id( planet.darkAlbedoMapPath );
+            if (planet.atmosphereTexturePath!= null) planet.atmosphereTexture= NewHorizonsMain.id( planet.atmosphereTexturePath );
+            if (planet.ringsTexturePath     != null) planet.ringsTexture     = NewHorizonsMain.id( planet.ringsTexturePath );
+        }
+
         if (planet.usesGeneratedTexture) {
             String genDir = "assets/" + NewHorizonsMain.MOD_ID + "/textures/generated/" + key;
             File d = new File(genDir);
@@ -241,7 +258,7 @@
             }
             PlanetTextureGenerator gen = new PlanetTextureGenerator.Builder()
                     .size(2048)
-                    .seed(123456L)
+                    .seed(planet.seed != 0L ? planet.seed : 123456L)
                     .octaves(5)
                     .frequency(3f)
                     .build();
@@ -273,7 +290,7 @@
             planet.ringsTexture = NewHorizonsMain.id(planet.ringsTexturePath);
         }
 
-        REGISTERED_PLANETS.put(NewHorizonsMain.id(key), planet);
+        REGISTERED_PLANETS.put(Identifier.of(key), planet);
         System.out.println("✅ Registered planet " + planet.name);
     }
 
@@ -331,5 +348,6 @@
         String darkAlbedoMapPath, normalMapPath, heightMapPath;
         String ringsTexturePath;
         public boolean usesGeneratedTexture;
+        public long seed;
     }
 }
Index: src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.mixin;\r\n\r\nimport net.fabricmc.api.EnvType;\r\nimport net.fabricmc.api.Environment;\r\nimport net.minecraft.client.MinecraftClient;\r\nimport net.minecraft.client.gui.DrawContext;\r\nimport net.minecraft.client.gui.screen.TitleScreen;\r\nimport net.minecraft.client.render.Camera;\r\nimport net.minecraft.text.Text;\r\nimport net.minecraft.util.Identifier;\r\nimport org.copycraftDev.new_horizons.client.rendering.CelestialBodyRendererPanorama;\r\nimport org.copycraftDev.new_horizons.extrastuff.TextureResizer;\r\nimport org.joml.Vector3f;\r\nimport org.lwjgl.glfw.GLFW;\r\nimport org.spongepowered.asm.mixin.Final;\r\nimport org.spongepowered.asm.mixin.Mixin;\r\nimport org.spongepowered.asm.mixin.Shadow;\r\nimport org.spongepowered.asm.mixin.Unique;\r\nimport org.spongepowered.asm.mixin.injection.At;\r\nimport org.spongepowered.asm.mixin.injection.Inject;\r\nimport org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\r\nimport org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\r\n\r\nimport javax.annotation.Nullable;\r\n\r\n@Environment(EnvType.CLIENT)\r\n@Mixin(TitleScreen.class)\r\npublic abstract class TitleScreenMixin extends net.minecraft.client.gui.screen.Screen {\r\n    @Unique private boolean solarView = false, showSidebar = false;\r\n    @Unique private boolean draggingZ = false, draggingS = false, dragOrbit = false, dragPan = false;\r\n    @Unique private float targetZoom = 0.115f, smoothZoom = 0.115f;\r\n    @Unique private float targetSpeed = 1, smoothSpeed = 1;\r\n    @Unique private float panX, panY, lastX, lastY;\r\n    @Unique private float rotX = 0, rotY = 90, rotZ = 45;\r\n    @Unique private String selected = \"sun\", hovered = null;\r\n    @Unique private final int icon = 20;\r\n    @Shadow private float backgroundAlpha;\r\n    @Shadow @Final private static org.slf4j.Logger LOGGER;\r\n    @Shadow @Nullable private net.minecraft.client.gui.screen.SplashTextRenderer splashText;\r\n\r\n    @Shadow protected abstract void init();\r\n\r\n    private static Identifier splashRes = null;\r\n\r\n    protected TitleScreenMixin(Text t) { super(t); }\r\n\r\n    @Inject(method = \"init\", at = @At(\"HEAD\"))\r\n    public void onInit(CallbackInfo ci) {\r\n        selected = \"sun\";\r\n    }\r\n\r\n    @Inject(method = \"tick\", at = @At(\"HEAD\"))\r\n    public void onTick(CallbackInfo ci) {\r\n        if (!solarView) return;\r\n        if (!(selected == null)){\r\n        Camera cam = MinecraftClient.getInstance().gameRenderer.getCamera();\r\n        Vector3f tgt = CelestialBodyRendererPanorama.getPlanetLocation(selected).toVector3f();\r\n        long w = MinecraftClient.getInstance().getWindow().getHandle();\r\n        boolean left = GLFW.glfwGetMouseButton(w, GLFW.GLFW_MOUSE_BUTTON_LEFT) == GLFW.GLFW_PRESS;\r\n        boolean right = GLFW.glfwGetMouseButton(w, GLFW.GLFW_MOUSE_BUTTON_RIGHT) == GLFW.GLFW_PRESS;\r\n\r\n        // Hook zoom into camera distance: distance inversely proportional to smoothZoom\r\n        float r = 100f / smoothZoom;\r\n        float ax = (float) Math.toRadians(rotX), ay = (float) Math.toRadians(rotY);\r\n        float cx = tgt.x + r * (float) Math.cos(ax) * (float) Math.cos(ay);\r\n        float cy = tgt.y + r * (float) Math.sin(ax);\r\n        float cz = tgt.z + r * (float) Math.cos(ax) * (float) Math.sin(ay);\r\n        try {\r\n            var acc = (CameraAccessor) cam;\r\n            acc.invokeSetPos(cx, cy, cz);\r\n            acc.invokeSetRotation(rotY, rotX);\r\n        } catch (Exception e) {\r\n            LOGGER.warn(\"cam fail\", e);\r\n        }\r\n    }}\r\n\r\n    @Inject(method = \"renderBackground(Lnet/minecraft/client/gui/DrawContext;IIF)V\", at = @At(\"HEAD\"))\r\n    public void renderSolar(DrawContext ctx, int mx, int my, float d, CallbackInfo ci) {\r\n        int w = ctx.getScaledWindowWidth(), h = ctx.getScaledWindowHeight();\r\n        if (solarView) {\r\n            clearChildren();\r\n            splashText = null;\r\n        } else {\r\n            MinecraftClient client = MinecraftClient.getInstance();\r\n            init(client, w, h);\r\n\r\n            int sw = 265, sh = 66;\r\n            if (splashRes == null) {\r\n                Identifier resized = null;\r\n\r\n                // Try up to 2 times\r\n                for (int attempt = 1; attempt <= 2; attempt++) {\r\n                    try {\r\n                        resized = TextureResizer.resizeTexture(\r\n                                \"minecraft\",\r\n                                \"textures/gui/title/titlesplash.png\",\r\n                                sw, sh,\r\n                                \"ts_res\",\r\n                                false\r\n                        );\r\n                        if (resized != null) {\r\n                            break;\r\n                        }\r\n                    } catch (Exception e) {\r\n                        LOGGER.warn(\"Attempt #{} to resize splash texture failed\", attempt, e);\r\n                    }\r\n                }\r\n\r\n                if (resized != null) {\r\n                    splashRes = resized;\r\n                } else {\r\n                    LOGGER.warn(\"All resize attempts failed—using vanilla splash texture\");\r\n                    splashRes = Identifier.of(\"minecraft\", \"textures/gui/title/titlesplash.png\");\r\n                }\r\n            }\r\n\r\n            // only draw if we have a non-null Identifier\r\n            if (splashRes != null) {\r\n                ctx.drawTexture(\r\n                        splashRes,\r\n                        w / 2 - sw / 2, 0,\r\n                        0, 0,\r\n                        sw, sh, sw, sh\r\n                );\r\n            }\r\n        }\r\n\r\n        smoothZoom  += (targetZoom  - smoothZoom ) * 0.15f;\r\n        smoothSpeed += (targetSpeed - smoothSpeed) * 0.15f;\r\n        CelestialBodyRendererPanorama.setRotationX(rotX);\r\n        CelestialBodyRendererPanorama.setRotationY(rotY);\r\n        CelestialBodyRendererPanorama.setRotationZ(rotZ);\r\n        CelestialBodyRendererPanorama.setScale(smoothZoom);\r\n        CelestialBodyRendererPanorama.setOffsetX(panX);\r\n        CelestialBodyRendererPanorama.setOffsetY(panY);\r\n        CelestialBodyRendererPanorama.setSimulationSpeed(targetSpeed);\r\n        CelestialBodyRendererPanorama.setPlanetZ(0);\r\n        CelestialBodyRendererPanorama.render(ctx, w, h, backgroundAlpha, d, solarView ? selected : null);\r\n\r\n\r\n    hovered = null;\r\n        for (var e : CelestialBodyRendererPanorama.getScreenPositions().entrySet()) {\r\n            float dx = mx - e.getValue().x, dy = my - e.getValue().y;\r\n            if (dx * dx + dy * dy < 100) { hovered = e.getKey(); break; }\r\n        }\r\n        if (hovered != null) {\r\n            var sp = CelestialBodyRendererPanorama.getScreenPositions().get(hovered);\r\n            ctx.fill((int) sp.x - 6, (int) sp.y - 6, (int) sp.x + 6, (int) sp.y + 6, 0x80FFFFFF);\r\n            int tx = mx + 8, ty = my + 8, tw = textRenderer.getWidth(hovered);\r\n            ctx.fill(tx - 2, ty - 2, tx + tw + 2, ty + 10, 0xAA000000);\r\n            ctx.drawText(textRenderer, Text.of(hovered), tx, ty, 0xFFFFFF, false);\r\n        }\r\n\r\n        if (solarView) {\r\n            ctx.drawText(textRenderer, Text.of(\"☰\"), w - icon, 5, 0xFFFFFF, false);\r\n            if (showSidebar) {\r\n                ctx.fill(w - 100, 0, w, h, 0xAA000000);\r\n                int y = 10;\r\n                for (String n : CelestialBodyRendererPanorama.getScreenPositions().keySet()) {\r\n                    ctx.drawText(textRenderer, Text.of(n), w - 95, y, 0xFFFFFF, false); y += 12;\r\n                }\r\n            }\r\n        }\r\n        int sy = h / 2 - 100, sh = 200;\r\n        ctx.fill(w / 2 - 30, h - 30, w / 2 + 30, h - 10, 0xAA000000);\r\n        ctx.drawText(textRenderer, Text.of(solarView ? \"Back\" : \"Start\"), w / 2 - 25, h - 26, 0xFFFFFF, false);\r\n        if (solarView) {\r\n            ctx.fill(w - 30, sy, w - 22, sy + sh, 0xAA333333);\r\n            ctx.fill(20, sy, 28, sy + sh, 0xAA333333);\r\n            int zy = sy + (int) ((1f - ((targetZoom - 0.01f) / 9.99f)) * (sh - 10));\r\n            int sy2 = sy + (int) ((1f - ((targetSpeed - 0.01f) / 4.99f)) * (sh - 10));\r\n            ctx.fill(w - 32, zy, w - 20, zy + 10, 0xFFAAAAAA);\r\n            ctx.fill(18, sy2, 30, sy2 + 10, 0xFF55FF55);\r\n        }\r\n    }\r\n\r\n    @Inject(method = \"renderBackground(Lnet/minecraft/client/gui/DrawContext;IIF)V\", at = @At(\"TAIL\"))\r\n    private void drag(DrawContext ctx, int mx, int my, float d, CallbackInfo ci) {\r\n        if (!solarView) return;\r\n        int w = ctx.getScaledWindowWidth(), h = ctx.getScaledWindowHeight();\r\n        int sy = h / 2 - 100, sh = 200;\r\n        boolean left = GLFW.glfwGetMouseButton(MinecraftClient.getInstance().getWindow().getHandle(), GLFW.GLFW_MOUSE_BUTTON_LEFT) == GLFW.GLFW_PRESS;\r\n        boolean right = GLFW.glfwGetMouseButton(MinecraftClient.getInstance().getWindow().getHandle(), GLFW.GLFW_MOUSE_BUTTON_RIGHT) == GLFW.GLFW_PRESS;\r\n\r\n        if (left && !draggingZ && mx >= w - 30 && mx <= w - 22 && my >= sy && my <= sy + sh) draggingZ = true;\r\n        if (left && !draggingS && mx >= 20 && mx <= 28 && my >= sy && my <= sy + sh) draggingS = true;\r\n        if (left && !dragOrbit && !draggingZ && !draggingS) dragOrbit = true;\r\n        if (right && !dragPan) dragPan = true;\r\n\r\n        if (draggingZ) { int c = Math.min(Math.max(my, sy), sy + sh - 10); float t = 1f - (c - sy) / (sh - 10f); targetZoom = 0.01f + t * 9.99f; }\r\n        if (draggingS) { int c = Math.min(Math.max(my, sy), sy + sh - 10); float t = 1f - (c - sy) / (sh - 10f); targetSpeed = 0.01f + t * 4.99f; }\r\n\r\n        float dx = mx - lastX, dy = my - lastY;\r\n        if (dragOrbit) { rotY = (rotY + dx) % 360; rotX = Math.max(-90, Math.min(90, rotX + dy)); }\r\n        if (dragPan) { panX += dx; panY += dy; }\r\n\r\n        lastX = mx; lastY = my;\r\n        if (!left) { draggingZ = draggingS = dragOrbit = false; }\r\n        if (!right) { dragPan = false; }\r\n    }\r\n\r\n    @Inject(method = \"mouseClicked\", at = @At(\"HEAD\"), cancellable = true)\r\n    private void click(double mx, double my, int btn, CallbackInfoReturnable<Boolean> cir) {\r\n        int w = width, h = height;\r\n        if (solarView) {\r\n            if (mx >= w - icon - 5 && mx <= w - 5 && my >= 5 && my <= 5 + icon) { showSidebar = !showSidebar; cir.setReturnValue(true); return; }\r\n            if (showSidebar && mx >= w - 100) {\r\n                int y = 10;\r\n                for (String n : CelestialBodyRendererPanorama.getScreenPositions().keySet()) {\r\n                    if (my >= y && my < y + 12) { selected = n; showSidebar = false; cir.setReturnValue(true); return; }\r\n                    y += 12;\r\n                }\r\n            }\r\n            if (hovered != null && btn == GLFW.GLFW_MOUSE_BUTTON_LEFT) { selected = hovered; cir.setReturnValue(true); return; }\r\n        }\r\n        if (mx >= w / 2 - 30 && mx <= w / 2 + 30 && my >= h - 30 && my <= h - 10) { solarView = !solarView; cir.setReturnValue(true); }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java b/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java
--- a/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java	(date 1747755536000)
@@ -110,7 +110,7 @@
                     splashRes = resized;
                 } else {
                     LOGGER.warn("All resize attempts failed—using vanilla splash texture");
-                    splashRes = Identifier.of("minecraft", "textures/gui/title/titlesplash.png");
+                    splashRes = Identifier.of("minecraft/textures/gui/title/titlesplash.png");
                 }
             }
 
Index: src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons;\r\n\r\nimport com.mojang.brigadier.CommandDispatcher;\r\nimport foundry.veil.Veil;\r\nimport nazario.liby.api.registry.auto.LibyEntrypoints;\r\nimport nazario.liby.api.registry.auto.LibyRegistryLoader;\r\nimport nazario.liby.api.registry.runtime.recipe.LibyIngredient;\r\nimport nazario.liby.api.registry.runtime.recipe.LibyRecipeRegistry;\r\nimport nazario.liby.api.registry.runtime.recipe.types.LibyShapelessCraftingRecipe;\r\nimport net.fabricmc.api.ModInitializer;\r\nimport net.fabricmc.fabric.api.event.lifecycle.v1.ServerLifecycleEvents;\r\nimport net.fabricmc.fabric.api.event.lifecycle.v1.ServerTickEvents;\r\nimport net.fabricmc.fabric.api.event.player.UseBlockCallback;\r\nimport net.minecraft.block.BlockState;\r\nimport net.minecraft.item.ItemPlacementContext;\r\nimport net.minecraft.item.ItemUsageContext;\r\nimport net.minecraft.registry.Registries;\r\nimport net.minecraft.registry.Registry;\r\nimport net.minecraft.server.command.ServerCommandSource;\r\nimport net.minecraft.server.network.ServerPlayerEntity;\r\nimport net.minecraft.sound.SoundEvent;\r\nimport net.minecraft.util.ActionResult;\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.BlockPos;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.client.planets.MeteorCommand;\r\nimport org.copycraftDev.new_horizons.client.planets.MeteorScheduler;\r\nimport org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;\r\nimport org.copycraftDev.new_horizons.core.blocks.ModBlocks;\r\nimport org.copycraftDev.new_horizons.core.entity.ModEntities;\r\nimport org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsMain;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsRenderer;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class NewHorizonsMain implements ModInitializer {\r\n\r\n    public static final String MOD_ID = \"new_horizons\";\r\n    public static final Logger LOGGER = LoggerFactory.getLogger(MOD_ID);\r\n    public static final SoundEvent ENGINE_AMBIANCE = register(\"engine_ambiance\");\r\n    public static final SoundEvent ENGINE_BROKEN   = register(\"engine_broken\");\r\n    public static final SoundEvent ENGINE_POWERUP  = register(\"engine_powerup\");\r\n\r\n    private static SoundEvent register(String name) {\r\n        Identifier id = Identifier.of(\"new_horizons\", name);\r\n        return Registry.register(Registries.SOUND_EVENT, id, SoundEvent.of(id));\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onInitialize() {\r\n        BlockColliderEntity.createAttributes();\r\n        ModEntities.registerAttributes();\r\n        LibyRegistryLoader.load(\"org.copycraftDev.new_horizons\", LOGGER, LibyEntrypoints.MAIN);\r\n        Veil.init();\r\n        ServerTickEvents.END_SERVER_TICK.register(MeteorScheduler::onServerTick);\r\n        ServerTickEvents.END_SERVER_TICK.register(PhysicsMain.PhysicsManager::tickAll);\r\n        PhysicsRenderer.register();\r\n        ServerLifecycleEvents.SERVER_STARTED.register(server -> {\r\n            CommandDispatcher<ServerCommandSource> dispatcher = server.getCommandManager().getDispatcher();\r\n            MeteorCommand.register(dispatcher);  // Register the custom command\r\n        });\r\n        ServerLifecycleEvents.SERVER_STARTED.register(server -> {\r\n            server.execute(() -> {\r\n                for (ServerPlayerEntity player : server.getPlayerManager().getPlayerList()) {\r\n                    BigBangCutsceneManager.execute(player);\r\n                }\r\n            });\r\n        });\r\n        UseBlockCallback.EVENT.register((player, world, hand, hit) -> {\r\n            if (world.isClient) return ActionResult.PASS;\r\n\r\n            // the exact click‐position as a Vec3d\r\n            Vec3d clickPos = hit.getPos();\r\n\r\n            for (PhysicsMain.PhysicsObject obj : PhysicsMain.PHYSICS_MANAGER.getAllObjects()) {\r\n                // is the click on the surface of this moving object?\r\n                if (obj.getWorldBounds().expand(1e-6).contains(clickPos)) {\r\n                    // wrap the usage into a placement context\r\n                    ItemUsageContext usageCtx = new ItemUsageContext(player, hand, hit);\r\n                    ItemPlacementContext placeCtx = new ItemPlacementContext(usageCtx);\r\n\r\n                    // ask the context what BlockState it would place\r\n                    BlockState toPlace = placeCtx.getWorld().getBlockState(BlockPos.ofFloored(clickPos));\r\n                    if (toPlace != null) {\r\n                        // compute local coordinate relative to this object's origin\r\n                        BlockPos base = new BlockPos(\r\n                                (int)Math.floor(obj.getPosition().x),\r\n                                (int)Math.floor(obj.getPosition().y),\r\n                                (int)Math.floor(obj.getPosition().z)\r\n                        );\r\n                        BlockPos local = hit.getBlockPos().subtract(base);\r\n\r\n                        // attach into the physics object\r\n                        obj.addBlock(local, toPlace, null);\r\n\r\n                        // consume one item if not in creative\r\n                        if (!player.isCreative()) {\r\n                            player.getStackInHand(hand).decrement(1);\r\n                        }\r\n                        return ActionResult.SUCCESS;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ActionResult.PASS;\r\n        });\r\n        createRecipes();\r\n\r\n\r\n    }\r\n    public void createRecipes() {\r\n        LibyRecipeRegistry.addRecipe(\r\n                new LibyShapelessCraftingRecipe(\r\n                        Identifier.of(MOD_ID, \"wood_top_planks\"),\r\n                        new LibyIngredient[]{\r\n                                LibyIngredient.createItem(ModBlocks.REDWOOD_LOGS)\r\n                        },\r\n                        ModBlocks.REDWOOD_PLANKS.liby$getId(),\r\n                        4\r\n                )\r\n        );\r\n    }\r\n\r\n\r\n\r\n    public static Identifier id(String name){\r\n        return Identifier.of(MOD_ID, name);\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java b/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java
--- a/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java	(date 1747912132000)
@@ -11,8 +11,12 @@
 import net.fabricmc.fabric.api.event.lifecycle.v1.ServerLifecycleEvents;
 import net.fabricmc.fabric.api.event.lifecycle.v1.ServerTickEvents;
 import net.fabricmc.fabric.api.event.player.UseBlockCallback;
+import net.fabricmc.fabric.api.event.player.UseEntityCallback;
 import net.minecraft.block.BlockState;
+import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.item.BlockItem;
 import net.minecraft.item.ItemPlacementContext;
+import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemUsageContext;
 import net.minecraft.registry.Registries;
 import net.minecraft.registry.Registry;
@@ -20,9 +24,15 @@
 import net.minecraft.server.network.ServerPlayerEntity;
 import net.minecraft.sound.SoundEvent;
 import net.minecraft.util.ActionResult;
+import net.minecraft.util.Hand;
 import net.minecraft.util.Identifier;
+import net.minecraft.util.hit.BlockHitResult;
+import net.minecraft.util.hit.EntityHitResult;
 import net.minecraft.util.math.BlockPos;
+import net.minecraft.util.math.Box;
+import net.minecraft.util.math.Direction;
 import net.minecraft.util.math.Vec3d;
+import net.minecraft.world.World;
 import org.copycraftDev.new_horizons.client.planets.MeteorCommand;
 import org.copycraftDev.new_horizons.client.planets.MeteorScheduler;
 import org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;
@@ -50,12 +60,18 @@
 
     @Override
     public void onInitialize() {
+        // Intercept placements on blocks adjacent to your collider
+        UseBlockCallback.EVENT.register(this::onUseBlock);
+
+        // Intercept right-click on the collider entity itself
+        UseEntityCallback.EVENT.register(this::onUseEntity);
         BlockColliderEntity.createAttributes();
         ModEntities.registerAttributes();
         LibyRegistryLoader.load("org.copycraftDev.new_horizons", LOGGER, LibyEntrypoints.MAIN);
         Veil.init();
         ServerTickEvents.END_SERVER_TICK.register(MeteorScheduler::onServerTick);
         ServerTickEvents.END_SERVER_TICK.register(PhysicsMain.PhysicsManager::tickAll);
+
         PhysicsRenderer.register();
         ServerLifecycleEvents.SERVER_STARTED.register(server -> {
             CommandDispatcher<ServerCommandSource> dispatcher = server.getCommandManager().getDispatcher();
@@ -122,7 +138,88 @@
                 )
         );
     }
+    private ActionResult onUseBlock(
+            PlayerEntity player,
+            World world,
+            Hand hand,
+            BlockHitResult hit
+    ) {
+        if (world.isClient) return ActionResult.PASS;
+
+        // Find any collider one block out in the clicked direction
+        BlockPos clicked = hit.getBlockPos();
+        Direction face = hit.getSide();
+        Box checkBox = new Box(clicked.offset(face));
+        var list = world.getEntitiesByClass(BlockColliderEntity.class, checkBox, e -> true);
+        if (list.isEmpty()) return ActionResult.PASS;
+
+        return interceptPlacement(player, hand, world, list.get(0), face, clicked);
+    }
+
+    private ActionResult onUseEntity(
+            PlayerEntity player,
+            World world,
+            Hand hand,
+            net.minecraft.entity.Entity entity,
+            EntityHitResult hitResult
+    ) {
+        if (world.isClient) return ActionResult.PASS;
+        if (!(entity instanceof BlockColliderEntity collider)) return ActionResult.PASS;
+        if (hitResult == null) return ActionResult.PASS;
+
+        // Determine which face was clicked via the hit vector
+        Vec3d hitPos = hitResult.getPos();
+        Direction face = getClickedFace(collider.calculateBoundingBox(), hitPos);
+        BlockPos basePos = collider.getBlockPos();
+
+        return interceptPlacement(player, hand, world, collider, face, basePos);
+    }
+
+    private ActionResult interceptPlacement(
+            PlayerEntity player,
+            Hand hand,
+            World world,
+            BlockColliderEntity collider,
+            Direction face,
+            BlockPos basePos
+    ) {
+        ItemStack stack = player.getStackInHand(hand);
+        if (!(stack.getItem() instanceof BlockItem bi)) return ActionResult.PASS;
 
+        BlockState toPlace = bi.getBlock().getDefaultState();
+        BlockPos placePos = basePos.offset(face);
+
+        onBlockPlacementIntercepted(toPlace, placePos, player, world);
+        return ActionResult.SUCCESS;
+    }
+
+    private void onBlockPlacementIntercepted(
+            BlockState state,
+            BlockPos pos,
+            PlayerEntity player,
+            World world
+    ) {
+        // Your custom logic here:
+        System.out.println("Intercepted placement of "
+                + state.getBlock().getTranslationKey()
+                + " at " + pos
+        );
+    }
+
+    private static Direction getClickedFace(Box box, Vec3d hitVec) {
+        double x = hitVec.x, y = hitVec.y, z = hitVec.z;
+        double dxMin = Math.abs(x - box.minX), dxMax = Math.abs(x - box.maxX);
+        double dyMin = Math.abs(y - box.minY), dyMax = Math.abs(y - box.maxY);
+        double dzMin = Math.abs(z - box.minZ), dzMax = Math.abs(z - box.maxZ);
+
+        double min = dxMin; Direction face = Direction.WEST;
+        if (dxMax < min) { min = dxMax; face = Direction.EAST; }
+        if (dyMin < min) { min = dyMin; face = Direction.DOWN; }
+        if (dyMax < min) { min = dyMax; face = Direction.UP; }
+        if (dzMin < min) { min = dzMin; face = Direction.NORTH; }
+        if (dzMax < min) { face = Direction.SOUTH; }
+        return face;
+    }
 
 
     public static Identifier id(String name){
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23__Changes_.xml	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ /dev/null	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]" date="1747409110096" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16.05.2025 17:23 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ /dev/null	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
@@ -1,217 +0,0 @@
-Index: src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.copycraftDev.new_horizons.client.planets;\r\n\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.NewHorizonsMain;\r\nimport org.copycraftDev.new_horizons.extrastuff.PlanetTextureGenerator;\r\nimport org.copycraftDev.new_horizons.extrastuff.TextureResizer;\r\n\r\nimport java.io.File;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class CelestialBodyRegistry {\r\n    private static final Map<Identifier, CelestialBodyData> REGISTERED_PLANETS = new HashMap<>();\r\n\r\n    static {\r\n        registerDefaults();\r\n    }\r\n\r\n\r\n    public static void reloadPlanets() {\r\n        REGISTERED_PLANETS.clear();\r\n        registerDefaults();\r\n        System.out.println(\"\uD83D\uDD04 Reloaded all planets\");\r\n    }\r\n\r\n\r\n    private static void registerDefaults() {\r\n        register(createSun());\r\n        register(createMercury());\r\n        register(createVenus());\r\n        register(createEarth());\r\n        register(createMars());\r\n        register(createJupiter());\r\n        register(createSaturn());\r\n        register(createUranus());\r\n        register(createNeptune());\r\n    }\r\n\r\n    private static CelestialBodyData createSun() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Sun\";\r\n        p.center = new Vec3d(0, 100, 0);\r\n        p.radius = 140;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.0;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 10;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath = \"textures/test_textures/8k_sun.jpg\";\r\n        p.heightMapPath       = \"textures/test_textures/sun_height_map.png\";\r\n        p.normalMapPath       = \"textures/test_textures/sun_normal_map.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createMercury() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Mercury\";\r\n        p.center = new Vec3d(0, 100, -390);\r\n        p.radius = 50;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_mercury.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/mercury_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/mercury_normal_map.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createVenus() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Venus\";\r\n        p.center = new Vec3d(10, 100, -720);\r\n        p.radius = 80;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_venus_surface.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/venus_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/venus_normal_map.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createEarth() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Earth\";\r\n        p.center = new Vec3d(20, 100, -1000);\r\n        p.radius = 100;\r\n        p.rotationSpeed = 0.003;\r\n        p.orbitSpeed = 0.002;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 105;\r\n        p.hasDarkAlbedoMap = true;\r\n        p.usesGeneratedTexture = false;\r\n        p.surfaceTexturePath    = \"textures/test_textures/earth_texture.png\";\r\n        p.atmosphereTexturePath = \"textures/test_textures/8k_earth_clouds.jpg\";\r\n        p.darkAlbedoMapPath     = \"textures/test_textures/earth_night.png\";\r\n        p.heightMapPath         = \"textures/test_textures/earth_height.png\";\r\n        p.normalMapPath         = \"textures/test_textures/earth_normal.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createMars() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Mars\";\r\n        p.center = new Vec3d(30, 100, -1520);\r\n        p.radius = 80;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = false;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_mars.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/mars_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/mars_normal.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createJupiter() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Jupiter\";\r\n        p.center = new Vec3d(40, 100, -5200);\r\n        p.radius = 110;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 115;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_jupiter.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/jupiter_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/jupitertest.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createSaturn() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Saturn\";\r\n        p.center = new Vec3d(50, 100, -9540);\r\n        p.radius = 110;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/8k_saturn.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/saturn_height_map.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/saturn_normal_map.jpg\";\r\n        p.ringsTexturePath      = \"textures/test_textures/saturn_ring.jpg\";\r\n        p.ringsInnerRadius      = 100;\r\n        p.ringsOuterRadius      = 100;\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createUranus() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Uranus\";\r\n        p.center = new Vec3d(50, 100, -19200);\r\n        p.radius = 120;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = false;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 0;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/2k_uranus.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/earth_height.png\";\r\n        p.normalMapPath         = \"textures/test_textures/earth_normal.png\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static CelestialBodyData createNeptune() {\r\n        CelestialBodyData p = new CelestialBodyData();\r\n        p.name = \"Neptune\";\r\n        p.center = new Vec3d(60, 100, -30006);\r\n        p.radius = 130;\r\n        p.rotationSpeed = 0.001;\r\n        p.orbitSpeed = 0.004;\r\n        p.hasAtmosphere = true;\r\n        p.isStar = true;\r\n        p.atmosphereColor1 = null;\r\n        p.atmosphereColor2 = null;\r\n        p.atmosphereRadius = 135;\r\n        p.hasDarkAlbedoMap = false;\r\n        p.usesGeneratedTexture = true;\r\n        p.surfaceTexturePath    = \"textures/test_textures/2k_neptune.jpg\";\r\n        p.heightMapPath         = \"textures/test_textures/neptune_height.jpg\";\r\n        p.normalMapPath         = \"textures/test_textures/neptune_normal.jpg\";\r\n\r\n        return p;\r\n    }\r\n\r\n    private static void register(CelestialBodyData planet) {\r\n        String key = planet.name.toLowerCase();\r\n\r\n        if (planet.usesGeneratedTexture) {\r\n            String genDir = \"assets/\" + NewHorizonsMain.MOD_ID + \"/textures/generated/\" + key;\r\n            File d = new File(genDir);\r\n            if (!d.exists() && !d.mkdirs()) {\r\n                System.err.println(\"Cannot create \" + genDir);\r\n            }\r\n            PlanetTextureGenerator gen = new PlanetTextureGenerator.Builder()\r\n                    .size(2048)\r\n                    .seed(123456L)\r\n                    .octaves(5)\r\n                    .frequency(3f)\r\n                    .build();\r\n            gen.generateAndRegister(NewHorizonsMain.MOD_ID, key);\r\n\r\n            planet.surfaceTexture = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_albedo.png\");\r\n            planet.heightMap      = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_height.png\");\r\n            planet.normalMap      = NewHorizonsMain.id(\"textures/generated/\" + key + \"/\" + key + \"_normal.png\");\r\n\r\n            planet.surfaceTexture = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_albedo.png\",\r\n                    4096,2048, key + \"_alb_resized\", false\r\n            );\r\n            planet.heightMap = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_height.png\",\r\n                    4096,2048, key + \"_hgt_resized\", false\r\n            );\r\n            planet.normalMap = TextureResizer.resizeTexture(\r\n                    NewHorizonsMain.MOD_ID,\r\n                    \"textures/generated/\" + key + \"/\" + key + \"_normal.png\",\r\n                    4096,2048, key + \"_nrm_resized\", false\r\n            );\r\n        } else {\r\n            planet.surfaceTexture    = planet.surfaceTexturePath    != null ? NewHorizonsMain.id(planet.surfaceTexturePath)    : null;\r\n            planet.cloudsTexture     = planet.cloudsTexturePath     != null ? NewHorizonsMain.id(planet.cloudsTexturePath)     : null;\r\n            planet.atmosphereTexture = planet.atmosphereTexturePath != null ? NewHorizonsMain.id(planet.atmosphereTexturePath) : null;\r\n            planet.darkAlbedoMap     = planet.darkAlbedoMapPath     != null ? NewHorizonsMain.id(planet.darkAlbedoMapPath)     : null;\r\n            planet.heightMap         = planet.heightMapPath         != null ? NewHorizonsMain.id(planet.heightMapPath)         : null;\r\n            planet.normalMap         = planet.normalMapPath         != null ? NewHorizonsMain.id(planet.normalMapPath)         : null;\r\n        }\r\n\r\n        // handle rings if present\r\n        if (planet.ringsTexturePath != null) {\r\n            planet.ringsTexture = NewHorizonsMain.id(planet.ringsTexturePath);\r\n        }\r\n\r\n        REGISTERED_PLANETS.put(NewHorizonsMain.id(key), planet);\r\n        System.out.println(\"✅ Registered planet \" + planet.name);\r\n    }\r\n\r\n    public static CelestialBodyData getPlanet(Identifier id) {\r\n        return REGISTERED_PLANETS.get(id);\r\n    }\r\n\r\n    public static Map<Identifier,CelestialBodyData> getAllPlanets() {\r\n        return REGISTERED_PLANETS;\r\n    }\r\n\r\n    public static double getOrbitAngle(CelestialBodyData data, double worldTime, double partialTick) {\r\n        return (worldTime + partialTick) * data.orbitSpeed;\r\n    }\r\n\r\n    public static float getRotationAngle(CelestialBodyData data, double worldTime, double partialTick) {\r\n        double angle = (worldTime + partialTick) * data.rotationSpeed;\r\n        return (float)(angle % 360.0);\r\n    }\r\n\r\n    public static Vec3d getPlanetLocation(CelestialBodyData data, double worldTime, double partialTick) {\r\n        double θ = getOrbitAngle(data, worldTime, partialTick);\r\n        double r = data.center.length();\r\n        double x = data.center.x + r * Math.cos(θ);\r\n        double z = data.center.z + r * Math.sin(θ);\r\n        double y = data.center.y;\r\n        return new Vec3d(x, y, z);\r\n    }\r\n\r\n    public static class CelestialBodyData {\r\n        public String name;\r\n        public Vec3d center;\r\n        public double radius;\r\n        public double rotationSpeed;\r\n\r\n        public transient Identifier surfaceTexture;\r\n        public transient Identifier cloudsTexture;\r\n        public transient Identifier atmosphereTexture;\r\n        public transient Identifier darkAlbedoMap;\r\n        public transient Identifier heightMap;\r\n        public transient Identifier normalMap;\r\n\r\n        public transient Identifier ringsTexture;\r\n        public float ringsInnerRadius;\r\n        public float ringsOuterRadius;\r\n\r\n        public double orbitSpeed;\r\n        public boolean hasAtmosphere;\r\n        public boolean isStar;\r\n        public int[] atmosphereColor1;\r\n        public int[] atmosphereColor2;\r\n        public double atmosphereRadius;\r\n        public boolean hasDarkAlbedoMap;\r\n        String surfaceTexturePath, cloudsTexturePath, atmosphereTexturePath;\r\n        String darkAlbedoMapPath, normalMapPath, heightMapPath;\r\n        String ringsTexturePath;\r\n        public boolean usesGeneratedTexture;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java b/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java
---- a/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java	(revision e4bb5d7be1cdf166d1054f15546fec29ea570a16)
-+++ b/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java	(date 1747318114000)
-@@ -71,7 +71,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 0;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/8k_mercury.jpg";
-         p.heightMapPath         = "textures/test_textures/mercury_height_map.jpg";
-         p.normalMapPath         = "textures/test_textures/mercury_normal_map.jpg";
-@@ -92,7 +92,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 0;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/8k_venus_surface.jpg";
-         p.heightMapPath         = "textures/test_textures/venus_height_map.jpg";
-         p.normalMapPath         = "textures/test_textures/venus_normal_map.jpg";
-@@ -136,7 +136,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 0;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/8k_mars.jpg";
-         p.heightMapPath         = "textures/test_textures/mars_height.jpg";
-         p.normalMapPath         = "textures/test_textures/mars_normal.jpg";
-@@ -157,7 +157,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 115;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/8k_jupiter.jpg";
-         p.heightMapPath         = "textures/test_textures/jupiter_height.jpg";
-         p.normalMapPath         = "textures/test_textures/jupitertest.jpg";
-@@ -178,7 +178,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 0;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/8k_saturn.jpg";
-         p.heightMapPath         = "textures/test_textures/saturn_height_map.jpg";
-         p.normalMapPath         = "textures/test_textures/saturn_normal_map.jpg";
-@@ -201,7 +201,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 0;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/2k_uranus.jpg";
-         p.heightMapPath         = "textures/test_textures/earth_height.png";
-         p.normalMapPath         = "textures/test_textures/earth_normal.png";
-@@ -222,7 +222,7 @@
-         p.atmosphereColor2 = null;
-         p.atmosphereRadius = 135;
-         p.hasDarkAlbedoMap = false;
--        p.usesGeneratedTexture = true;
-+        p.usesGeneratedTexture = false;
-         p.surfaceTexturePath    = "textures/test_textures/2k_neptune.jpg";
-         p.heightMapPath         = "textures/test_textures/neptune_height.jpg";
-         p.normalMapPath         = "textures/test_textures/neptune_normal.jpg";
-Index: src/main/java/org/copycraftDev/new_horizons/core/entity/ModEntities.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.copycraftDev.new_horizons.core.entity;\r\n\r\nimport nazario.liby.api.registry.auto.LibyAutoRegister;\r\nimport net.fabricmc.fabric.api.object.builder.v1.entity.FabricDefaultAttributeRegistry;\r\nimport net.fabricmc.fabric.api.object.builder.v1.entity.FabricEntityTypeBuilder;\r\nimport net.minecraft.entity.EntityDimensions;\r\nimport net.minecraft.entity.EntityType;\r\nimport net.minecraft.entity.SpawnGroup;\r\nimport net.minecraft.entity.attribute.EntityAttributes;\r\nimport net.minecraft.registry.Registry;\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.registry.Registries;\r\nimport org.copycraftDev.new_horizons.NewHorizonsMain;\r\nimport org.copycraftDev.new_horizons.core.portal.TeleportPortal;\r\nimport org.copycraftDev.new_horizons.physics.BlockColliderEntity;\r\nimport qouteall.imm_ptl.core.portal.Portal;\r\n\r\nimport static net.minecraft.entity.attribute.EntityAttributes.GENERIC_MAX_HEALTH;\r\n\r\n@LibyAutoRegister(method = \"initialize\")\r\npublic class ModEntities {\r\n    public static final EntityType<SeatEntity> SEAT_ENTITY = Registry.register(\r\n            Registries.ENTITY_TYPE,\r\n            Identifier.of(NewHorizonsMain.MOD_ID, \"seat_entity\"),\r\n            FabricEntityTypeBuilder.<SeatEntity>create(SpawnGroup.MISC, SeatEntity::new)\r\n                    .dimensions(EntityDimensions.fixed(0.1f, 0.1f)) // Small hitbox\r\n                    .trackRangeBlocks(10) // Important for syncing\r\n                    .trackedUpdateRate(1)  // Important for data syncing\r\n                    .build()\r\n    );\r\n    public static final EntityType<BlockColliderEntity> BLOCK_COLLIDER = Registry.register(\r\n            Registries.ENTITY_TYPE,\r\n            Identifier.of(NewHorizonsMain.MOD_ID, \"blockcollider\"),\r\n            FabricEntityTypeBuilder.<BlockColliderEntity>create(SpawnGroup.MISC, BlockColliderEntity::new)\r\n                    .dimensions(EntityDimensions.fixed(1f,1f))\r\n                    .trackRangeBlocks(64)\r\n                    .build()\r\n    );\r\n\r\n    public static void registerAttributes() {\r\n        FabricDefaultAttributeRegistry.register(BLOCK_COLLIDER, BlockColliderEntity.createAttributes());\r\n    }\r\n\r\n    public static final EntityType<TeleportPortal> TELEPORT_PORTAL = Registry.register(\r\n            Registries.ENTITY_TYPE,\r\n            Identifier.of(NewHorizonsMain.MOD_ID, \"teleport_portal\"),\r\n            FabricEntityTypeBuilder.<TeleportPortal>create(SpawnGroup.MISC, TeleportPortal::new)\r\n                    .dimensions(EntityDimensions.fixed(1.0f, 2.0f))\r\n                    .trackRangeBlocks(10)\r\n                    .trackedUpdateRate(1)\r\n                    .build()\r\n    );\r\n\r\n\r\n\r\n    public static void initialize() {}\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/copycraftDev/new_horizons/core/entity/ModEntities.java b/src/main/java/org/copycraftDev/new_horizons/core/entity/ModEntities.java
---- a/src/main/java/org/copycraftDev/new_horizons/core/entity/ModEntities.java	(revision e4bb5d7be1cdf166d1054f15546fec29ea570a16)
-+++ b/src/main/java/org/copycraftDev/new_horizons/core/entity/ModEntities.java	(date 1747318436000)
-@@ -6,16 +6,11 @@
- import net.minecraft.entity.EntityDimensions;
- import net.minecraft.entity.EntityType;
- import net.minecraft.entity.SpawnGroup;
--import net.minecraft.entity.attribute.EntityAttributes;
- import net.minecraft.registry.Registry;
- import net.minecraft.util.Identifier;
- import net.minecraft.registry.Registries;
- import org.copycraftDev.new_horizons.NewHorizonsMain;
- import org.copycraftDev.new_horizons.core.portal.TeleportPortal;
--import org.copycraftDev.new_horizons.physics.BlockColliderEntity;
--import qouteall.imm_ptl.core.portal.Portal;
--
--import static net.minecraft.entity.attribute.EntityAttributes.GENERIC_MAX_HEALTH;
- 
- @LibyAutoRegister(method = "initialize")
- public class ModEntities {
-@@ -34,6 +29,7 @@
-             FabricEntityTypeBuilder.<BlockColliderEntity>create(SpawnGroup.MISC, BlockColliderEntity::new)
-                     .dimensions(EntityDimensions.fixed(1f,1f))
-                     .trackRangeBlocks(64)
-+                    .trackedUpdateRate(1)
-                     .build()
-     );
- 
-Index: src/main/java/org/copycraftDev/new_horizons/physics/BlockColliderEntity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/BlockColliderEntity.java b/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java
-rename from src/main/java/org/copycraftDev/new_horizons/physics/BlockColliderEntity.java
-rename to src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java
---- a/src/main/java/org/copycraftDev/new_horizons/physics/BlockColliderEntity.java	(revision e4bb5d7be1cdf166d1054f15546fec29ea570a16)
-+++ b/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java	(date 1747318660000)
-@@ -1,14 +1,13 @@
--package org.copycraftDev.new_horizons.physics;
-+package org.copycraftDev.new_horizons.core.entity;
- 
--import net.minecraft.entity.Entity;
- import net.minecraft.entity.EntityType;
- import net.minecraft.entity.attribute.DefaultAttributeContainer;
- import net.minecraft.entity.attribute.EntityAttributes;
- import net.minecraft.entity.mob.ShulkerEntity;
- import net.minecraft.util.math.Box;
- import net.minecraft.util.math.Vec3d;
--import net.minecraft.util.shape.VoxelShapes;
- import net.minecraft.world.World;
-+import org.copycraftDev.new_horizons.physics.PhysicsMain;
- 
- /**
-  * Invisible 1×1×1 collider‑entity synced to a PhysicsObject’s single block.
-@@ -38,7 +37,7 @@
-     @Override
-     public void tick() {
-         if (linkedObject == null || !linkedObject.isAlive()) {
--            this.remove(RemovalReason.valueOf("ded"));
-+            this.remove(RemovalReason.DISCARDED);
-             return;
-         }
-         Vec3d w = linkedObject.getPosition().add(localOffset);
-Index: src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.copycraftDev.new_horizons;\r\n\r\nimport com.mojang.brigadier.CommandDispatcher;\r\nimport foundry.veil.Veil;\r\nimport foundry.veil.api.client.render.shader.program.ShaderProgram;\r\nimport foundry.veil.platform.VeilEventPlatform;\r\nimport nazario.liby.api.registry.auto.LibyEntrypoints;\r\nimport nazario.liby.api.registry.auto.LibyRegistryLoader;\r\nimport nazario.liby.api.registry.runtime.recipe.LibyIngredient;\r\nimport nazario.liby.api.registry.runtime.recipe.LibyRecipeRegistry;\r\nimport nazario.liby.api.registry.runtime.recipe.types.LibyShapelessCraftingRecipe;\r\nimport net.fabricmc.api.ModInitializer;\r\nimport net.fabricmc.fabric.api.event.lifecycle.v1.ServerLifecycleEvents;\r\nimport net.fabricmc.fabric.api.event.lifecycle.v1.ServerTickEvents;\r\nimport net.fabricmc.fabric.api.event.player.UseBlockCallback;\r\nimport net.fabricmc.fabric.api.object.builder.v1.entity.FabricDefaultAttributeRegistry;\r\nimport net.minecraft.block.BlockState;\r\nimport net.minecraft.entity.mob.ShulkerEntity;\r\nimport net.minecraft.item.ItemPlacementContext;\r\nimport net.minecraft.item.ItemUsageContext;\r\nimport net.minecraft.registry.Registries;\r\nimport net.minecraft.registry.Registry;\r\nimport net.minecraft.server.MinecraftServer;\r\nimport net.minecraft.server.command.ServerCommandSource;\r\nimport net.minecraft.server.network.ServerPlayerEntity;\r\nimport net.minecraft.sound.SoundEvent;\r\nimport net.minecraft.util.ActionResult;\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.BlockPos;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport net.minecraft.util.math.Vec3i;\r\nimport org.copycraftDev.new_horizons.client.planets.MeteorCommand;\r\nimport org.copycraftDev.new_horizons.client.planets.MeteorScheduler;\r\nimport org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;\r\nimport org.copycraftDev.new_horizons.core.blocks.ModBlocks;\r\nimport org.copycraftDev.new_horizons.core.entity.ModEntities;\r\nimport org.copycraftDev.new_horizons.core.items.ModItems;\r\nimport org.copycraftDev.new_horizons.physics.BlockColliderEntity;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsMain;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsRenderer;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.copycraftDev.new_horizons.core.world.biome.ModBiomes;\r\n\r\npublic class NewHorizonsMain implements ModInitializer {\r\n\r\n    public static final String MOD_ID = \"new_horizons\";\r\n    public static final Logger LOGGER = LoggerFactory.getLogger(MOD_ID);\r\n    public static final SoundEvent ENGINE_AMBIANCE = register(\"engine_ambiance\");\r\n    public static final SoundEvent ENGINE_BROKEN   = register(\"engine_broken\");\r\n    public static final SoundEvent ENGINE_POWERUP  = register(\"engine_powerup\");\r\n\r\n    private static SoundEvent register(String name) {\r\n        Identifier id = Identifier.of(\"new_horizons\", name);\r\n        return Registry.register(Registries.SOUND_EVENT, id, SoundEvent.of(id));\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onInitialize() {\r\n        BlockColliderEntity.createAttributes();\r\n        ModEntities.registerAttributes();\r\n        LibyRegistryLoader.load(\"org.copycraftDev.new_horizons\", LOGGER, LibyEntrypoints.MAIN);\r\n        Veil.init();\r\n        ServerTickEvents.END_SERVER_TICK.register(MeteorScheduler::onServerTick);\r\n        ServerTickEvents.END_SERVER_TICK.register(PhysicsMain.PhysicsManager::tickAll);\r\n        PhysicsRenderer.register();\r\n        ServerLifecycleEvents.SERVER_STARTED.register(server -> {\r\n            CommandDispatcher<ServerCommandSource> dispatcher = server.getCommandManager().getDispatcher();\r\n            MeteorCommand.register(dispatcher);  // Register the custom command\r\n        });\r\n        ServerLifecycleEvents.SERVER_STARTED.register(server -> {\r\n            server.execute(() -> {\r\n                for (ServerPlayerEntity player : server.getPlayerManager().getPlayerList()) {\r\n                    BigBangCutsceneManager.execute(player);\r\n                }\r\n            });\r\n        });\r\n        UseBlockCallback.EVENT.register((player, world, hand, hit) -> {\r\n            if (world.isClient) return ActionResult.PASS;\r\n\r\n            // the exact click‐position as a Vec3d\r\n            Vec3d clickPos = hit.getPos();\r\n\r\n            for (PhysicsMain.PhysicsObject obj : PhysicsMain.PHYSICS_MANAGER.getAllObjects()) {\r\n                // is the click on the surface of this moving object?\r\n                if (obj.getWorldBounds().expand(1e-6).contains(clickPos)) {\r\n                    // wrap the usage into a placement context\r\n                    ItemUsageContext usageCtx = new ItemUsageContext(player, hand, hit);\r\n                    ItemPlacementContext placeCtx = new ItemPlacementContext(usageCtx);\r\n\r\n                    // ask the context what BlockState it would place\r\n                    BlockState toPlace = placeCtx.getWorld().getBlockState(BlockPos.ofFloored(clickPos));\r\n                    if (toPlace != null) {\r\n                        // compute local coordinate relative to this object's origin\r\n                        BlockPos base = new BlockPos(\r\n                                (int)Math.floor(obj.getPosition().x),\r\n                                (int)Math.floor(obj.getPosition().y),\r\n                                (int)Math.floor(obj.getPosition().z)\r\n                        );\r\n                        BlockPos local = hit.getBlockPos().subtract(base);\r\n\r\n                        // attach into the physics object\r\n                        obj.addBlock(local, toPlace, null);\r\n\r\n                        // consume one item if not in creative\r\n                        if (!player.isCreative()) {\r\n                            player.getStackInHand(hand).decrement(1);\r\n                        }\r\n                        return ActionResult.SUCCESS;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ActionResult.PASS;\r\n        });\r\n        createRecipes();\r\n\r\n\r\n    }\r\n    public void createRecipes() {\r\n        LibyRecipeRegistry.addRecipe(\r\n                new LibyShapelessCraftingRecipe(\r\n                        Identifier.of(MOD_ID, \"wood_top_planks\"),\r\n                        new LibyIngredient[]{\r\n                                LibyIngredient.createItem(ModBlocks.REDWOOD_LOGS)\r\n                        },\r\n                        ModBlocks.REDWOOD_PLANKS.liby$getId(),\r\n                        4\r\n                )\r\n        );\r\n    }\r\n\r\n\r\n\r\n    public static Identifier id(String name){\r\n        return Identifier.of(MOD_ID, name);\r\n    }\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java b/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java
---- a/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java	(revision e4bb5d7be1cdf166d1054f15546fec29ea570a16)
-+++ b/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java	(date 1747318338000)
-@@ -2,8 +2,6 @@
- 
- import com.mojang.brigadier.CommandDispatcher;
- import foundry.veil.Veil;
--import foundry.veil.api.client.render.shader.program.ShaderProgram;
--import foundry.veil.platform.VeilEventPlatform;
- import nazario.liby.api.registry.auto.LibyEntrypoints;
- import nazario.liby.api.registry.auto.LibyRegistryLoader;
- import nazario.liby.api.registry.runtime.recipe.LibyIngredient;
-@@ -13,14 +11,11 @@
- import net.fabricmc.fabric.api.event.lifecycle.v1.ServerLifecycleEvents;
- import net.fabricmc.fabric.api.event.lifecycle.v1.ServerTickEvents;
- import net.fabricmc.fabric.api.event.player.UseBlockCallback;
--import net.fabricmc.fabric.api.object.builder.v1.entity.FabricDefaultAttributeRegistry;
- import net.minecraft.block.BlockState;
--import net.minecraft.entity.mob.ShulkerEntity;
- import net.minecraft.item.ItemPlacementContext;
- import net.minecraft.item.ItemUsageContext;
- import net.minecraft.registry.Registries;
- import net.minecraft.registry.Registry;
--import net.minecraft.server.MinecraftServer;
- import net.minecraft.server.command.ServerCommandSource;
- import net.minecraft.server.network.ServerPlayerEntity;
- import net.minecraft.sound.SoundEvent;
-@@ -28,19 +23,16 @@
- import net.minecraft.util.Identifier;
- import net.minecraft.util.math.BlockPos;
- import net.minecraft.util.math.Vec3d;
--import net.minecraft.util.math.Vec3i;
- import org.copycraftDev.new_horizons.client.planets.MeteorCommand;
- import org.copycraftDev.new_horizons.client.planets.MeteorScheduler;
- import org.copycraftDev.new_horizons.core.bigbang.BigBangCutsceneManager;
- import org.copycraftDev.new_horizons.core.blocks.ModBlocks;
- import org.copycraftDev.new_horizons.core.entity.ModEntities;
--import org.copycraftDev.new_horizons.core.items.ModItems;
--import org.copycraftDev.new_horizons.physics.BlockColliderEntity;
-+import org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;
- import org.copycraftDev.new_horizons.physics.PhysicsMain;
- import org.copycraftDev.new_horizons.physics.PhysicsRenderer;
- import org.slf4j.Logger;
- import org.slf4j.LoggerFactory;
--import org.copycraftDev.new_horizons.core.world.biome.ModBiomes;
- 
- public class NewHorizonsMain implements ModInitializer {
- 
-Index: src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.copycraftDev.new_horizons.physics;\r\n\r\nimport net.minecraft.block.BlockState;\r\nimport net.minecraft.block.Blocks;\r\nimport net.minecraft.block.entity.BlockEntity;\r\nimport net.minecraft.entity.Entity;\r\nimport net.minecraft.server.MinecraftServer;\r\nimport net.minecraft.server.world.ServerWorld;\r\nimport net.minecraft.util.math.*;\r\nimport net.minecraft.world.WorldAccess;\r\nimport org.copycraftDev.new_horizons.core.entity.ModEntities;\r\n\r\nimport java.util.*;\r\n\r\npublic class PhysicsMain {\r\n    public static final PhysicsManager PHYSICS_MANAGER = new PhysicsManager();\r\n\r\n    public static class PhysicsManager {\r\n        private static final List<PhysicsObject> activeObjects = new ArrayList<>();\r\n\r\n\r\n        /** create a new object at pos, remembering the block‑grid origin */\r\n        public PhysicsObject create(ServerWorld world, Vec3d pos, BlockPos origin) {\r\n            PhysicsObject obj = new PhysicsObject(pos, origin);\r\n            activeObjects.add(obj);\r\n            return obj;\r\n        }\r\n        public void removeObject(PhysicsObject object) {\r\n            activeObjects.remove(object);\r\n        }\r\n        public List<PhysicsObject> getAllObjects() {\r\n            return activeObjects;\r\n        }\r\n\r\n        /** call once per tick on server */\r\n        public static void tickAll(MinecraftServer world) {\r\n            for (PhysicsObject obj : new ArrayList<>(activeObjects)) {\r\n                obj.tick(world.getOverworld());\r\n                BlockAttachmentHandler.attachDetachedBlocks(world.getOverworld(), obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class PhysicsObject {\r\n        private final BlockPos origin;\r\n        private Vec3d position;\r\n        private Vec3d velocity = Vec3d.ZERO;\r\n        private Vec3d rotation = Vec3d.ZERO;\r\n        private Box localBounds = null;\r\n\r\n        private final Map<BlockPos, BlockState> blocks = new HashMap<>();\r\n        final Map<BlockPos, BlockEntity> blockEntities = new HashMap<>();\r\n        private final List<BlockPos> previousGlobals = new ArrayList<>();\r\n        private final Map<PhysicsObject, Map<Vec3d, BlockColliderEntity>> colliders = new IdentityHashMap<>();\r\n\r\n        public PhysicsObject(Vec3d startPos, BlockPos origin) {\r\n            this.position = startPos;\r\n            this.origin = origin;\r\n        }\r\n\r\n        /** easy control methods **/\r\n        public void setVelocity(Vec3d v) { velocity = v; }\r\n        public void addVelocity(Vec3d dv) { velocity = velocity.add(dv); }\r\n        public void setRotation(Vec3d rotDegrees) { rotation = rotDegrees; }\r\n        public void addRotation(Vec3d dRot) { rotation = rotation.add(dRot); }\r\n        public BlockPos getOrigin() { return origin; }\r\n        public Vec3d getPosition() { return position; }\r\n        public Vec3d getVelocity() { return velocity; }\r\n        public Map<BlockPos, BlockEntity> getBlockEntities() {\r\n            return blockEntities;\r\n        }\r\n\r\n        public Map<BlockPos, BlockState> getBlocks() { return blocks; }\r\n\r\n        public void addBlock(BlockPos localPos, BlockState state, BlockEntity be) {\r\n            blocks.put(localPos, state);\r\n            if (be != null) blockEntities.put(localPos, be);\r\n            localBounds = null;\r\n        }\r\n\r\n        public void tick(ServerWorld world) {\r\n            for (PhysicsObject obj : PHYSICS_MANAGER.getAllObjects()) {\r\n                Map<Vec3d, BlockColliderEntity> map = colliders.computeIfAbsent(obj, o -> new HashMap<>());\r\n\r\n                for (var entry : obj.getBlocks().entrySet()) {\r\n                    Vec3d offset = Vec3d.of(entry.getKey());\r\n                    if (!map.containsKey(offset)) {\r\n                        BlockColliderEntity c = new BlockColliderEntity(ModEntities.BLOCK_COLLIDER, world);\r\n                        world.spawnEntity(c);\r\n                        c.init(obj, offset);\r\n                        map.put(offset, c);\r\n                    }\r\n                    map.get(offset).init(obj, offset);\r\n                }\r\n\r\n                map.keySet().removeIf(off -> {\r\n                    boolean gone = !obj.getBlocks().containsKey(off);\r\n                    if (gone) map.get(off).remove(Entity.RemovalReason.DISCARDED); // or .KILLED/.UNLOADED\r\n                    return gone;\r\n                });\r\n\r\n                // These must be done for each object!\r\n                obj.applyGravity();\r\n                Vec3d attempted = obj.velocity;\r\n                Vec3d moved = obj.doMovement(world, attempted);\r\n                obj.position = obj.position.add(moved);\r\n                obj.updateWorldBlocks(world);\r\n            }\r\n        }\r\n\r\n\r\n        private void applyGravity() {\r\n            velocity = velocity.add(0, PhysicsConfig.GRAVITY, 0);\r\n            if (velocity.y < PhysicsConfig.TERMINAL_VELOCITY) {\r\n                velocity = new Vec3d(velocity.x, PhysicsConfig.TERMINAL_VELOCITY, velocity.z);\r\n            }\r\n        }\r\n\r\n        private Vec3d doMovement(WorldAccess world, Vec3d attempted) {\r\n            Box bounds = getWorldBounds();\r\n            Vec3d moved = attempted;\r\n\r\n            // X axis\r\n            moved = tryMove(world, bounds, moved.x, 0, 0);\r\n            bounds = bounds.offset(moved.x, 0, 0);\r\n            // Y axis\r\n            double my = tryMove(world, bounds, 0, moved.y, 0).y;\r\n            moved = new Vec3d(moved.x, my, moved.z);\r\n            bounds = bounds.offset(0, my, 0);\r\n            // Z axis\r\n            double mz = tryMove(world, bounds, 0, 0, moved.z).z;\r\n            moved = new Vec3d(moved.x, moved.y, mz);\r\n\r\n            // bounce & friction\r\n            if (moved.y != attempted.y) velocity = new Vec3d(velocity.x, -velocity.y * PhysicsConfig.BOUNCE_FACTOR, velocity.z);\r\n            if (moved.x != attempted.x) velocity = new Vec3d(velocity.x * PhysicsConfig.FRICTION, velocity.y, velocity.z);\r\n            if (moved.z != attempted.z) velocity = new Vec3d(velocity.x, velocity.y, velocity.z * PhysicsConfig.FRICTION);\r\n\r\n            return moved;\r\n        }\r\n\r\n        private Vec3d tryMove(WorldAccess world, Box bounds, double dx, double dy, double dz) {\r\n            Box nb = bounds.offset(dx, dy, dz);\r\n            return collides(world, nb) ? Vec3d.ZERO : new Vec3d(dx, dy, dz);\r\n        }\r\n\r\n        private boolean collides(WorldAccess world, Box box) {\r\n            // —————— 1) world collision (unchanged) ——————\r\n            int minX = MathHelper.floor(box.minX), maxX = MathHelper.ceil(box.maxX);\r\n            int minY = MathHelper.floor(box.minY), maxY = MathHelper.ceil(box.maxY);\r\n            int minZ = MathHelper.floor(box.minZ), maxZ = MathHelper.ceil(box.maxZ);\r\n            BlockPos.Mutable mpos = new BlockPos.Mutable();\r\n            for (int x = minX; x < maxX; x++) {\r\n                for (int y = minY; y < maxY; y++) {\r\n                    for (int z = minZ; z < maxZ; z++) {\r\n                        mpos.set(x, y, z);\r\n                        BlockState s = world.getBlockState(mpos);\r\n                        if (!s.isAir() && s.getCollisionShape(world, mpos).getBoundingBoxes().stream()\r\n                                .anyMatch(bb -> Box.from(new BlockBox(mpos)).offset(mpos).intersects(box))) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // —————— 2) self‑collision: treat each stored block as collision shape ——————\r\n            Box worldBounds = getWorldBounds();\r\n            Vec3d objPos = getPosition();\r\n            for (BlockPos local : blocks.keySet()) {\r\n                // get that block’s AABB in world coords\r\n                Box bb = new Box(\r\n                        objPos.x + local.getX(),\r\n                        objPos.y + local.getY(),\r\n                        objPos.z + local.getZ(),\r\n                        objPos.x + local.getX() + 1,\r\n                        objPos.y + local.getY() + 1,\r\n                        objPos.z + local.getZ() + 1\r\n                );\r\n                if (bb.intersects(box)) {\r\n                    return true;\r\n                }\r\n\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        private Box getLocalBounds() {\r\n            if (localBounds != null) return localBounds;\r\n            Box b = null;\r\n            for (BlockPos p : blocks.keySet()) {\r\n                Box bb = new Box(p.getX(), p.getY(), p.getZ(),\r\n                        p.getX()+1, p.getY()+1, p.getZ()+1);\r\n                b = (b==null)? bb : b.union(bb);\r\n            }\r\n            localBounds = b;\r\n            return b;\r\n        }\r\n\r\n        public Box getWorldBounds() {\r\n            Box lb = getLocalBounds();\r\n            return new Box(lb.minX + position.x, lb.minY + position.y, lb.minZ + position.z,\r\n                    lb.maxX + position.x, lb.maxY + position.y, lb.maxZ + position.z);\r\n        }\r\n\r\n        private void updateWorldBlocks(ServerWorld world) {\r\n            // 1) remove last tick’s blocks from the world\r\n            for (BlockPos oldPos : previousGlobals) {\r\n                world.setBlockState(oldPos, Blocks.AIR.getDefaultState(), 3);\r\n            }\r\n            previousGlobals.clear();\r\n\r\n            // 2) place this tick’s blocks with flag=3 (update listeners & collision)\r\n            for (Map.Entry<BlockPos, BlockState> entry : blocks.entrySet()) {\r\n                BlockPos local = entry.getKey();\r\n                BlockState state = entry.getValue();\r\n                BlockPos global = new BlockPos(\r\n                        (int) Math.floor(position.x) + local.getX(),\r\n                        (int) Math.floor(position.y) + local.getY(),\r\n                        (int) Math.floor(position.z) + local.getZ()\r\n                );\r\n                world.setBlockState(global, state, 3);\r\n                previousGlobals.add(global);\r\n            }\r\n        }\r\n\r\n\r\n        public Vec3d getRotation() {\r\n            return rotation;\r\n        }\r\n\r\n        public boolean isAlive() {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java
---- a/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java	(revision e4bb5d7be1cdf166d1054f15546fec29ea570a16)
-+++ b/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java	(date 1747318338000)
-@@ -8,6 +8,7 @@
- import net.minecraft.server.world.ServerWorld;
- import net.minecraft.util.math.*;
- import net.minecraft.world.WorldAccess;
-+import org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;
- import org.copycraftDev.new_horizons.core.entity.ModEntities;
- 
- import java.util.*;
Index: src/main/java/org/copycraftDev/new_horizons/physics/BlockAttachmentHandler.java
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/BlockAttachmentHandler.java b/src/main/java/org/copycraftDev/new_horizons/physics/BlockAttachmentHandler.java
deleted file mode 100644
--- a/src/main/java/org/copycraftDev/new_horizons/physics/BlockAttachmentHandler.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ /dev/null	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
@@ -1,40 +0,0 @@
-package org.copycraftDev.new_horizons.physics;
-
-import net.minecraft.block.Blocks;
-import net.minecraft.block.BlockState;
-import net.minecraft.block.entity.BlockEntity;
-import net.minecraft.server.world.ServerWorld;
-import net.minecraft.util.math.*;
-import java.util.Map;
-
-public class BlockAttachmentHandler {
-    public static void attachDetachedBlocks(ServerWorld world, PhysicsMain.PhysicsObject obj) {
-        // expand by 1 in each axis to catch new placements
-        Box scanBox = obj.getWorldBounds().expand(0.4, 0.4, 0.4);
-        int minX = MathHelper.floor(scanBox.minX);
-        int maxX = MathHelper.ceil(scanBox.maxX);
-        int minY = MathHelper.floor(scanBox.minY);
-        int maxY = MathHelper.ceil(scanBox.maxY);
-        int minZ = MathHelper.floor(scanBox.minZ);
-        int maxZ = MathHelper.ceil(scanBox.maxZ);
-
-        for (int x = minX; x < maxX; x++) {
-            for (int y = minY; y < maxY; y++) {
-                for (int z = minZ; z < maxZ; z++) {
-                    BlockPos global = new BlockPos(x, y, z);
-                    // compute local relative to origin
-                    BlockPos local = global.subtract(obj.getOrigin());
-                    if (obj.getBlocks().containsKey(local)) continue;
-
-                    BlockState state = world.getBlockState(global);
-                    if (state.isAir()) continue;
-
-                    BlockEntity be = world.getBlockEntity(global);
-                    // attach and remove from world
-                    obj.addBlock(local, state, be);
-                    world.setBlockState(global, Blocks.AIR.getDefaultState());
-                }
-            }
-        }
-    }
-}
Index: src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage org.copycraftDev.new_horizons.client.rendering;\r\n\r\nimport com.mojang.blaze3d.systems.RenderSystem;\r\nimport net.minecraft.client.MinecraftClient;\r\nimport net.minecraft.client.gl.ShaderProgram;\r\nimport net.minecraft.client.gui.DrawContext;\r\nimport net.minecraft.client.render.*;\r\nimport net.minecraft.client.util.math.MatrixStack;\r\nimport net.minecraft.util.Identifier;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport org.copycraftDev.new_horizons.NewHorizonsMain;\r\nimport org.joml.Matrix4f;\r\nimport org.joml.Quaternionf;\r\nimport org.joml.AxisAngle4f;\r\nimport org.copycraftDev.new_horizons.client.planets.CelestialBodyRegistry;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LapisRenderer;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliGeometryBuilder;\r\nimport org.copycraftDev.new_horizons.lazuli_snnipets.LazuliShaderRegistry;\r\nimport org.joml.Vector4f;\r\n\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.util.concurrent.atomic.AtomicReference;\r\n\r\npublic class CelestialBodyRendererPanorama {\r\n    private static final AtomicReference<Float> time = new AtomicReference<>(0f);\r\n\r\n    private static float rotationX = 0, rotationY = 90, rotationZ = 0;\r\n    private static float scale = 1;\r\n    private static float offsetX = 0, offsetY = 0;\r\n    private static float planetZ = 0;\r\n\r\n    private static float simulationSpeed = 1;\r\n    public static void setSimulationSpeed(float s) { simulationSpeed = s; }\r\n\r\n    private static ShaderProgram S_PLANET, S_PLANET_NIGHT, S_ATMOSPHERE, S_STAR, S_STAR_AURA, S_KABOOM;\r\n\r\n    private static final Map<String, ScreenPos> screenPositions = new HashMap<>();\r\n    public static class ScreenPos { public final float x,y; public ScreenPos(float x,float y){this.x=x;this.y=y;} }\r\n    public static Map<String,ScreenPos> getScreenPositions(){return screenPositions;}\r\n\r\n    public static void setRotationX(float r){rotationX=r;}\r\n    public static void setRotationY(float r){rotationY=r;}\r\n    public static void setRotationZ(float r){rotationZ=r;}\r\n    public static void setScale(float s){scale=s;}\r\n    public static void setOffsetX(float x){offsetX=x;}\r\n    public static void setOffsetY(float y){offsetY=y;}\r\n    public static void setPlanetZ(float z){planetZ=z;}\r\n\r\n    public static void render(DrawContext ctx, int w, int h, float alpha, float delta, String focusPlanet){\r\n        // Clear previous screen positions and update time\r\n        screenPositions.clear();\r\n        time.updateAndGet(t -> t + delta);\r\n\r\n        // Rotation logic for the focus planet\r\n        if (focusPlanet != null) {\r\n            Vec3d loc = getPlanetLocation(focusPlanet);\r\n            if (loc != null) {\r\n                float xScene = (float) loc.z, yScene = (float) loc.y, zScene = planetZ + (float) loc.x;\r\n                float desiredY = (float) Math.toDegrees(Math.atan2(xScene, zScene));\r\n                float horiz = (float) Math.hypot(xScene, zScene);\r\n                float desiredX = -(float) Math.toDegrees(Math.atan2(yScene, horiz));\r\n                rotationY += (desiredY - rotationY) * 0.1f;\r\n                rotationX += (desiredX - rotationX) * 0.1f;\r\n            }\r\n        }\r\n\r\n        rotationX = Math.max(-90, Math.min(90, rotationX));\r\n\r\n        // Set up the rendering context\r\n        RenderSystem.depthMask(false);\r\n        RenderSystem.disableCull();\r\n        RenderSystem.setShaderFogStart(Float.MAX_VALUE);\r\n        RenderSystem.setShaderFogEnd(Float.MAX_VALUE);\r\n\r\n        Tessellator tess = Tessellator.getInstance();\r\n        MatrixStack ms = new MatrixStack();\r\n        ms.multiplyPositionMatrix(ctx.getMatrices().peek().getPositionMatrix());\r\n        ms.push();\r\n        ms.translate(w * 0.5f + offsetX, h * 0.5f + offsetY, -1000);\r\n        ms.scale(scale * 1.5f, scale * 1.5f, scale * 1.5f);\r\n        applyRotation(ms);\r\n        Matrix4f mvp = ms.peek().getPositionMatrix();\r\n\r\n        // Load the shaders\r\n        S_PLANET = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_PLANET);\r\n        S_PLANET_NIGHT = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_PLANET_WITH_NIGHT);\r\n        S_ATMOSPHERE = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_ATMOSPHERE);\r\n        S_STAR = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_STAR);\r\n        S_STAR_AURA = LazuliShaderRegistry.getShader(ModShaders.RENDER_TYPE_STAR_AURA);\r\n        S_KABOOM = LazuliShaderRegistry.getShader(ModShaders.RENDERTYPE_KABOOM_OOHHHHHHHHHHHH_SHINY_1);\r\n\r\n        Camera cam = MinecraftClient.getInstance().gameRenderer.getCamera();\r\n\r\n        // Loop through each celestial body and render it\r\n        for (var e : CelestialBodyRegistry.getAllPlanets().entrySet()) {\r\n            var body = e.getValue();\r\n\r\n            Vec3d orig = body.center;\r\n            float ang = (float) (time.get() * body.orbitSpeed * simulationSpeed);\r\n            double cos = Math.cos(ang), sin = Math.sin(ang);\r\n            Vec3d orb = new Vec3d(orig.x * cos - orig.z * sin, orig.y, orig.x * sin + orig.z * cos);\r\n\r\n            Vector4f v = new Vector4f((float) orb.z, (float) orb.y, planetZ + (float) orb.x, 1);\r\n            v.mul(mvp);\r\n            if (v.w > 0) {\r\n                float sx = (v.x / v.w * 0.5f + 0.5f) * w;\r\n                float sy = (-v.y / v.w * 0.5f + 0.5f) * h;\r\n                screenPositions.put(body.name, new ScreenPos(sx, sy));\r\n            }\r\n\r\n\r\n            ShaderProgram sh = body.isStar ? S_STAR : (body.hasDarkAlbedoMap ? S_PLANET_NIGHT : S_PLANET);\r\n            RenderSystem.setShader(() -> sh);\r\n            RenderSystem.setShaderFogStart(Float.MAX_VALUE);\r\n            RenderSystem.setShaderFogEnd(Float.MAX_VALUE);\r\n            RenderSystem.disableCull();\r\n            RenderSystem.depthMask(true);\r\n            RenderSystem.enableDepthTest();\r\n\r\n            // Begin rendering the body\r\n            BufferBuilder bb = tess.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION_TEXTURE_COLOR_NORMAL);\r\n            Vec3d sceneCenter = new Vec3d((float) orb.z, (float) orb.y, planetZ + (float) orb.x);\r\n            float roll = (float) (body.rotationSpeed * time.get());\r\n            if (body.hasDarkAlbedoMap) {\r\n                LapisRenderer.setShaderTexture(3, body.darkAlbedoMap);\r\n            }\r\n            LapisRenderer.setShader(sh);\r\n            LazuliGeometryBuilder.buildTexturedSphere(64, (float) body.radius, sceneCenter, new Vec3d(0, 1, 0), roll, false, cam, mvp, bb);\r\n            BufferRenderer.drawWithGlobalProgram(bb.end());\r\n        }\r\n\r\n        ms.pop();\r\n        RenderSystem.setShaderFogShape(FogShape.CYLINDER);\r\n        RenderSystem.setShaderFogColor(0, 0, 0);\r\n        RenderSystem.setShader(GameRenderer::getPositionColorProgram);\r\n        RenderSystem.depthMask(true);\r\n        RenderSystem.enableDepthTest();\r\n    }\r\n\r\n\r\n    private static void applyRotation(MatrixStack ms){\r\n        Quaternionf q=new Quaternionf().set(new AxisAngle4f(1,0,0,(float)Math.toRadians(rotationX))); ms.multiply(q);\r\n        q.set(new AxisAngle4f(0,1,0,(float)Math.toRadians(rotationY))); ms.multiply(q);\r\n        q.set(new AxisAngle4f(0,0,1,(float)Math.toRadians(rotationZ))); ms.multiply(q);\r\n    }\r\n\r\n    public static Vec3d getPlanetLocation(String planetName) {\r\n        if (planetName == null || planetName.isEmpty()) {\r\n            // Defensive fallback, return zero vector if input invalid\r\n            return Vec3d.ZERO;\r\n        }\r\n\r\n        // Convert the planet name to lowercase (registry keys are lowercase)\r\n        String key = planetName.toLowerCase();\r\n\r\n        Identifier planetId = Identifier.of(NewHorizonsMain.MOD_ID, key);\r\n\r\n        // Retrieve planet data from the registry\r\n        CelestialBodyRegistry.CelestialBodyData planetData = CelestialBodyRegistry.getPlanet(planetId);\r\n\r\n        if (planetData == null) {\r\n            // Planet not found, print error or warning\r\n            System.err.println(\"Planet '\" + planetName + \"' not found in registry!\");\r\n            // Return a fallback location so no null pointer exceptions\r\n            return Vec3d.ZERO;\r\n        }\r\n\r\n        // Return the center location vector (should never be null if data is valid)\r\n        if (planetData.center == null) {\r\n            System.err.println(\"Planet '\" + planetName + \"' has no center location defined!\");\r\n            return Vec3d.ZERO;\r\n        }\r\n\r\n        return planetData.center;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java b/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java
--- a/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java	(date 1747761900000)
@@ -94,8 +94,8 @@
         Camera cam = MinecraftClient.getInstance().gameRenderer.getCamera();
 
         // Loop through each celestial body and render it
-        for (var e : CelestialBodyRegistry.getAllPlanets().entrySet()) {
-            var body = e.getValue();
+        for (var e : CelestialBodyRegistry.getAllPlanets().values()) {
+            var body = e;
 
             Vec3d orig = body.center;
             float ang = (float) (time.get() * body.orbitSpeed * simulationSpeed);
Index: src/main/resources/new_horizons.mixins.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"required\": true,\r\n  \"minVersion\": \"0.8\",\r\n  \"package\": \"org.copycraftDev.new_horizons.mixin\",\r\n  \"compatibilityLevel\": \"JAVA_21\",\r\n  \"mixins\": [\r\n    \"client.SpaceSkyboxMixin\",\r\n    \"AbstractBlockCollisionMixin\",\r\n    \"AbstractBlockMixin\"\r\n  ],\r\n  \"client\": [\r\n    \"client.CameraMixin\",\r\n    \"CameraRotationMixin\",\r\n    \"client.GameRendererMixin\",\r\n    // \"TitleScreenMixin\",\r\n    \"NoVoidDamageInSpaceLivingEntityMixin\",\r\n    \"NoCloudsMixin\",\r\n    \"ClientPlayNetworkHandlerMixin\"\r\n  ],\r\n  \"injectors\": {\r\n    \"defaultRequire\": 1\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/new_horizons.mixins.json b/src/main/resources/new_horizons.mixins.json
--- a/src/main/resources/new_horizons.mixins.json	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/resources/new_horizons.mixins.json	(date 1747910488000)
@@ -12,10 +12,13 @@
     "client.CameraMixin",
     "CameraRotationMixin",
     "client.GameRendererMixin",
-    // "TitleScreenMixin",
+    "TitleScreenMixin",
     "NoVoidDamageInSpaceLivingEntityMixin",
     "NoCloudsMixin",
-    "ClientPlayNetworkHandlerMixin"
+    "CameraAccessor",
+    "ClientPlayNetworkHandlerMixin",
+    "client.InstantDimensionClientMixin",
+    "client.InstantDimensionNetworkMixin"
   ],
   "injectors": {
     "defaultRequire": 1
Index: .idea/runConfigurations/Minecraft_Server.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectRunConfigurationManager\">\r\n  <configuration default=\"false\" factoryName=\"Application\" name=\"Minecraft Server\" type=\"Application\">\r\n    \r\n    <option name=\"MAIN_CLASS_NAME\" value=\"net.fabricmc.devlaunchinjector.Main\"/>\r\n    <module name=\"New-Horizons.main\"/>\r\n    <option name=\"PROGRAM_PARAMETERS\" value=\"nogui\"/>\r\n    <shortenClasspath name=\"ARGS_FILE\"/>\r\n    <option name=\"VM_PARAMETERS\" value=\"-Dfabric.dli.config=D:\\codemc\\New-Horizons\\.gradle\\loom-cache\\launch.cfg -Dfabric.dli.env=server -Dfabric.dli.main=net.fabricmc.loader.impl.launch.knot.KnotServer\"/>\r\n    <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/run/\"/>\r\n    <method v=\"2\">\r\n      <option enabled=\"true\" name=\"Make\"/>\r\n    </method>\r\n  <classpathModifications><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\patchy\\2.2.10\\da05971b07cbb379d002cf7eaec6a2048211fefc\\patchy-2.2.10.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-jemalloc\\3.3.3\\b543467b7ff3c6920539a88ee602d34098628be5\\lwjgl-jemalloc-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-glfw\\3.3.3\\efa1eb78c5ccd840e9f329717109b5e892d72f8e\\lwjgl-glfw-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\text2speech\\1.17.9\\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\\text2speech-1.17.9.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.16\\51cf043c87253c9f58b539c9f7e44c8894223850\\httpcore-4.4.16.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.2\\4bfc12adfe4842bf07b657f0369c4cb522955686\\commons-logging-1.2.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-tinyfd\\3.3.3\\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\\lwjgl-tinyfd-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.13\\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\\httpclient-4.5.13.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\blocklist\\1.0.10\\5c685c5ffa94c4cd39496c7184c1d122e515ecef\\blocklist-1.0.10.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-freetype\\3.3.3\\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\\lwjgl-freetype-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.jcraft\\jorbis\\0.0.17\\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\\jorbis-0.0.17.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-stb\\3.3.3\\25dd6161988d7e65f71d5065c99902402ee32746\\lwjgl-stb-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-opengl\\3.3.3\\2f6b0147078396a58979125a4c947664e98293a\\lwjgl-opengl-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.commons\\commons-compress\\1.26.0\\659feffdd12280201c8aacb8f7be94f9a883c824\\commons-compress-1.26.0.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-openal\\3.3.3\\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\\lwjgl-openal-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl\\3.3.3\\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\\lwjgl-3.3.3.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.16.0\\4e3eb3d79888d76b54e28b350915b5dc3919c9de\\commons-codec-1.16.0.jar\"/><entry exclude=\"true\" path=\"C:\\Users\\Merlin\\.gradle\\caches\\modules-2\\files-2.1\\com.ibm.icu\\icu4j\\73.2\\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\\icu4j-73.2.jar\"/></classpathModifications></configuration>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations/Minecraft_Server.xml b/.idea/runConfigurations/Minecraft_Server.xml
--- a/.idea/runConfigurations/Minecraft_Server.xml	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/.idea/runConfigurations/Minecraft_Server.xml	(date 1747752838000)
@@ -10,5 +10,5 @@
     <method v="2">
       <option enabled="true" name="Make"/>
     </method>
-  <classpathModifications><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\patchy\2.2.10\da05971b07cbb379d002cf7eaec6a2048211fefc\patchy-2.2.10.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-jemalloc\3.3.3\b543467b7ff3c6920539a88ee602d34098628be5\lwjgl-jemalloc-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-glfw\3.3.3\efa1eb78c5ccd840e9f329717109b5e892d72f8e\lwjgl-glfw-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\text2speech\1.17.9\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\text2speech-1.17.9.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpcore\4.4.16\51cf043c87253c9f58b539c9f7e44c8894223850\httpcore-4.4.16.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-logging\commons-logging\1.2\4bfc12adfe4842bf07b657f0369c4cb522955686\commons-logging-1.2.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-tinyfd\3.3.3\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\lwjgl-tinyfd-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpclient\4.5.13\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\httpclient-4.5.13.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\blocklist\1.0.10\5c685c5ffa94c4cd39496c7184c1d122e515ecef\blocklist-1.0.10.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-freetype\3.3.3\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\lwjgl-freetype-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.jcraft\jorbis\0.0.17\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\jorbis-0.0.17.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-stb\3.3.3\25dd6161988d7e65f71d5065c99902402ee32746\lwjgl-stb-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-opengl\3.3.3\2f6b0147078396a58979125a4c947664e98293a\lwjgl-opengl-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-compress\1.26.0\659feffdd12280201c8aacb8f7be94f9a883c824\commons-compress-1.26.0.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-openal\3.3.3\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\lwjgl-openal-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl\3.3.3\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\lwjgl-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-codec\commons-codec\1.16.0\4e3eb3d79888d76b54e28b350915b5dc3919c9de\commons-codec-1.16.0.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.ibm.icu\icu4j\73.2\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\icu4j-73.2.jar"/></classpathModifications></configuration>
+  <classpathModifications><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-logging\commons-logging\1.2\4bfc12adfe4842bf07b657f0369c4cb522955686\commons-logging-1.2.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-tinyfd\3.3.3\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\lwjgl-tinyfd-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-opengl\3.3.3\2f6b0147078396a58979125a4c947664e98293a\lwjgl-opengl-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\patchy\2.2.10\da05971b07cbb379d002cf7eaec6a2048211fefc\patchy-2.2.10.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.ibm.icu\icu4j\73.2\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\icu4j-73.2.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-freetype\3.3.3\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\lwjgl-freetype-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl\3.3.3\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\lwjgl-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-codec\commons-codec\1.16.0\4e3eb3d79888d76b54e28b350915b5dc3919c9de\commons-codec-1.16.0.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpclient\4.5.13\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\httpclient-4.5.13.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-glfw\3.3.3\efa1eb78c5ccd840e9f329717109b5e892d72f8e\lwjgl-glfw-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-jemalloc\3.3.3\b543467b7ff3c6920539a88ee602d34098628be5\lwjgl-jemalloc-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-stb\3.3.3\25dd6161988d7e65f71d5065c99902402ee32746\lwjgl-stb-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\text2speech\1.17.9\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\text2speech-1.17.9.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\blocklist\1.0.10\5c685c5ffa94c4cd39496c7184c1d122e515ecef\blocklist-1.0.10.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.jcraft\jorbis\0.0.17\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\jorbis-0.0.17.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-compress\1.26.0\659feffdd12280201c8aacb8f7be94f9a883c824\commons-compress-1.26.0.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-openal\3.3.3\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\lwjgl-openal-3.3.3.jar"/><entry exclude="true" path="C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpcore\4.4.16\51cf043c87253c9f58b539c9f7e44c8894223850\httpcore-4.4.16.jar"/></classpathModifications></configuration>
 </component>
\ No newline at end of file
Index: src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.core.entity;\r\n\r\nimport net.minecraft.entity.EntityType;\r\nimport net.minecraft.entity.attribute.DefaultAttributeContainer;\r\nimport net.minecraft.entity.attribute.EntityAttributes;\r\nimport net.minecraft.entity.mob.ShulkerEntity;\r\nimport net.minecraft.util.math.Box;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport net.minecraft.world.World;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsMain;\r\n\r\n/**\r\n * Invisible 1×1×1 collider‑entity synced to a PhysicsObject’s single block.\r\n */\r\npublic class BlockColliderEntity extends ShulkerEntity {\r\n    private PhysicsMain.PhysicsObject linkedObject;\r\n    private Vec3d localOffset;\r\n\r\n    public BlockColliderEntity(EntityType<? extends ShulkerEntity> type, World world) {\r\n        super(type, world);\r\n        // disable AI, rendering, but keep collision\r\n        this.setAiDisabled(true);\r\n        this.setInvisible(true);\r\n        this.noClip = false;\r\n    }\r\n\r\n    /**\r\n     * Called once, right after spawning, to hook this collider to its PhysicsObject and block‑offset.\r\n     */\r\n    public void init(PhysicsMain.PhysicsObject obj, Vec3d offset) {\r\n        this.linkedObject = obj;\r\n        this.localOffset = offset;\r\n        Vec3d w = obj.getPosition().add(offset);\r\n        super.setPosition(w.x, w.y, w.z);\r\n    }\r\n\r\n    @Override\r\n    public void tick() {\r\n        if (linkedObject == null || !linkedObject.isAlive()) {\r\n            this.remove(RemovalReason.DISCARDED);\r\n            return;\r\n        }\r\n        Vec3d w = linkedObject.getPosition().add(localOffset);\r\n        super.setPosition(w.x, w.y, w.z);\r\n        // we don’t call super.tick() AI or movement—only collision box matters\r\n    }\r\n\r\n    /**\r\n     * Override the AABB to exactly a 1×1×1 cube at our current position\r\n     */\r\n    @Override\r\n    public Box calculateBoundingBox() {\r\n        double x = this.getX();\r\n        double y = this.getY();\r\n        double z = this.getZ();\r\n        return new Box(x, y, z, x + 1.0, y + 1.0, z + 1.0);\r\n    }\r\n\r\n    /**\r\n     * Must be registered via FabricDefaultAttributeRegistry—otherwise constructor NPEs.\r\n     */\r\n    public static DefaultAttributeContainer.Builder createAttributes() {\r\n        // reuse the Shulker’s attributes (it adds the “covered armor” modifier, etc.)\r\n        return ShulkerEntity.createShulkerAttributes()\r\n                // you can also zero out health if you like:\r\n                .add(EntityAttributes.GENERIC_MAX_HEALTH, 1.0);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java b/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java
--- a/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java	(date 1747846320000)
@@ -1,5 +1,7 @@
 package org.copycraftDev.new_horizons.core.entity;
 
+import net.minecraft.block.BlockState;
+import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.attribute.DefaultAttributeContainer;
 import net.minecraft.entity.attribute.EntityAttributes;
@@ -10,23 +12,54 @@
 import org.copycraftDev.new_horizons.physics.PhysicsMain;
 
 /**
- * Invisible 1×1×1 collider‑entity synced to a PhysicsObject’s single block.
+ * Invisible 1×1×1 collider-entity synced to a PhysicsObject’s single block,
+ * with optional light-blocking mimic based on a BlockState.
  */
 public class BlockColliderEntity extends ShulkerEntity {
     private PhysicsMain.PhysicsObject linkedObject;
     private Vec3d localOffset;
+    private BlockState mimicBlockState;
 
     public BlockColliderEntity(EntityType<? extends ShulkerEntity> type, World world) {
         super(type, world);
-        // disable AI, rendering, but keep collision
         this.setAiDisabled(true);
-        this.setInvisible(true);
+        this.setNoGravity(true);
         this.noClip = false;
     }
 
     /**
-     * Called once, right after spawning, to hook this collider to its PhysicsObject and block‑offset.
+     * Initialize physics sync: call right after spawning.
      */
+
+    public static void spawnBlockCollider(World world, PhysicsMain.PhysicsObject obj, Vec3d localOffset) {
+        BlockColliderEntity collider = new BlockColliderEntity(ModEntities.BLOCK_COLLIDER, world);
+        collider.init(obj, localOffset); // Sets position + links
+        world.spawnEntity(collider);
+    }
+
+    @Override
+    public boolean isCollidable() {
+        return true; // Required for collision to register
+    }
+
+    @Override
+    public boolean collidesWith(Entity other) {
+        return true; // Allow other entities to collide
+    }
+
+    @Override
+    public void pushAwayFrom(Entity entity) {
+        // Prevent pushback on collision
+    }
+
+
+    @Override
+    public boolean isPushable() {
+        return false; // We don't want this to be pushed
+    }
+
+
+
     public void init(PhysicsMain.PhysicsObject obj, Vec3d offset) {
         this.linkedObject = obj;
         this.localOffset = offset;
@@ -34,6 +67,17 @@
         super.setPosition(w.x, w.y, w.z);
     }
 
+    /**
+     * Which block to mimic for light-blocking (luminance==0 == full block light-block).
+     */
+    public void setMimicBlockState(BlockState state) {
+        this.mimicBlockState = state;
+    }
+
+    public BlockState getMimicBlockState() {
+        return mimicBlockState;
+    }
+
     @Override
     public void tick() {
         if (linkedObject == null || !linkedObject.isAlive()) {
@@ -42,27 +86,32 @@
         }
         Vec3d w = linkedObject.getPosition().add(localOffset);
         super.setPosition(w.x, w.y, w.z);
-        // we don’t call super.tick() AI or movement—only collision box matters
+        // no super.tick() call: we only want collision sync
     }
 
-    /**
-     * Override the AABB to exactly a 1×1×1 cube at our current position
-     */
     @Override
     public Box calculateBoundingBox() {
         double x = this.getX();
         double y = this.getY();
         double z = this.getZ();
+        // 1×1×1 cube at our position
         return new Box(x, y, z, x + 1.0, y + 1.0, z + 1.0);
     }
 
+    public boolean collides() {
+        return true;
+    }
+
+
+    public boolean blocksLight() {
+        return mimicBlockState != null && mimicBlockState.getLuminance() == 0;
+    }
+
     /**
-     * Must be registered via FabricDefaultAttributeRegistry—otherwise constructor NPEs.
+     * Must be registered via FabricDefaultAttributeRegistry to avoid NPE.
      */
     public static DefaultAttributeContainer.Builder createAttributes() {
-        // reuse the Shulker’s attributes (it adds the “covered armor” modifier, etc.)
         return ShulkerEntity.createShulkerAttributes()
-                // you can also zero out health if you like:
                 .add(EntityAttributes.GENERIC_MAX_HEALTH, 1.0);
     }
 }
Index: .gradle/loom-cache/launch.cfg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>commonProperties\r\n\tfabric.development=true\r\n\tfabric.remapClasspathFile=C:\\Users\\vasta\\Desktop\\Moddev\\New-Horizons-main\\.gradle\\loom-cache\\remapClasspath.txt\r\n\tlog4j.configurationFile=C:\\Users\\vasta\\Desktop\\Moddev\\New-Horizons-main\\.gradle\\loom-cache\\log4j.xml\r\n\tlog4j2.formatMsgNoLookups=true\r\n\tfabric.log.disableAnsi=false\r\nclientArgs\r\n\t--assetIndex\r\n\t1.21.1-17\r\n\t--assetsDir\r\n\tC:\\Users\\vasta\\.gradle\\caches\\fabric-loom\\assets
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/loom-cache/launch.cfg b/.gradle/loom-cache/launch.cfg
--- a/.gradle/loom-cache/launch.cfg	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/.gradle/loom-cache/launch.cfg	(date 1747752824000)
@@ -1,11 +1,11 @@
 commonProperties
 	fabric.development=true
-	fabric.remapClasspathFile=C:\Users\vasta\Desktop\Moddev\New-Horizons-main\.gradle\loom-cache\remapClasspath.txt
-	log4j.configurationFile=C:\Users\vasta\Desktop\Moddev\New-Horizons-main\.gradle\loom-cache\log4j.xml
+	fabric.remapClasspathFile=D:\codemc\New-Horizons\.gradle\loom-cache\remapClasspath.txt
+	log4j.configurationFile=D:\codemc\New-Horizons\.gradle\loom-cache\log4j.xml
 	log4j2.formatMsgNoLookups=true
 	fabric.log.disableAnsi=false
 clientArgs
 	--assetIndex
 	1.21.1-17
 	--assetsDir
-	C:\Users\vasta\.gradle\caches\fabric-loom\assets
\ No newline at end of file
+	C:\Users\Merlin\.gradle\caches\fabric-loom\assets
\ No newline at end of file
Index: .gradle/loom-cache/remapClasspath.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.github.oshi\\oshi-core\\6.4.10\\b1d8ab82d11d92fd639b56d639f8f46f739dd5fa\\oshi-core-6.4.10.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.10.1\\b3add478d4382b78ea20b1671390a858002feb6c\\gson-2.10.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.google.guava\\failureaccess\\1.0.1\\1dcf1de382a0bf95a3d8b0849546c88bac1292c9\\failureaccess-1.0.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.google.guava\\guava\\32.1.2-jre\\5e64ec7e056456bef3a4bc4c6fdaef71e8ab6318\\guava-32.1.2-jre.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.ibm.icu\\icu4j\\73.2\\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\\icu4j-73.2.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\authlib\\6.0.54\\de8bc95660e1b2fe8793fd427a7a10dcec5b3ea7\\authlib-6.0.54.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\blocklist\\1.0.10\\5c685c5ffa94c4cd39496c7184c1d122e515ecef\\blocklist-1.0.10.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\brigadier\\1.3.10\\d15b53a14cf20fdcaa98f731af5dda654452c010\\brigadier-1.3.10.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\datafixerupper\\8.0.16\\67d4de6d7f95d89bcf5862995fb854ebaec02a34\\datafixerupper-8.0.16.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\logging\\1.2.7\\24cb95ffb0e3433fd6e844c04e68009e504ca1c0\\logging-1.2.7.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\patchy\\2.2.10\\da05971b07cbb379d002cf7eaec6a2048211fefc\\patchy-2.2.10.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\com.mojang\\text2speech\\1.17.9\\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\\text2speech-1.17.9.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.16.0\\4e3eb3d79888d76b54e28b350915b5dc3919c9de\\commons-codec-1.16.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\commons-io\\commons-io\\2.15.1\\f11560da189ab563a5c8e351941415430e9304ea\\commons-io-2.15.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.2\\4bfc12adfe4842bf07b657f0369c4cb522955686\\commons-logging-1.2.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-buffer\\4.1.97.Final\\f8f3d8644afa5e6e1a40a3a6aeb9d9aa970ecb4f\\netty-buffer-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-codec\\4.1.97.Final\\384ba4d75670befbedb45c4d3b497a93639c206d\\netty-codec-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-common\\4.1.97.Final\\7cceacaf11df8dc63f23d0fb58e9d4640fc88404\\netty-common-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-handler\\4.1.97.Final\\abb86c6906bf512bf2b797a41cd7d2e8d3cd7c36\\netty-handler-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-resolver\\4.1.97.Final\\cec8348108dc76c47cf87c669d514be52c922144\\netty-resolver-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-transport-classes-epoll\\4.1.97.Final\\795da37ded759e862457a82d9d92c4d39ce8ecee\\netty-transport-classes-epoll-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-transport-native-unix-common\\4.1.97.Final\\d469d84265ab70095b01b40886cabdd433b6e664\\netty-transport-native-unix-common-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-transport\\4.1.97.Final\\f37380d23c9bb079bc702910833b2fd532c9abd0\\netty-transport-4.1.97.Final.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\it.unimi.dsi\\fastutil\\8.5.12\\c24946d46824bd528054bface3231d2ecb7e95e8\\fastutil-8.5.12.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna-platform\\5.14.0\\28934d48aed814f11e4c584da55c49fa7032b31b\\jna-platform-5.14.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\5.14.0\\67bf3eaea4f0718cb376a181a629e5f88fa1c9dd\\jna-5.14.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.4\\4fdac2fbe92dfad86aa6e9301736f6b4342a3f5c\\jopt-simple-5.0.4.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.commons\\commons-compress\\1.26.0\\659feffdd12280201c8aacb8f7be94f9a883c824\\commons-compress-1.26.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.commons\\commons-lang3\\3.14.0\\1ed471194b02f2c6cb734a0cd6f6f107c673afae\\commons-lang3-3.14.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.13\\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\\httpclient-4.5.13.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.16\\51cf043c87253c9f58b539c9f7e44c8894223850\\httpcore-4.4.16.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.22.1\\bea6fede6328fabafd7e68363161a7ea6605abd1\\log4j-api-2.22.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.22.1\\7183a25510a02ad00cc6a95d3b3d2a7d3c5a8dc4\\log4j-core-2.22.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-slf4j2-impl\\2.22.1\\d7e6693c2606cb7e7335047d7bb96dec52db5665\\log4j-slf4j2-impl-2.22.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.jcraft\\jorbis\\0.0.17\\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\\jorbis-0.0.17.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.joml\\joml\\1.10.5\\22566d58af70ad3d72308bab63b8339906deb649\\joml-1.10.5.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-freetype\\3.3.3\\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\\lwjgl-freetype-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-glfw\\3.3.3\\efa1eb78c5ccd840e9f329717109b5e892d72f8e\\lwjgl-glfw-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-jemalloc\\3.3.3\\b543467b7ff3c6920539a88ee602d34098628be5\\lwjgl-jemalloc-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-openal\\3.3.3\\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\\lwjgl-openal-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-opengl\\3.3.3\\2f6b0147078396a58979125a4c947664e98293a\\lwjgl-opengl-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-stb\\3.3.3\\25dd6161988d7e65f71d5065c99902402ee32746\\lwjgl-stb-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl-tinyfd\\3.3.3\\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\\lwjgl-tinyfd-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lwjgl\\lwjgl\\3.3.3\\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\\lwjgl-3.3.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.lz4\\lz4-java\\1.8.0\\4b986a99445e49ea5fbf5d149c4b63f6ed6c6780\\lz4-java-1.8.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\2.0.9\\7cf2726fdcfbc8610f9a71fb3ed639871f315340\\slf4j-api-2.0.9.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-transport-native-epoll\\4.1.97.Final\\54188f271e388e7f313aea995e82f58ce2cdb809\\netty-transport-native-epoll-4.1.97.Final-linux-x86_64.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.netty\\netty-transport-native-epoll\\4.1.97.Final\\5514744c588190ffda076b35a9b8c9f24946a960\\netty-transport-native-epoll-4.1.97.Final-linux-aarch_64.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\teamreborn\\energy\\4.1.0\\896812ba2c094aaeda6cab67fb203fba6a0686ab\\energy-4.1.0.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-transfer-api-v1\\5.1.11+b559734448\\4e3dc4b59963e2c6953e7c9f15ef0f3f7615c5dd\\fabric-transfer-api-v1-5.1.11+b559734448.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc\\fabric-loader\\0.15.11\\9c2be53d84ec5c4fb58bb5b8d9c8a629047c9ee9\\fabric-loader-0.15.11.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-api-lookup-api-v1\\1.6.64+b559734448\\968f6dde95adaaaa168e2cc655c62629623510aa\\fabric-api-lookup-api-v1-1.6.64+b559734448.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-lifecycle-events-v1\\2.3.8+0684cd1248\\94b0efa9c6f0572615bb2336103b9c2d9100e449\\fabric-lifecycle-events-v1-2.3.8+0684cd1248.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-rendering-fluids-v1\\3.1.6+b559734448\\c3a0dcfb06a8ee5981f4bac890df63b9db60e521\\fabric-rendering-fluids-v1-3.1.6+b559734448.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-api-base\\0.4.42+6573ed8c48\\b3ef2d0163b2aa02ef81e1ecebc898addb7a08e1\\fabric-api-base-0.4.42+6573ed8c48.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\foundry.veil\\veil-fabric-1.21.1\\1.0.0.206\\358aa8a6d689b51534fadd32b8983a93d8c1316b\\veil-fabric-1.21.1-1.0.0.206.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc\\fabric-loader\\0.16.10\\dbd932c2a3641d2c41cf9abfe47e140a5753fa86\\fabric-loader-0.16.10.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-api\\0.115.1+1.21.1\\551227e92766a97a76c949cbcd616ece7d603ec7\\fabric-api-0.115.1+1.21.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\curse.maven\\fabricskyboxes-408209\\5424365\\d7c80f23792afc6018da2477d46804114529afca\\fabricskyboxes-408209-5424365.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\lithium\\mc1.21.1-0.15.0-fabric\\b7d77602807f2c7cd7132741244bf8c0b8dec6c1\\lithium-mc1.21.1-0.15.0-fabric.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\liby\\1.21.1-build-2.1\\b652b153e39c156c25190a359c175163f8822456\\liby-1.21.1-build-2.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\cardinal-components-api\\6.1.2\\bf272e2aa6e9e8a98e8e7a7ed8cc585fc18c59eb\\cardinal-components-api-6.1.2.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\modmenu\\11.0.3\\6213120772192040a0aeb5c7cfe330c068605b1f\\modmenu-11.0.3.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\curse.maven\\music-notification-817206\\5617079\\8c521838a2bb68b7378a0686a259af00034ef27c\\music-notification-817206-5617079.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\curse.maven\\cloth-config-348521\\5729125\\5d82342a2df53fd6df712bfdd583a811572918a4\\cloth-config-348521-5729125.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\sodium\\mc1.21.1-0.6.9-fabric\\7953f77ac52ca2b1c6a7e483553b2a345f1b2a9c\\sodium-mc1.21.1-0.6.9-fabric.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\maven.modrinth\\iris\\1.8.8+1.21.1-fabric\\4e0df4011503b4b36ba69877ea7247c1a47fea00\\iris-1.8.8+1.21.1-fabric.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-transfer-api-v1\\5.4.2+c24bd99419\\70de51c92b1cc5a1be3ce7c03673d31eb1d45a1e\\fabric-transfer-api-v1-5.4.2+c24bd99419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-api-lookup-api-v1\\1.6.70+b559734419\\92589a6e99999122b3634f307e3e105bf8b1d6cc\\fabric-api-lookup-api-v1-1.6.70+b559734419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-blockrenderlayer-v1\\1.1.52+0af3f5a719\\d373cf930546c11962a044e827191a929af8dc3e\\fabric-blockrenderlayer-v1-1.1.52+0af3f5a719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-client-tags-api-v1\\1.1.15+6573ed8c19\\86602a54804867b85f8cc399a4a16a4f0b5cdf4b\\fabric-client-tags-api-v1-1.1.15+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-command-api-v1\\1.2.49+f71b366f19\\b2cb556636949ef8f1f7e7792a22b1ec814446d\\fabric-command-api-v1-1.2.49+f71b366f19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-commands-v0\\0.2.66+df3654b319\\5be927d3eb994590af044c8ce5383895107506a9\\fabric-commands-v0-0.2.66+df3654b319.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-command-api-v2\\2.2.28+6ced4dd919\\881b416a92d09344162aba3878c8547787da07aa\\fabric-command-api-v2-2.2.28+6ced4dd919.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-content-registries-v0\\8.0.18+b559734419\\301a827cef3641b483d559a8fc2dea054c6ef3ad\\fabric-content-registries-v0-8.0.18+b559734419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-data-generation-api-v1\\20.2.26+16c4ae2519\\f8a8dbb830a5d98edf6e261cee901c740d82dbee\\fabric-data-generation-api-v1-20.2.26+16c4ae2519.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-convention-tags-v1\\2.1.3+7f945d5b19\\6ba3db42edbfdc2180d9fbc61d9d451e13092ade\\fabric-convention-tags-v1-2.1.3+7f945d5b19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-convention-tags-v2\\2.10.0+9465b64419\\3d8f7a1288d26a61f7f02f7aa17247e2550cf603\\fabric-convention-tags-v2-2.10.0+9465b64419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-data-attachment-api-v1\\1.4.1+9ed317f519\\f36f2f3ee0e9c3d8b33afacde4ecb824d0e3026c\\fabric-data-attachment-api-v1-1.4.1+9ed317f519.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-entity-events-v1\\1.7.0+2122d82819\\464508ae9f4cd50409cb7bdcd7375bda6cb37b70\\fabric-entity-events-v1-1.7.0+2122d82819.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-events-interaction-v0\\0.7.13+ba9dae0619\\6d71bbbaf156c97a75e118c6b022b97d170b18c1\\fabric-events-interaction-v0-0.7.13+ba9dae0619.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-gametest-api-v1\\2.0.5+6fc22b9919\\8a4b384c64d6216bf0fa61f08552c551ac8552d3\\fabric-gametest-api-v1-2.0.5+6fc22b9919.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-item-api-v1\\11.1.1+d5debaed19\\59f4bdfef9f1f5cff426a58d77ba52e381f98007\\fabric-item-api-v1-11.1.1+d5debaed19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-item-group-api-v1\\4.1.6+6823f7cd19\\79d0815e8b511933f5da90cbd11548bcde57f4a4\\fabric-item-group-api-v1-4.1.6+6823f7cd19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-lifecycle-events-v1\\2.5.0+01d9a51c19\\174307875a21c429ac8557ac8722b256ed77569c\\fabric-lifecycle-events-v1-2.5.0+01d9a51c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-loot-api-v2\\3.0.15+3f89f5a519\\46fa96ed6c0fbff0ca337f0308d6259b200c1f3a\\fabric-loot-api-v2-3.0.15+3f89f5a519.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-loot-api-v3\\1.0.3+3f89f5a519\\581159f97cb3911e30862957838cc680854840d3\\fabric-loot-api-v3-1.0.3+3f89f5a519.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-message-api-v1\\6.0.13+6573ed8c19\\57e9503f06c5600b07731724a04bf3a153d756a7\\fabric-message-api-v1-6.0.13+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-model-loading-api-v1\\2.0.0+fe474d6b19\\61af4ea8848eed7d574d4c08a3349cf300864af3\\fabric-model-loading-api-v1-2.0.0+fe474d6b19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-recipe-api-v1\\5.0.14+248df81c19\\76ebcb2c8291452ccdf8e6b8da887843f946ea05\\fabric-recipe-api-v1-5.0.14+248df81c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-screen-handler-api-v1\\1.3.88+b559734419\\7ce5aea682a35b889f9ef586ec9906a6423c0f39\\fabric-screen-handler-api-v1-1.3.88+b559734419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-registry-sync-v0\\5.2.0+34f5d91419\\5569829f3bc023e1abfdfda55a73ecd3123263be\\fabric-registry-sync-v0-5.2.0+34f5d91419.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-networking-api-v1\\4.3.0+c7469b2119\\fe349bde4301a8b34aee955a7bd1326eb06196f9\\fabric-networking-api-v1-4.3.0+c7469b2119.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-object-builder-api-v1\\15.2.1+40875a9319\\807405a9024d578c6286d3980114db0e0d485cf7\\fabric-object-builder-api-v1-15.2.1+40875a9319.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-particles-v1\\4.0.2+6573ed8c19\\26b0e13b6a7575a39ee97a97be717018ee3a445d\\fabric-particles-v1-4.0.2+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-renderer-indigo\\1.7.0+c705a49c19\\601d2a3a3b0c79b0eb3ca719c5ef2279aa1f2a81\\fabric-renderer-indigo-1.7.0+c705a49c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-renderer-api-v1\\3.4.0+c705a49c19\\75e6828c06299859da60b9bbf693b886be8a1adf\\fabric-renderer-api-v1-3.4.0+c705a49c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-rendering-fluids-v1\\3.1.6+1daea21519\\e8afaa34062612ec82f3cd5233b1500fdbcf0e38\\fabric-rendering-fluids-v1-3.1.6+1daea21519.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-renderer-registries-v1\\3.2.68+df3654b319\\83023b0a217aeaa1cdce762e1bed71ec03e2c5c1\\fabric-renderer-registries-v1-3.2.68+df3654b319.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-rendering-v0\\1.1.71+df3654b319\\8c805bf45701b59bfe0077c5ec2fc648c367b091\\fabric-rendering-v0-1.1.71+df3654b319.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-rendering-v1\\5.0.5+df16efd019\\c646316ca2b25e1b92b69ba90283df669f10d76f\\fabric-rendering-v1-5.0.5+df16efd019.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-screen-api-v1\\2.0.25+8b68f1c719\\566e0011b7149ef7155a7ac1ae4625f0a84090e4\\fabric-screen-api-v1-2.0.25+8b68f1c719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-api-base\\0.4.42+6573ed8c19\\894a5fac0996da6ff6b8b515218b1a94889efb16\\fabric-api-base-0.4.42+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-biome-api-v1\\13.0.31+d527f9fd19\\b40fcea65bc4ad11ef0e8de2bbaa41d384aea390\\fabric-biome-api-v1-13.0.31+d527f9fd19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-block-api-v1\\1.0.22+0af3f5a719\\5d5ebf73d5b3e3fa7e84b007cb18f2089c603af0\\fabric-block-api-v1-1.0.22+0af3f5a719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-rendering-data-attachment-v1\\0.3.48+73761d2e19\\cb121c0f985f6d108c19e946ca12c22b0a15b24c\\fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-block-view-api-v2\\1.0.10+6573ed8c19\\befac4f1cf0bb9ea4964a113f256e5b9c29484b8\\fabric-block-view-api-v2-1.0.10+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-crash-report-info-v1\\0.2.29+0af3f5a719\\2dd46db82b2626e5d71a69d86ec044e17fc16ad1\\fabric-crash-report-info-v1-0.2.29+0af3f5a719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-dimensions-v1\\4.0.0+6fc22b9919\\9be5c102bd0942f4996eee865c100663434f4ff4\\fabric-dimensions-v1-4.0.0+6fc22b9919.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-game-rule-api-v1\\1.0.53+6ced4dd919\\6046a5ceaab3649cabc1c940eae5bb1ec18cfe34\\fabric-game-rule-api-v1-1.0.53+6ced4dd919.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-keybindings-v0\\0.2.45+df3654b319\\51c126d5428c1d6809ddcff7bfff46c6bf8f48b7\\fabric-keybindings-v0-0.2.45+df3654b319.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-key-binding-api-v1\\1.0.47+0af3f5a719\\6deacb40455296d572b0f59ac36317bfa6997d35\\fabric-key-binding-api-v1-1.0.47+0af3f5a719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-resource-conditions-api-v1\\4.3.0+8dc279b119\\2889f3632a3207ea00bd736fcb4af2d3a4642c2\\fabric-resource-conditions-api-v1-4.3.0+8dc279b119.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-resource-loader-v0\\1.3.1+5b5275af19\\6b5476f88c2770f0fc47366e130c35c6572a2611\\fabric-resource-loader-v0-1.3.1+5b5275af19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-sound-api-v1\\1.0.23+6573ed8c19\\e1d51c8169bf95fa354f006659312cfe329b5b32\\fabric-sound-api-v1-1.0.23+6573ed8c19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\net.fabricmc.fabric-api\\fabric-transitive-access-wideners-v1\\6.2.0+45b9699719\\16fc5b17e759f985084da3cbe161bf3ac4ed2d55\\fabric-transitive-access-wideners-v1-6.2.0+45b9699719.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\24.0.1\\13c5c75c4206580aa4d683bffee658caae6c9f43\\annotations-24.0.1.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\gg.moonflower\\molang-compiler\\3.1.1.19\\c7c0f9a9d0431c3485a0b6d2a4fb87e3de415ff9\\molang-compiler-3.1.1.19.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.github.ocelot\\glsl-processor\\0.2.2\\e613c323b2004d5a1bb8d4c0dbf9f7b07d2f79fc\\glsl-processor-0.2.2.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.github.spair\\imgui-java-lwjgl3\\1.86.11\\7f6657336844bd5a5321ca4987ff1e5476df5aeb\\imgui-java-lwjgl3-1.86.11.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.github.spair\\imgui-java-binding\\1.86.11\\9f6655bb12d271cb8c63e4394aa697ded1eae48\\imgui-java-binding-1.86.11.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.github.spair\\imgui-java-natives-linux\\1.86.11\\cf0cf7318612310bab849720f7fc1913389dbcb2\\imgui-java-natives-linux-1.86.11.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\io.github.spair\\imgui-java-natives-windows\\1.86.11\\7ad16055af581b5029f3938b0a91f98db7194249\\imgui-java-natives-windows-1.86.11.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.ow2.asm\\asm-tree\\9.6\\c0cdda9d211e965d2a4448aa3fd86110f2f8c2de\\asm-tree-9.6.jar;C:\\Users\\vasta\\.gradle\\caches\\modules-2\\files-2.1\\org.ow2.asm\\asm\\9.6\\aa205cf0a06dbd8e04ece91c0b37c3f5d567546a\\asm-9.6.jar;C:\\Users\\vasta\\.gradle\\caches\\fabric-loom\\minecraftMaven\\net\\minecraft\\minecraft-merged-intermediary\\1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2\\minecraft-merged-intermediary-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/loom-cache/remapClasspath.txt b/.gradle/loom-cache/remapClasspath.txt
--- a/.gradle/loom-cache/remapClasspath.txt	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/.gradle/loom-cache/remapClasspath.txt	(date 1747752824000)
@@ -1,1 +1,1 @@
-C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.github.oshi\oshi-core\6.4.10\b1d8ab82d11d92fd639b56d639f8f46f739dd5fa\oshi-core-6.4.10.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.google.code.gson\gson\2.10.1\b3add478d4382b78ea20b1671390a858002feb6c\gson-2.10.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.google.guava\failureaccess\1.0.1\1dcf1de382a0bf95a3d8b0849546c88bac1292c9\failureaccess-1.0.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.google.guava\guava\32.1.2-jre\5e64ec7e056456bef3a4bc4c6fdaef71e8ab6318\guava-32.1.2-jre.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.ibm.icu\icu4j\73.2\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\icu4j-73.2.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\authlib\6.0.54\de8bc95660e1b2fe8793fd427a7a10dcec5b3ea7\authlib-6.0.54.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\blocklist\1.0.10\5c685c5ffa94c4cd39496c7184c1d122e515ecef\blocklist-1.0.10.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\brigadier\1.3.10\d15b53a14cf20fdcaa98f731af5dda654452c010\brigadier-1.3.10.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\datafixerupper\8.0.16\67d4de6d7f95d89bcf5862995fb854ebaec02a34\datafixerupper-8.0.16.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\logging\1.2.7\24cb95ffb0e3433fd6e844c04e68009e504ca1c0\logging-1.2.7.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\patchy\2.2.10\da05971b07cbb379d002cf7eaec6a2048211fefc\patchy-2.2.10.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\com.mojang\text2speech\1.17.9\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\text2speech-1.17.9.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\commons-codec\commons-codec\1.16.0\4e3eb3d79888d76b54e28b350915b5dc3919c9de\commons-codec-1.16.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\commons-io\commons-io\2.15.1\f11560da189ab563a5c8e351941415430e9304ea\commons-io-2.15.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\commons-logging\commons-logging\1.2\4bfc12adfe4842bf07b657f0369c4cb522955686\commons-logging-1.2.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-buffer\4.1.97.Final\f8f3d8644afa5e6e1a40a3a6aeb9d9aa970ecb4f\netty-buffer-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-codec\4.1.97.Final\384ba4d75670befbedb45c4d3b497a93639c206d\netty-codec-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-common\4.1.97.Final\7cceacaf11df8dc63f23d0fb58e9d4640fc88404\netty-common-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-handler\4.1.97.Final\abb86c6906bf512bf2b797a41cd7d2e8d3cd7c36\netty-handler-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-resolver\4.1.97.Final\cec8348108dc76c47cf87c669d514be52c922144\netty-resolver-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-classes-epoll\4.1.97.Final\795da37ded759e862457a82d9d92c4d39ce8ecee\netty-transport-classes-epoll-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-unix-common\4.1.97.Final\d469d84265ab70095b01b40886cabdd433b6e664\netty-transport-native-unix-common-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport\4.1.97.Final\f37380d23c9bb079bc702910833b2fd532c9abd0\netty-transport-4.1.97.Final.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\it.unimi.dsi\fastutil\8.5.12\c24946d46824bd528054bface3231d2ecb7e95e8\fastutil-8.5.12.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.java.dev.jna\jna-platform\5.14.0\28934d48aed814f11e4c584da55c49fa7032b31b\jna-platform-5.14.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.java.dev.jna\jna\5.14.0\67bf3eaea4f0718cb376a181a629e5f88fa1c9dd\jna-5.14.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.sf.jopt-simple\jopt-simple\5.0.4\4fdac2fbe92dfad86aa6e9301736f6b4342a3f5c\jopt-simple-5.0.4.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-compress\1.26.0\659feffdd12280201c8aacb8f7be94f9a883c824\commons-compress-1.26.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-lang3\3.14.0\1ed471194b02f2c6cb734a0cd6f6f107c673afae\commons-lang3-3.14.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpclient\4.5.13\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\httpclient-4.5.13.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpcore\4.4.16\51cf043c87253c9f58b539c9f7e44c8894223850\httpcore-4.4.16.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-api\2.22.1\bea6fede6328fabafd7e68363161a7ea6605abd1\log4j-api-2.22.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-core\2.22.1\7183a25510a02ad00cc6a95d3b3d2a7d3c5a8dc4\log4j-core-2.22.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-slf4j2-impl\2.22.1\d7e6693c2606cb7e7335047d7bb96dec52db5665\log4j-slf4j2-impl-2.22.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.jcraft\jorbis\0.0.17\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\jorbis-0.0.17.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.joml\joml\1.10.5\22566d58af70ad3d72308bab63b8339906deb649\joml-1.10.5.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-freetype\3.3.3\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\lwjgl-freetype-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-glfw\3.3.3\efa1eb78c5ccd840e9f329717109b5e892d72f8e\lwjgl-glfw-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-jemalloc\3.3.3\b543467b7ff3c6920539a88ee602d34098628be5\lwjgl-jemalloc-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-openal\3.3.3\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\lwjgl-openal-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-opengl\3.3.3\2f6b0147078396a58979125a4c947664e98293a\lwjgl-opengl-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-stb\3.3.3\25dd6161988d7e65f71d5065c99902402ee32746\lwjgl-stb-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-tinyfd\3.3.3\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\lwjgl-tinyfd-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl\3.3.3\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\lwjgl-3.3.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.lz4\lz4-java\1.8.0\4b986a99445e49ea5fbf5d149c4b63f6ed6c6780\lz4-java-1.8.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-api\2.0.9\7cf2726fdcfbc8610f9a71fb3ed639871f315340\slf4j-api-2.0.9.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-epoll\4.1.97.Final\54188f271e388e7f313aea995e82f58ce2cdb809\netty-transport-native-epoll-4.1.97.Final-linux-x86_64.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-epoll\4.1.97.Final\5514744c588190ffda076b35a9b8c9f24946a960\netty-transport-native-epoll-4.1.97.Final-linux-aarch_64.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\teamreborn\energy\4.1.0\896812ba2c094aaeda6cab67fb203fba6a0686ab\energy-4.1.0.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transfer-api-v1\5.1.11+b559734448\4e3dc4b59963e2c6953e7c9f15ef0f3f7615c5dd\fabric-transfer-api-v1-5.1.11+b559734448.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc\fabric-loader\0.15.11\9c2be53d84ec5c4fb58bb5b8d9c8a629047c9ee9\fabric-loader-0.15.11.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-lookup-api-v1\1.6.64+b559734448\968f6dde95adaaaa168e2cc655c62629623510aa\fabric-api-lookup-api-v1-1.6.64+b559734448.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-lifecycle-events-v1\2.3.8+0684cd1248\94b0efa9c6f0572615bb2336103b9c2d9100e449\fabric-lifecycle-events-v1-2.3.8+0684cd1248.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-fluids-v1\3.1.6+b559734448\c3a0dcfb06a8ee5981f4bac890df63b9db60e521\fabric-rendering-fluids-v1-3.1.6+b559734448.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-base\0.4.42+6573ed8c48\b3ef2d0163b2aa02ef81e1ecebc898addb7a08e1\fabric-api-base-0.4.42+6573ed8c48.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\foundry.veil\veil-fabric-1.21.1\1.0.0.206\358aa8a6d689b51534fadd32b8983a93d8c1316b\veil-fabric-1.21.1-1.0.0.206.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc\fabric-loader\0.16.10\dbd932c2a3641d2c41cf9abfe47e140a5753fa86\fabric-loader-0.16.10.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api\0.115.1+1.21.1\551227e92766a97a76c949cbcd616ece7d603ec7\fabric-api-0.115.1+1.21.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\curse.maven\fabricskyboxes-408209\5424365\d7c80f23792afc6018da2477d46804114529afca\fabricskyboxes-408209-5424365.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\lithium\mc1.21.1-0.15.0-fabric\b7d77602807f2c7cd7132741244bf8c0b8dec6c1\lithium-mc1.21.1-0.15.0-fabric.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\liby\1.21.1-build-2.1\b652b153e39c156c25190a359c175163f8822456\liby-1.21.1-build-2.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\cardinal-components-api\6.1.2\bf272e2aa6e9e8a98e8e7a7ed8cc585fc18c59eb\cardinal-components-api-6.1.2.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\modmenu\11.0.3\6213120772192040a0aeb5c7cfe330c068605b1f\modmenu-11.0.3.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\curse.maven\music-notification-817206\5617079\8c521838a2bb68b7378a0686a259af00034ef27c\music-notification-817206-5617079.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\curse.maven\cloth-config-348521\5729125\5d82342a2df53fd6df712bfdd583a811572918a4\cloth-config-348521-5729125.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\sodium\mc1.21.1-0.6.9-fabric\7953f77ac52ca2b1c6a7e483553b2a345f1b2a9c\sodium-mc1.21.1-0.6.9-fabric.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\maven.modrinth\iris\1.8.8+1.21.1-fabric\4e0df4011503b4b36ba69877ea7247c1a47fea00\iris-1.8.8+1.21.1-fabric.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transfer-api-v1\5.4.2+c24bd99419\70de51c92b1cc5a1be3ce7c03673d31eb1d45a1e\fabric-transfer-api-v1-5.4.2+c24bd99419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-lookup-api-v1\1.6.70+b559734419\92589a6e99999122b3634f307e3e105bf8b1d6cc\fabric-api-lookup-api-v1-1.6.70+b559734419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-blockrenderlayer-v1\1.1.52+0af3f5a719\d373cf930546c11962a044e827191a929af8dc3e\fabric-blockrenderlayer-v1-1.1.52+0af3f5a719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-client-tags-api-v1\1.1.15+6573ed8c19\86602a54804867b85f8cc399a4a16a4f0b5cdf4b\fabric-client-tags-api-v1-1.1.15+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-command-api-v1\1.2.49+f71b366f19\b2cb556636949ef8f1f7e7792a22b1ec814446d\fabric-command-api-v1-1.2.49+f71b366f19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-commands-v0\0.2.66+df3654b319\5be927d3eb994590af044c8ce5383895107506a9\fabric-commands-v0-0.2.66+df3654b319.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-command-api-v2\2.2.28+6ced4dd919\881b416a92d09344162aba3878c8547787da07aa\fabric-command-api-v2-2.2.28+6ced4dd919.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-content-registries-v0\8.0.18+b559734419\301a827cef3641b483d559a8fc2dea054c6ef3ad\fabric-content-registries-v0-8.0.18+b559734419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-data-generation-api-v1\20.2.26+16c4ae2519\f8a8dbb830a5d98edf6e261cee901c740d82dbee\fabric-data-generation-api-v1-20.2.26+16c4ae2519.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-convention-tags-v1\2.1.3+7f945d5b19\6ba3db42edbfdc2180d9fbc61d9d451e13092ade\fabric-convention-tags-v1-2.1.3+7f945d5b19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-convention-tags-v2\2.10.0+9465b64419\3d8f7a1288d26a61f7f02f7aa17247e2550cf603\fabric-convention-tags-v2-2.10.0+9465b64419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-data-attachment-api-v1\1.4.1+9ed317f519\f36f2f3ee0e9c3d8b33afacde4ecb824d0e3026c\fabric-data-attachment-api-v1-1.4.1+9ed317f519.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-entity-events-v1\1.7.0+2122d82819\464508ae9f4cd50409cb7bdcd7375bda6cb37b70\fabric-entity-events-v1-1.7.0+2122d82819.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-events-interaction-v0\0.7.13+ba9dae0619\6d71bbbaf156c97a75e118c6b022b97d170b18c1\fabric-events-interaction-v0-0.7.13+ba9dae0619.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-gametest-api-v1\2.0.5+6fc22b9919\8a4b384c64d6216bf0fa61f08552c551ac8552d3\fabric-gametest-api-v1-2.0.5+6fc22b9919.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-item-api-v1\11.1.1+d5debaed19\59f4bdfef9f1f5cff426a58d77ba52e381f98007\fabric-item-api-v1-11.1.1+d5debaed19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-item-group-api-v1\4.1.6+6823f7cd19\79d0815e8b511933f5da90cbd11548bcde57f4a4\fabric-item-group-api-v1-4.1.6+6823f7cd19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-lifecycle-events-v1\2.5.0+01d9a51c19\174307875a21c429ac8557ac8722b256ed77569c\fabric-lifecycle-events-v1-2.5.0+01d9a51c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-loot-api-v2\3.0.15+3f89f5a519\46fa96ed6c0fbff0ca337f0308d6259b200c1f3a\fabric-loot-api-v2-3.0.15+3f89f5a519.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-loot-api-v3\1.0.3+3f89f5a519\581159f97cb3911e30862957838cc680854840d3\fabric-loot-api-v3-1.0.3+3f89f5a519.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-message-api-v1\6.0.13+6573ed8c19\57e9503f06c5600b07731724a04bf3a153d756a7\fabric-message-api-v1-6.0.13+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-model-loading-api-v1\2.0.0+fe474d6b19\61af4ea8848eed7d574d4c08a3349cf300864af3\fabric-model-loading-api-v1-2.0.0+fe474d6b19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-recipe-api-v1\5.0.14+248df81c19\76ebcb2c8291452ccdf8e6b8da887843f946ea05\fabric-recipe-api-v1-5.0.14+248df81c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-screen-handler-api-v1\1.3.88+b559734419\7ce5aea682a35b889f9ef586ec9906a6423c0f39\fabric-screen-handler-api-v1-1.3.88+b559734419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-registry-sync-v0\5.2.0+34f5d91419\5569829f3bc023e1abfdfda55a73ecd3123263be\fabric-registry-sync-v0-5.2.0+34f5d91419.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-networking-api-v1\4.3.0+c7469b2119\fe349bde4301a8b34aee955a7bd1326eb06196f9\fabric-networking-api-v1-4.3.0+c7469b2119.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-object-builder-api-v1\15.2.1+40875a9319\807405a9024d578c6286d3980114db0e0d485cf7\fabric-object-builder-api-v1-15.2.1+40875a9319.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-particles-v1\4.0.2+6573ed8c19\26b0e13b6a7575a39ee97a97be717018ee3a445d\fabric-particles-v1-4.0.2+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-indigo\1.7.0+c705a49c19\601d2a3a3b0c79b0eb3ca719c5ef2279aa1f2a81\fabric-renderer-indigo-1.7.0+c705a49c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-api-v1\3.4.0+c705a49c19\75e6828c06299859da60b9bbf693b886be8a1adf\fabric-renderer-api-v1-3.4.0+c705a49c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-fluids-v1\3.1.6+1daea21519\e8afaa34062612ec82f3cd5233b1500fdbcf0e38\fabric-rendering-fluids-v1-3.1.6+1daea21519.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-registries-v1\3.2.68+df3654b319\83023b0a217aeaa1cdce762e1bed71ec03e2c5c1\fabric-renderer-registries-v1-3.2.68+df3654b319.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-v0\1.1.71+df3654b319\8c805bf45701b59bfe0077c5ec2fc648c367b091\fabric-rendering-v0-1.1.71+df3654b319.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-v1\5.0.5+df16efd019\c646316ca2b25e1b92b69ba90283df669f10d76f\fabric-rendering-v1-5.0.5+df16efd019.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-screen-api-v1\2.0.25+8b68f1c719\566e0011b7149ef7155a7ac1ae4625f0a84090e4\fabric-screen-api-v1-2.0.25+8b68f1c719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-base\0.4.42+6573ed8c19\894a5fac0996da6ff6b8b515218b1a94889efb16\fabric-api-base-0.4.42+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-biome-api-v1\13.0.31+d527f9fd19\b40fcea65bc4ad11ef0e8de2bbaa41d384aea390\fabric-biome-api-v1-13.0.31+d527f9fd19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-block-api-v1\1.0.22+0af3f5a719\5d5ebf73d5b3e3fa7e84b007cb18f2089c603af0\fabric-block-api-v1-1.0.22+0af3f5a719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-data-attachment-v1\0.3.48+73761d2e19\cb121c0f985f6d108c19e946ca12c22b0a15b24c\fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-block-view-api-v2\1.0.10+6573ed8c19\befac4f1cf0bb9ea4964a113f256e5b9c29484b8\fabric-block-view-api-v2-1.0.10+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-crash-report-info-v1\0.2.29+0af3f5a719\2dd46db82b2626e5d71a69d86ec044e17fc16ad1\fabric-crash-report-info-v1-0.2.29+0af3f5a719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-dimensions-v1\4.0.0+6fc22b9919\9be5c102bd0942f4996eee865c100663434f4ff4\fabric-dimensions-v1-4.0.0+6fc22b9919.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-game-rule-api-v1\1.0.53+6ced4dd919\6046a5ceaab3649cabc1c940eae5bb1ec18cfe34\fabric-game-rule-api-v1-1.0.53+6ced4dd919.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-keybindings-v0\0.2.45+df3654b319\51c126d5428c1d6809ddcff7bfff46c6bf8f48b7\fabric-keybindings-v0-0.2.45+df3654b319.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-key-binding-api-v1\1.0.47+0af3f5a719\6deacb40455296d572b0f59ac36317bfa6997d35\fabric-key-binding-api-v1-1.0.47+0af3f5a719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-resource-conditions-api-v1\4.3.0+8dc279b119\2889f3632a3207ea00bd736fcb4af2d3a4642c2\fabric-resource-conditions-api-v1-4.3.0+8dc279b119.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-resource-loader-v0\1.3.1+5b5275af19\6b5476f88c2770f0fc47366e130c35c6572a2611\fabric-resource-loader-v0-1.3.1+5b5275af19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-sound-api-v1\1.0.23+6573ed8c19\e1d51c8169bf95fa354f006659312cfe329b5b32\fabric-sound-api-v1-1.0.23+6573ed8c19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transitive-access-wideners-v1\6.2.0+45b9699719\16fc5b17e759f985084da3cbe161bf3ac4ed2d55\fabric-transitive-access-wideners-v1-6.2.0+45b9699719.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.jetbrains\annotations\24.0.1\13c5c75c4206580aa4d683bffee658caae6c9f43\annotations-24.0.1.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\gg.moonflower\molang-compiler\3.1.1.19\c7c0f9a9d0431c3485a0b6d2a4fb87e3de415ff9\molang-compiler-3.1.1.19.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.github.ocelot\glsl-processor\0.2.2\e613c323b2004d5a1bb8d4c0dbf9f7b07d2f79fc\glsl-processor-0.2.2.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-lwjgl3\1.86.11\7f6657336844bd5a5321ca4987ff1e5476df5aeb\imgui-java-lwjgl3-1.86.11.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-binding\1.86.11\9f6655bb12d271cb8c63e4394aa697ded1eae48\imgui-java-binding-1.86.11.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-natives-linux\1.86.11\cf0cf7318612310bab849720f7fc1913389dbcb2\imgui-java-natives-linux-1.86.11.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-natives-windows\1.86.11\7ad16055af581b5029f3938b0a91f98db7194249\imgui-java-natives-windows-1.86.11.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.ow2.asm\asm-tree\9.6\c0cdda9d211e965d2a4448aa3fd86110f2f8c2de\asm-tree-9.6.jar;C:\Users\vasta\.gradle\caches\modules-2\files-2.1\org.ow2.asm\asm\9.6\aa205cf0a06dbd8e04ece91c0b37c3f5d567546a\asm-9.6.jar;C:\Users\vasta\.gradle\caches\fabric-loom\minecraftMaven\net\minecraft\minecraft-merged-intermediary\1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2\minecraft-merged-intermediary-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar
\ No newline at end of file
+C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.github.oshi\oshi-core\6.4.10\b1d8ab82d11d92fd639b56d639f8f46f739dd5fa\oshi-core-6.4.10.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.google.code.gson\gson\2.10.1\b3add478d4382b78ea20b1671390a858002feb6c\gson-2.10.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.google.guava\failureaccess\1.0.1\1dcf1de382a0bf95a3d8b0849546c88bac1292c9\failureaccess-1.0.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.google.guava\guava\32.1.2-jre\5e64ec7e056456bef3a4bc4c6fdaef71e8ab6318\guava-32.1.2-jre.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.ibm.icu\icu4j\73.2\61ad4ef7f9131fcf6d25c34b817f90d6da06c9e9\icu4j-73.2.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\authlib\6.0.54\de8bc95660e1b2fe8793fd427a7a10dcec5b3ea7\authlib-6.0.54.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\blocklist\1.0.10\5c685c5ffa94c4cd39496c7184c1d122e515ecef\blocklist-1.0.10.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\brigadier\1.3.10\d15b53a14cf20fdcaa98f731af5dda654452c010\brigadier-1.3.10.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\datafixerupper\8.0.16\67d4de6d7f95d89bcf5862995fb854ebaec02a34\datafixerupper-8.0.16.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\logging\1.2.7\24cb95ffb0e3433fd6e844c04e68009e504ca1c0\logging-1.2.7.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\patchy\2.2.10\da05971b07cbb379d002cf7eaec6a2048211fefc\patchy-2.2.10.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\com.mojang\text2speech\1.17.9\3cad216e3a7f0c19b4b394388bc9ffc446f13b14\text2speech-1.17.9.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-codec\commons-codec\1.16.0\4e3eb3d79888d76b54e28b350915b5dc3919c9de\commons-codec-1.16.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-io\commons-io\2.15.1\f11560da189ab563a5c8e351941415430e9304ea\commons-io-2.15.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\commons-logging\commons-logging\1.2\4bfc12adfe4842bf07b657f0369c4cb522955686\commons-logging-1.2.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-buffer\4.1.97.Final\f8f3d8644afa5e6e1a40a3a6aeb9d9aa970ecb4f\netty-buffer-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-codec\4.1.97.Final\384ba4d75670befbedb45c4d3b497a93639c206d\netty-codec-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-common\4.1.97.Final\7cceacaf11df8dc63f23d0fb58e9d4640fc88404\netty-common-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-handler\4.1.97.Final\abb86c6906bf512bf2b797a41cd7d2e8d3cd7c36\netty-handler-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-resolver\4.1.97.Final\cec8348108dc76c47cf87c669d514be52c922144\netty-resolver-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-classes-epoll\4.1.97.Final\795da37ded759e862457a82d9d92c4d39ce8ecee\netty-transport-classes-epoll-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-unix-common\4.1.97.Final\d469d84265ab70095b01b40886cabdd433b6e664\netty-transport-native-unix-common-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport\4.1.97.Final\f37380d23c9bb079bc702910833b2fd532c9abd0\netty-transport-4.1.97.Final.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\it.unimi.dsi\fastutil\8.5.12\c24946d46824bd528054bface3231d2ecb7e95e8\fastutil-8.5.12.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.java.dev.jna\jna-platform\5.14.0\28934d48aed814f11e4c584da55c49fa7032b31b\jna-platform-5.14.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.java.dev.jna\jna\5.14.0\67bf3eaea4f0718cb376a181a629e5f88fa1c9dd\jna-5.14.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.sf.jopt-simple\jopt-simple\5.0.4\4fdac2fbe92dfad86aa6e9301736f6b4342a3f5c\jopt-simple-5.0.4.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-compress\1.26.0\659feffdd12280201c8aacb8f7be94f9a883c824\commons-compress-1.26.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.commons\commons-lang3\3.14.0\1ed471194b02f2c6cb734a0cd6f6f107c673afae\commons-lang3-3.14.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpclient\4.5.13\e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada\httpclient-4.5.13.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.httpcomponents\httpcore\4.4.16\51cf043c87253c9f58b539c9f7e44c8894223850\httpcore-4.4.16.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-api\2.22.1\bea6fede6328fabafd7e68363161a7ea6605abd1\log4j-api-2.22.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-core\2.22.1\7183a25510a02ad00cc6a95d3b3d2a7d3c5a8dc4\log4j-core-2.22.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-slf4j2-impl\2.22.1\d7e6693c2606cb7e7335047d7bb96dec52db5665\log4j-slf4j2-impl-2.22.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.jcraft\jorbis\0.0.17\8872d22b293e8f5d7d56ff92be966e6dc28ebdc6\jorbis-0.0.17.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.joml\joml\1.10.5\22566d58af70ad3d72308bab63b8339906deb649\joml-1.10.5.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-freetype\3.3.3\a0db6c84a8becc8ca05f9dbfa985edc348a824c7\lwjgl-freetype-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-glfw\3.3.3\efa1eb78c5ccd840e9f329717109b5e892d72f8e\lwjgl-glfw-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-jemalloc\3.3.3\b543467b7ff3c6920539a88ee602d34098628be5\lwjgl-jemalloc-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-openal\3.3.3\daada81ceb5fc0c291fbfdd4433cb8d9423577f2\lwjgl-openal-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-opengl\3.3.3\2f6b0147078396a58979125a4c947664e98293a\lwjgl-opengl-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-stb\3.3.3\25dd6161988d7e65f71d5065c99902402ee32746\lwjgl-stb-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl-tinyfd\3.3.3\82d755ca94b102e9ca77283b9e2dc46d1b15fbe5\lwjgl-tinyfd-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lwjgl\lwjgl\3.3.3\29589b5f87ed335a6c7e7ee6a5775f81f97ecb84\lwjgl-3.3.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.lz4\lz4-java\1.8.0\4b986a99445e49ea5fbf5d149c4b63f6ed6c6780\lz4-java-1.8.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-api\2.0.9\7cf2726fdcfbc8610f9a71fb3ed639871f315340\slf4j-api-2.0.9.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-epoll\4.1.97.Final\54188f271e388e7f313aea995e82f58ce2cdb809\netty-transport-native-epoll-4.1.97.Final-linux-x86_64.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.netty\netty-transport-native-epoll\4.1.97.Final\5514744c588190ffda076b35a9b8c9f24946a960\netty-transport-native-epoll-4.1.97.Final-linux-aarch_64.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\teamreborn\energy\4.1.0\896812ba2c094aaeda6cab67fb203fba6a0686ab\energy-4.1.0.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transfer-api-v1\5.1.11+b559734448\4e3dc4b59963e2c6953e7c9f15ef0f3f7615c5dd\fabric-transfer-api-v1-5.1.11+b559734448.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc\fabric-loader\0.15.11\9c2be53d84ec5c4fb58bb5b8d9c8a629047c9ee9\fabric-loader-0.15.11.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-lookup-api-v1\1.6.64+b559734448\968f6dde95adaaaa168e2cc655c62629623510aa\fabric-api-lookup-api-v1-1.6.64+b559734448.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-lifecycle-events-v1\2.3.8+0684cd1248\94b0efa9c6f0572615bb2336103b9c2d9100e449\fabric-lifecycle-events-v1-2.3.8+0684cd1248.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-fluids-v1\3.1.6+b559734448\c3a0dcfb06a8ee5981f4bac890df63b9db60e521\fabric-rendering-fluids-v1-3.1.6+b559734448.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-base\0.4.42+6573ed8c48\b3ef2d0163b2aa02ef81e1ecebc898addb7a08e1\fabric-api-base-0.4.42+6573ed8c48.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\foundry.veil\veil-fabric-1.21.1\1.0.0.206\358aa8a6d689b51534fadd32b8983a93d8c1316b\veil-fabric-1.21.1-1.0.0.206.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc\fabric-loader\0.16.10\dbd932c2a3641d2c41cf9abfe47e140a5753fa86\fabric-loader-0.16.10.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api\0.115.1+1.21.1\551227e92766a97a76c949cbcd616ece7d603ec7\fabric-api-0.115.1+1.21.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\curse.maven\fabricskyboxes-408209\5424365\d7c80f23792afc6018da2477d46804114529afca\fabricskyboxes-408209-5424365.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\lithium\mc1.21.1-0.15.0-fabric\b7d77602807f2c7cd7132741244bf8c0b8dec6c1\lithium-mc1.21.1-0.15.0-fabric.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\liby\1.21.1-build-2.1\b652b153e39c156c25190a359c175163f8822456\liby-1.21.1-build-2.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\cardinal-components-api\6.1.2\bf272e2aa6e9e8a98e8e7a7ed8cc585fc18c59eb\cardinal-components-api-6.1.2.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\modmenu\11.0.3\6213120772192040a0aeb5c7cfe330c068605b1f\modmenu-11.0.3.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\curse.maven\music-notification-817206\5617079\8c521838a2bb68b7378a0686a259af00034ef27c\music-notification-817206-5617079.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\curse.maven\cloth-config-348521\5729125\5d82342a2df53fd6df712bfdd583a811572918a4\cloth-config-348521-5729125.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\sodium\mc1.21.1-0.6.9-fabric\7953f77ac52ca2b1c6a7e483553b2a345f1b2a9c\sodium-mc1.21.1-0.6.9-fabric.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\maven.modrinth\iris\1.8.8+1.21.1-fabric\4e0df4011503b4b36ba69877ea7247c1a47fea00\iris-1.8.8+1.21.1-fabric.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transfer-api-v1\5.4.2+c24bd99419\fc4f60c53e5e836a8bf3ecb681c7d2dc35ef8008\fabric-transfer-api-v1-5.4.2+c24bd99419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-lookup-api-v1\1.6.70+b559734419\5588c8bb35b21b5e32f4fb664f8f1cc5f5d61342\fabric-api-lookup-api-v1-1.6.70+b559734419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-blockrenderlayer-v1\1.1.52+0af3f5a719\fff4d3fe3a1d954dbe806d27d7313521c891704c\fabric-blockrenderlayer-v1-1.1.52+0af3f5a719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-client-tags-api-v1\1.1.15+6573ed8c19\f0cc3ad9a1774cbd67d90f994012872b817bf337\fabric-client-tags-api-v1-1.1.15+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-command-api-v1\1.2.49+f71b366f19\e5390c5c326544bff9caa2e3771873320b49b63\fabric-command-api-v1-1.2.49+f71b366f19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-commands-v0\0.2.66+df3654b319\ca80709643706f58994345ac561b51219a4f2712\fabric-commands-v0-0.2.66+df3654b319.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-command-api-v2\2.2.28+6ced4dd919\b5acfbd5f16caf74d8617e7a51feadc0bba3ee33\fabric-command-api-v2-2.2.28+6ced4dd919.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-content-registries-v0\8.0.18+b559734419\5c8545ac97fd35dffc077eda418b3caeef6e8866\fabric-content-registries-v0-8.0.18+b559734419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-data-generation-api-v1\20.2.26+16c4ae2519\f8a8dbb830a5d98edf6e261cee901c740d82dbee\fabric-data-generation-api-v1-20.2.26+16c4ae2519.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-convention-tags-v1\2.1.3+7f945d5b19\90a5f83b17ac9df57f529b200bc94d0f9ac59167\fabric-convention-tags-v1-2.1.3+7f945d5b19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-convention-tags-v2\2.10.0+9465b64419\7589e72d288f748b9a12e8656c555b7147b4a8f1\fabric-convention-tags-v2-2.10.0+9465b64419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-data-attachment-api-v1\1.4.1+9ed317f519\d97c7132ab59bf01b11f7ea9aca9d686ba9f95d5\fabric-data-attachment-api-v1-1.4.1+9ed317f519.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-entity-events-v1\1.7.0+2122d82819\d7a59f74a6ecc7b4998c54db336fd05b12329109\fabric-entity-events-v1-1.7.0+2122d82819.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-events-interaction-v0\0.7.13+ba9dae0619\efdda3484f393d2c3da5c530a8bc01c9f6c258f\fabric-events-interaction-v0-0.7.13+ba9dae0619.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-gametest-api-v1\2.0.5+6fc22b9919\7456db0b23782fbdbc3d11616f9d544416218632\fabric-gametest-api-v1-2.0.5+6fc22b9919.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-item-api-v1\11.1.1+d5debaed19\3cc6651f64eb636b74a99a67f31c7585630597\fabric-item-api-v1-11.1.1+d5debaed19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-item-group-api-v1\4.1.6+6823f7cd19\4a9fb2d4672b187680bc9718ccbd15d098672871\fabric-item-group-api-v1-4.1.6+6823f7cd19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-lifecycle-events-v1\2.5.0+01d9a51c19\fa0ff2af016dc818d94afa5b3bf338ca338f7f7a\fabric-lifecycle-events-v1-2.5.0+01d9a51c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-loot-api-v2\3.0.15+3f89f5a519\c43eb4752a28d5855297fa097b21d51df183db5b\fabric-loot-api-v2-3.0.15+3f89f5a519.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-loot-api-v3\1.0.3+3f89f5a519\bbb7d449d0c0a01e6860b49a13bf685b4a407e3c\fabric-loot-api-v3-1.0.3+3f89f5a519.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-message-api-v1\6.0.13+6573ed8c19\b4d6321ceb67b8e6ecfb2f2580a7a01cff58c41d\fabric-message-api-v1-6.0.13+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-model-loading-api-v1\2.0.0+fe474d6b19\d7cf314fe4d55c3b83649b3f53e32de53987d76f\fabric-model-loading-api-v1-2.0.0+fe474d6b19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-recipe-api-v1\5.0.14+248df81c19\c16de6a71a85df2ed5e4f0edf9cba358f62c861a\fabric-recipe-api-v1-5.0.14+248df81c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-screen-handler-api-v1\1.3.88+b559734419\7ad6adfeab1b68be235dbf3fbc0ed591b1960edb\fabric-screen-handler-api-v1-1.3.88+b559734419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-registry-sync-v0\5.2.0+34f5d91419\ed0d70204396ca726927554f4441874d744879ff\fabric-registry-sync-v0-5.2.0+34f5d91419.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-networking-api-v1\4.3.0+c7469b2119\d6345e2b3438d05932367f7441c1fc016ab5b7a\fabric-networking-api-v1-4.3.0+c7469b2119.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-object-builder-api-v1\15.2.1+40875a9319\3cf6f92a97ab7ea29501266bdacc5c404e709999\fabric-object-builder-api-v1-15.2.1+40875a9319.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-particles-v1\4.0.2+6573ed8c19\360bb7d5c33a1294428ee66ac6ecdd6d7ea4f899\fabric-particles-v1-4.0.2+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-indigo\1.7.0+c705a49c19\7b9cf3deffd0458e1222b37153bf9ff0e523ddd5\fabric-renderer-indigo-1.7.0+c705a49c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-api-v1\3.4.0+c705a49c19\82e70a01ed2a87e8859ebd998ea6979db10c7de2\fabric-renderer-api-v1-3.4.0+c705a49c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-fluids-v1\3.1.6+1daea21519\a98d1cb01e3b8b42563c75b95cd60bef5b605161\fabric-rendering-fluids-v1-3.1.6+1daea21519.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-renderer-registries-v1\3.2.68+df3654b319\1ae28a951f38784c2fc77872c5b86fe10bf6dfa9\fabric-renderer-registries-v1-3.2.68+df3654b319.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-v0\1.1.71+df3654b319\2136ae4bb89f3eeac528425b9e0bfbf3af92f4b5\fabric-rendering-v0-1.1.71+df3654b319.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-v1\5.0.5+df16efd019\9ec4ec688d14e4a31f18c2dd07b9d9955c1e9633\fabric-rendering-v1-5.0.5+df16efd019.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-screen-api-v1\2.0.25+8b68f1c719\ffe5f810ed17b312b7efa929741d4d5a51bef319\fabric-screen-api-v1-2.0.25+8b68f1c719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-api-base\0.4.42+6573ed8c19\ea7c4bb2496e7c0b9afec7cff99e1f044bca6ee6\fabric-api-base-0.4.42+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-biome-api-v1\13.0.31+d527f9fd19\9e3647b61e67549a19ad8582911c602295c5f2\fabric-biome-api-v1-13.0.31+d527f9fd19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-block-api-v1\1.0.22+0af3f5a719\b157b4fe1de2f278fefdc50160ed9203f59e3b13\fabric-block-api-v1-1.0.22+0af3f5a719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-rendering-data-attachment-v1\0.3.48+73761d2e19\3ea402da1f213a61cdfa2dcb2b1f5da4141a7f29\fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-block-view-api-v2\1.0.10+6573ed8c19\e19ab1f5089e7879789946c3284230db2a2d1118\fabric-block-view-api-v2-1.0.10+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-crash-report-info-v1\0.2.29+0af3f5a719\aa819f383361340b3e247c04aed17da7698637d2\fabric-crash-report-info-v1-0.2.29+0af3f5a719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-dimensions-v1\4.0.0+6fc22b9919\dcdf0d50db139306143a9c45ca0381083d74d232\fabric-dimensions-v1-4.0.0+6fc22b9919.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-game-rule-api-v1\1.0.53+6ced4dd919\efe98971c1dab4e364f687a558cae8185247d7f\fabric-game-rule-api-v1-1.0.53+6ced4dd919.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-keybindings-v0\0.2.45+df3654b319\818c8ceb3b533fb3dc566eac95234a0104948e72\fabric-keybindings-v0-0.2.45+df3654b319.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-key-binding-api-v1\1.0.47+0af3f5a719\a41588036a8125eb3fea0a372e8b0225287ce031\fabric-key-binding-api-v1-1.0.47+0af3f5a719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-resource-conditions-api-v1\4.3.0+8dc279b119\7e6597151bf51e25a3914d4293ef38096248803d\fabric-resource-conditions-api-v1-4.3.0+8dc279b119.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-resource-loader-v0\1.3.1+5b5275af19\629ddae2142c308c8bd95611829d5763e96eea9a\fabric-resource-loader-v0-1.3.1+5b5275af19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-sound-api-v1\1.0.23+6573ed8c19\caf236fd815d5aa25ecc4642ffc48d19f3fefdfa\fabric-sound-api-v1-1.0.23+6573ed8c19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\net.fabricmc.fabric-api\fabric-transitive-access-wideners-v1\6.2.0+45b9699719\f272f75428e852aec8eb42e78c514cc52b6b1265\fabric-transitive-access-wideners-v1-6.2.0+45b9699719.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.jetbrains\annotations\24.0.1\13c5c75c4206580aa4d683bffee658caae6c9f43\annotations-24.0.1.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\gg.moonflower\molang-compiler\3.1.1.19\c7c0f9a9d0431c3485a0b6d2a4fb87e3de415ff9\molang-compiler-3.1.1.19.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.github.ocelot\glsl-processor\0.2.2\e613c323b2004d5a1bb8d4c0dbf9f7b07d2f79fc\glsl-processor-0.2.2.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-lwjgl3\1.86.11\7f6657336844bd5a5321ca4987ff1e5476df5aeb\imgui-java-lwjgl3-1.86.11.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-binding\1.86.11\9f6655bb12d271cb8c63e4394aa697ded1eae48\imgui-java-binding-1.86.11.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-natives-linux\1.86.11\cf0cf7318612310bab849720f7fc1913389dbcb2\imgui-java-natives-linux-1.86.11.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\io.github.spair\imgui-java-natives-windows\1.86.11\7ad16055af581b5029f3938b0a91f98db7194249\imgui-java-natives-windows-1.86.11.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.ow2.asm\asm-tree\9.6\c0cdda9d211e965d2a4448aa3fd86110f2f8c2de\asm-tree-9.6.jar;C:\Users\Merlin\.gradle\caches\modules-2\files-2.1\org.ow2.asm\asm\9.6\aa205cf0a06dbd8e04ece91c0b37c3f5d567546a\asm-9.6.jar;C:\Users\Merlin\.gradle\caches\fabric-loom\minecraftMaven\net\minecraft\minecraft-merged-intermediary\1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2\minecraft-merged-intermediary-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar
\ No newline at end of file
Index: src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.copycraftDev.new_horizons.physics.block;\r\n\r\nimport net.minecraft.block.*;\r\nimport net.minecraft.block.entity.BlockEntity;\r\nimport net.minecraft.entity.player.PlayerEntity;\r\nimport net.minecraft.server.world.ServerWorld;\r\nimport net.minecraft.util.*;\r\nimport net.minecraft.util.hit.BlockHitResult;\r\nimport net.minecraft.util.math.*;\r\nimport net.minecraft.world.World;\r\nimport org.copycraftDev.new_horizons.physics.PhysicsMain;\r\n\r\nimport java.util.*;\r\n\r\npublic class AssemblerBlock extends Block {\r\n    public static int maxRange = 10;\r\n    public AssemblerBlock() {\r\n        super(AbstractBlock.Settings.copy(Blocks.NETHERITE_BLOCK).strength(4.0f));\r\n    }\r\n\r\n    @Override\r\n    public ActionResult onUse(BlockState state, World world, BlockPos pos, PlayerEntity player, BlockHitResult hit) {\r\n        if (world.isClient) return ActionResult.SUCCESS;\r\n        ServerWorld w = (ServerWorld) world;\r\n\r\n        Set<BlockPos> collected = floodFill(w, pos);\r\n        if (collected.isEmpty()) return ActionResult.SUCCESS;\r\n\r\n        // create at center, record origin grid‑pos\r\n        PhysicsMain.PhysicsObject obj =\r\n                PhysicsMain.PHYSICS_MANAGER.create(w, Vec3d.ofCenter(pos), pos);\r\n\r\n        for (BlockPos bpos : collected) {\r\n            BlockState bs = w.getBlockState(bpos);\r\n            BlockEntity be = w.getBlockEntity(bpos);\r\n            obj.addBlock(bpos.subtract(pos), bs, be);\r\n            w.setBlockState(bpos, Blocks.AIR.getDefaultState());\r\n        }\r\n        return ActionResult.SUCCESS;\r\n    }\r\n\r\n    private Set<BlockPos> floodFill(World world, BlockPos origin) {\r\n        Set<BlockPos> seen = new HashSet<>();\r\n        Queue<BlockPos> q = new LinkedList<>();\r\n        seen.add(origin); q.add(origin);\r\n        while (!q.isEmpty()) {\r\n            BlockPos cur = q.poll();\r\n            for (Direction d : Direction.values()) {\r\n                BlockPos n = cur.offset(d);\r\n                if (seen.contains(n)) continue;\r\n                if (origin.getManhattanDistance(n) > maxRange) continue;\r\n                if (world.isAir(n)) continue;\r\n                seen.add(n); q.add(n);\r\n            }\r\n        }\r\n        return seen;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java b/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java
--- a/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java	(date 1747825592000)
@@ -9,11 +9,14 @@
 import net.minecraft.util.math.*;
 import net.minecraft.world.World;
 import org.copycraftDev.new_horizons.physics.PhysicsMain;
+import org.copycraftDev.new_horizons.core.entity.BlockColliderEntity;
+import org.copycraftDev.new_horizons.core.entity.ModEntities;
 
 import java.util.*;
 
 public class AssemblerBlock extends Block {
     public static int maxRange = 10;
+
     public AssemblerBlock() {
         super(AbstractBlock.Settings.copy(Blocks.NETHERITE_BLOCK).strength(4.0f));
     }
@@ -26,16 +29,29 @@
         Set<BlockPos> collected = floodFill(w, pos);
         if (collected.isEmpty()) return ActionResult.SUCCESS;
 
-        // create at center, record origin grid‑pos
+        // Create physics object at center, record origin grid‑pos
         PhysicsMain.PhysicsObject obj =
                 PhysicsMain.PHYSICS_MANAGER.create(w, Vec3d.ofCenter(pos), pos);
 
         for (BlockPos bpos : collected) {
             BlockState bs = w.getBlockState(bpos);
             BlockEntity be = w.getBlockEntity(bpos);
-            obj.addBlock(bpos.subtract(pos), bs, be);
+
+            // Add block to physics object
+            BlockPos local = bpos.subtract(pos);
+            obj.addBlock(local, bs, be);
+
+            // Remove from world
             w.setBlockState(bpos, Blocks.AIR.getDefaultState());
+
+            // Spawn collider entity
+            Vec3d offset = new Vec3d(local.getX(), local.getY(), local.getZ());
+            BlockColliderEntity collider = new BlockColliderEntity(ModEntities.BLOCK_COLLIDER, w);
+            collider.init(obj, offset);
+            collider.setMimicBlockState(bs);
+            w.spawnEntity(collider);
         }
+
         return ActionResult.SUCCESS;
     }
 
@@ -53,6 +69,7 @@
                 seen.add(n); q.add(n);
             }
         }
+
         return seen;
     }
 }
Index: .gradle/buildOutputCleanup/cache.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Mon Mar 31 16:07:11 CEST 2025\r\ngradle.version=8.11.1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/buildOutputCleanup/cache.properties b/.gradle/buildOutputCleanup/cache.properties
--- a/.gradle/buildOutputCleanup/cache.properties	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/.gradle/buildOutputCleanup/cache.properties	(date 1747591668000)
@@ -1,2 +1,2 @@
-#Mon Mar 31 16:07:11 CEST 2025
-gradle.version=8.11.1
+#Sun May 18 20:07:46 CEST 2025
+gradle.version=8.14
Index: src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#version 150\r\n\r\nuniform sampler2D Sampler0;\r\nuniform sampler2D Sampler2;\r\n\r\nuniform vec4 ColorModulator;\r\n\r\nin vec2 texCoord0;\r\nin vec3 normal;\r\n\r\nout vec4 fragColor;\r\n\r\nvoid main() {\r\n\r\n\r\n    vec4 color = texture(Sampler0, texCoord0);\r\n    fragColor = color * 1.1;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh b/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh
--- a/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh	(date 1747913032000)
@@ -1,7 +1,6 @@
 #version 150
 
 uniform sampler2D Sampler0;
-uniform sampler2D Sampler2;
 
 uniform vec4 ColorModulator;
 
@@ -11,8 +10,30 @@
 out vec4 fragColor;
 
 void main() {
-
-
     vec4 color = texture(Sampler0, texCoord0);
-    fragColor = color * 1.1;
+
+    // Base brightness
+    float brightness = dot(color.rgb, vec3(0.299, 0.587, 0.114)); // luminance
+
+    // 1. Glare: radial halo around center (assumes center at (0.5,0.5))
+    float distToCenter = distance(texCoord0, vec2(0.5, 0.5));
+    float glare = smoothstep(0.4, 0.0, distToCenter); // strong near center, fades outward
+
+    // 2. Flare: horizontal streak, fades out along x-axis from center (0.5)
+    float flareWidth = 0.1; // width of flare streak
+    float flareIntensity = smoothstep(flareWidth, 0.0, abs(texCoord0.x - 0.5));
+
+    // flare shape: bright in center horizontally, subtle vertically
+    float flareShape = flareIntensity * smoothstep(0.1, 0.0, abs(texCoord0.y - 0.5));
+
+    // Combine glare and flare, weighted by brightness of starfish texture
+    float flareGlare = max(glare, flareShape) * brightness * 0.8;
+
+    // Add flare/glare glow color (white with some color modulator tint)
+    vec3 flareColor = vec3(1.0, 0.95, 0.8) * flareGlare; // warm light tint
+
+    // Final color mix: base color + flare/glare + slight brightness boost
+    vec3 finalColor = color.rgb * 1.1 + flareColor;
+
+    fragColor = vec4(finalColor, color.a) * ColorModulator;
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"98d4082c-d487-4920-b26a-61a5027f7d6f\" name=\"Changes\" comment=\"stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar.backup\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar.backup\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/cloth-config-348521/5729125/cloth-config-348521-5729125.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/cloth-config-348521/5729125/cloth-config-348521-5729125.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/fabricskyboxes-408209/5424365/fabricskyboxes-408209-5424365.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/fabricskyboxes-408209/5424365/fabricskyboxes-408209-5424365.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/music-notification-817206/5617079/music-notification-817206-5617079.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/music-notification-817206/5617079/music-notification-817206-5617079.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/foundry/veil/veil-fabric-1.21.1/1.0.0.206/veil-fabric-1.21.1-1.0.0.206.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/foundry/veil/veil-fabric-1.21.1/1.0.0.206/veil-fabric-1.21.1-1.0.0.206.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/cardinal-components-api/6.1.2/cardinal-components-api-6.1.2.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/cardinal-components-api/6.1.2/cardinal-components-api-6.1.2.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/liby/1.21.1-build-2.1/liby-1.21.1-build-2.1.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/liby/1.21.1-build-2.1/liby-1.21.1-build-2.1.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/lithium/mc1.21.1-0.15.0-fabric/lithium-mc1.21.1-0.15.0-fabric.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/lithium/mc1.21.1-0.15.0-fabric/lithium-mc1.21.1-0.15.0-fabric.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/modmenu/11.0.3/modmenu-11.0.3.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/modmenu/11.0.3/modmenu-11.0.3.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/sodium/mc1.21.1-0.6.9-fabric/sodium-mc1.21.1-0.6.9-fabric.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/sodium/mc1.21.1-0.6.9-fabric/sodium-mc1.21.1-0.6.9-fabric.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c19/fabric-api-base-0.4.42+6573ed8c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c19/fabric-api-base-0.4.42+6573ed8c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.70+b559734419/fabric-api-lookup-api-v1-1.6.70+b559734419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.70+b559734419/fabric-api-lookup-api-v1-1.6.70+b559734419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api/0.115.1+1.21.1/fabric-api-0.115.1+1.21.1.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api/0.115.1+1.21.1/fabric-api-0.115.1+1.21.1.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-biome-api-v1/13.0.31+d527f9fd19/fabric-biome-api-v1-13.0.31+d527f9fd19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-biome-api-v1/13.0.31+d527f9fd19/fabric-biome-api-v1-13.0.31+d527f9fd19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-block-api-v1/1.0.22+0af3f5a719/fabric-block-api-v1-1.0.22+0af3f5a719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-block-api-v1/1.0.22+0af3f5a719/fabric-block-api-v1-1.0.22+0af3f5a719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-block-view-api-v2/1.0.10+6573ed8c19/fabric-block-view-api-v2-1.0.10+6573ed8c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-block-view-api-v2/1.0.10+6573ed8c19/fabric-block-view-api-v2-1.0.10+6573ed8c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-blockrenderlayer-v1/1.1.52+0af3f5a719/fabric-blockrenderlayer-v1-1.1.52+0af3f5a719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-blockrenderlayer-v1/1.1.52+0af3f5a719/fabric-blockrenderlayer-v1-1.1.52+0af3f5a719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-client-tags-api-v1/1.1.15+6573ed8c19/fabric-client-tags-api-v1-1.1.15+6573ed8c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-client-tags-api-v1/1.1.15+6573ed8c19/fabric-client-tags-api-v1-1.1.15+6573ed8c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-command-api-v1/1.2.49+f71b366f19/fabric-command-api-v1-1.2.49+f71b366f19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-command-api-v1/1.2.49+f71b366f19/fabric-command-api-v1-1.2.49+f71b366f19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-command-api-v2/2.2.28+6ced4dd919/fabric-command-api-v2-2.2.28+6ced4dd919.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-command-api-v2/2.2.28+6ced4dd919/fabric-command-api-v2-2.2.28+6ced4dd919.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-commands-v0/0.2.66+df3654b319/fabric-commands-v0-0.2.66+df3654b319.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-commands-v0/0.2.66+df3654b319/fabric-commands-v0-0.2.66+df3654b319.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-content-registries-v0/8.0.18+b559734419/fabric-content-registries-v0-8.0.18+b559734419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-content-registries-v0/8.0.18+b559734419/fabric-content-registries-v0-8.0.18+b559734419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-convention-tags-v1/2.1.3+7f945d5b19/fabric-convention-tags-v1-2.1.3+7f945d5b19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-convention-tags-v1/2.1.3+7f945d5b19/fabric-convention-tags-v1-2.1.3+7f945d5b19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-convention-tags-v2/2.10.0+9465b64419/fabric-convention-tags-v2-2.10.0+9465b64419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-convention-tags-v2/2.10.0+9465b64419/fabric-convention-tags-v2-2.10.0+9465b64419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-crash-report-info-v1/0.2.29+0af3f5a719/fabric-crash-report-info-v1-0.2.29+0af3f5a719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-crash-report-info-v1/0.2.29+0af3f5a719/fabric-crash-report-info-v1-0.2.29+0af3f5a719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-data-attachment-api-v1/1.4.1+9ed317f519/fabric-data-attachment-api-v1-1.4.1+9ed317f519.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-data-attachment-api-v1/1.4.1+9ed317f519/fabric-data-attachment-api-v1-1.4.1+9ed317f519.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-data-generation-api-v1/20.2.26+16c4ae2519/fabric-data-generation-api-v1-20.2.26+16c4ae2519.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-data-generation-api-v1/20.2.26+16c4ae2519/fabric-data-generation-api-v1-20.2.26+16c4ae2519.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-dimensions-v1/4.0.0+6fc22b9919/fabric-dimensions-v1-4.0.0+6fc22b9919.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-dimensions-v1/4.0.0+6fc22b9919/fabric-dimensions-v1-4.0.0+6fc22b9919.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-entity-events-v1/1.7.0+2122d82819/fabric-entity-events-v1-1.7.0+2122d82819.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-entity-events-v1/1.7.0+2122d82819/fabric-entity-events-v1-1.7.0+2122d82819.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-events-interaction-v0/0.7.13+ba9dae0619/fabric-events-interaction-v0-0.7.13+ba9dae0619.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-events-interaction-v0/0.7.13+ba9dae0619/fabric-events-interaction-v0-0.7.13+ba9dae0619.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-game-rule-api-v1/1.0.53+6ced4dd919/fabric-game-rule-api-v1-1.0.53+6ced4dd919.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-game-rule-api-v1/1.0.53+6ced4dd919/fabric-game-rule-api-v1-1.0.53+6ced4dd919.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-gametest-api-v1/2.0.5+6fc22b9919/fabric-gametest-api-v1-2.0.5+6fc22b9919.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-gametest-api-v1/2.0.5+6fc22b9919/fabric-gametest-api-v1-2.0.5+6fc22b9919.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-api-v1/11.1.1+d5debaed19/fabric-item-api-v1-11.1.1+d5debaed19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-api-v1/11.1.1+d5debaed19/fabric-item-api-v1-11.1.1+d5debaed19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-group-api-v1/4.1.6+6823f7cd19/fabric-item-group-api-v1-4.1.6+6823f7cd19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-group-api-v1/4.1.6+6823f7cd19/fabric-item-group-api-v1-4.1.6+6823f7cd19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-key-binding-api-v1/1.0.47+0af3f5a719/fabric-key-binding-api-v1-1.0.47+0af3f5a719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-key-binding-api-v1/1.0.47+0af3f5a719/fabric-key-binding-api-v1-1.0.47+0af3f5a719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-keybindings-v0/0.2.45+df3654b319/fabric-keybindings-v0-0.2.45+df3654b319.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-keybindings-v0/0.2.45+df3654b319/fabric-keybindings-v0-0.2.45+df3654b319.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.5.0+01d9a51c19/fabric-lifecycle-events-v1-2.5.0+01d9a51c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.5.0+01d9a51c19/fabric-lifecycle-events-v1-2.5.0+01d9a51c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v2/3.0.15+3f89f5a519/fabric-loot-api-v2-3.0.15+3f89f5a519.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v2/3.0.15+3f89f5a519/fabric-loot-api-v2-3.0.15+3f89f5a519.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v3/1.0.3+3f89f5a519/fabric-loot-api-v3-1.0.3+3f89f5a519.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v3/1.0.3+3f89f5a519/fabric-loot-api-v3-1.0.3+3f89f5a519.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-model-loading-api-v1/2.0.0+fe474d6b19/fabric-model-loading-api-v1-2.0.0+fe474d6b19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-model-loading-api-v1/2.0.0+fe474d6b19/fabric-model-loading-api-v1-2.0.0+fe474d6b19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-networking-api-v1/4.3.0+c7469b2119/fabric-networking-api-v1-4.3.0+c7469b2119.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-networking-api-v1/4.3.0+c7469b2119/fabric-networking-api-v1-4.3.0+c7469b2119.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-particles-v1/4.0.2+6573ed8c19/fabric-particles-v1-4.0.2+6573ed8c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-particles-v1/4.0.2+6573ed8c19/fabric-particles-v1-4.0.2+6573ed8c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-registry-sync-v0/5.2.0+34f5d91419/fabric-registry-sync-v0-5.2.0+34f5d91419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-registry-sync-v0/5.2.0+34f5d91419/fabric-registry-sync-v0-5.2.0+34f5d91419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-api-v1/3.4.0+c705a49c19/fabric-renderer-api-v1-3.4.0+c705a49c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-api-v1/3.4.0+c705a49c19/fabric-renderer-api-v1-3.4.0+c705a49c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-indigo/1.7.0+c705a49c19/fabric-renderer-indigo-1.7.0+c705a49c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-indigo/1.7.0+c705a49c19/fabric-renderer-indigo-1.7.0+c705a49c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-registries-v1/3.2.68+df3654b319/fabric-renderer-registries-v1-3.2.68+df3654b319.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-registries-v1/3.2.68+df3654b319/fabric-renderer-registries-v1-3.2.68+df3654b319.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-data-attachment-v1/0.3.48+73761d2e19/fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-data-attachment-v1/0.3.48+73761d2e19/fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+1daea21519/fabric-rendering-fluids-v1-3.1.6+1daea21519.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+1daea21519/fabric-rendering-fluids-v1-3.1.6+1daea21519.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v0/1.1.71+df3654b319/fabric-rendering-v0-1.1.71+df3654b319.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v0/1.1.71+df3654b319/fabric-rendering-v0-1.1.71+df3654b319.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v1/5.0.5+df16efd019/fabric-rendering-v1-5.0.5+df16efd019.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v1/5.0.5+df16efd019/fabric-rendering-v1-5.0.5+df16efd019.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-conditions-api-v1/4.3.0+8dc279b119/fabric-resource-conditions-api-v1-4.3.0+8dc279b119.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-conditions-api-v1/4.3.0+8dc279b119/fabric-resource-conditions-api-v1-4.3.0+8dc279b119.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-loader-v0/1.3.1+5b5275af19/fabric-resource-loader-v0-1.3.1+5b5275af19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-loader-v0/1.3.1+5b5275af19/fabric-resource-loader-v0-1.3.1+5b5275af19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-api-v1/2.0.25+8b68f1c719/fabric-screen-api-v1-2.0.25+8b68f1c719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-api-v1/2.0.25+8b68f1c719/fabric-screen-api-v1-2.0.25+8b68f1c719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-handler-api-v1/1.3.88+b559734419/fabric-screen-handler-api-v1-1.3.88+b559734419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-handler-api-v1/1.3.88+b559734419/fabric-screen-handler-api-v1-1.3.88+b559734419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-sound-api-v1/1.0.23+6573ed8c19/fabric-sound-api-v1-1.0.23+6573ed8c19.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-sound-api-v1/1.0.23+6573ed8c19/fabric-sound-api-v1-1.0.23+6573ed8c19.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.4.2+c24bd99419/fabric-transfer-api-v1-5.4.2+c24bd99419.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.4.2+c24bd99419/fabric-transfer-api-v1-5.4.2+c24bd99419.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transitive-access-wideners-v1/6.2.0+45b9699719/fabric-transitive-access-wideners-v1-6.2.0+45b9699719.pom\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transitive-access-wideners-v1/6.2.0+45b9699719/fabric-transitive-access-wideners-v1-6.2.0+45b9699719.pom\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"New-Horizons\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"977b78050d5c9bd07ac672f2f3c8c930c23720e4\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Neomoon6153official&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/copycraft/New-Horizons.git&quot;,\r\n    &quot;accountId&quot;: &quot;40789803-feaf-4dbf-ba57-837fad9a29ca&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vxRKYpj5XnMTHcZzKud840itSN\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Gradle.New-Horizons [:net.fabricmc.devlaunchinjector.Main.main()].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.new-horizons [build].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.new-horizons [clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.new-horizons.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/codemc/Fog-Of-War&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\codemc\\New-Horizons\" />\r\n      <recent name=\"D:\\codemc\\New-Horizons\\src\\main\\java\\org\\copycraftDev\\new_horizons\\extrastuff\\noise\" />\r\n      <recent name=\"D:\\codemc\\New-Horizons\\src\\main\\resources\\assets\\minecraft\\textures\\gui\\sprites\\widget\" />\r\n      <recent name=\"D:\\codemc\\New-Horizons\\src\\main\\resources\\assets\\new_horizons\\sounds\" />\r\n      <recent name=\"D:\\codemc\\New-Horizons\\src\\main\\resources\\assets\\new_horizons\\models\\item\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\codemc\\New-Horizons\\src\\main\\resources\\assets\\new_horizons\\sounds\" />\r\n    </key>\r\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\r\n      <recent name=\"org.copycraftDev.new_horizons.blackhole\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Minecraft Client\">\r\n    <configuration name=\"new-horizons [build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"build\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"new-horizons [clean]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"clean\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Minecraft Client\" />\r\n      <item itemvalue=\"Application.Minecraft Server\" />\r\n      <item itemvalue=\"Gradle.new-horizons [build]\" />\r\n      <item itemvalue=\"Gradle.new-horizons [clean]\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.new-horizons [build]\" />\r\n        <item itemvalue=\"Gradle.new-horizons [clean]\" />\r\n        <item itemvalue=\"Gradle.new-horizons [clean]\" />\r\n        <item itemvalue=\"Gradle.new-horizons [build]\" />\r\n        <item itemvalue=\"Gradle.new-horizons [clean]\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"98d4082c-d487-4920-b26a-61a5027f7d6f\" name=\"Changes\" comment=\"\" />\r\n      <created>1745084675692</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1745084675692</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"titles screen revamp, and physics engine base\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746267679699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746267679699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"titlescreen revamp part 2 XD&#10;physics improvements (not really)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746351762247</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746351762247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"titlescreen revamp part 2 XD&#10;physics improvements (not really)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746352296662</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746352296662</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"titlescreen revamp part 2 XD&#10;physics improvements (not really)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746352645596</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746352645596</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"merge\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746473174356</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746473174356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747409259564</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747409259564</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747409306486</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747409306486</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747415853655</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747415853655</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747416124845</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747416124845</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747591594141</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747591594142</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747591756897</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747591756897</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"titles screen revamp, and physics engine base\" />\r\n    <MESSAGE value=\"titlescreen revamp part 2 XD&#10;physics improvements (not really)\" />\r\n    <MESSAGE value=\"merge\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/main'&#10;&#10;# Conflicts:&#10;#&#9;src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java&#10;#&#9;src/main/java/org/copycraftDev/new_horizons/mixin/NoVoidDamageInSpaceLivingEntityMixin.java&#10;#&#9;src/main/java/org/copycraftDev/new_horizons/mixin/PanoramaConfig.java&#10;#&#9;src/main/resources/assets/new_horizons/sounds/engine_ambiance.ogg&#10;#&#9;src/main/resources/new_horizons.mixins.json\" />\r\n    <MESSAGE value=\"texture resizer util and main menu improvements\" />\r\n    <MESSAGE value=\"stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"stuff\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c5e445c1b226f9c9c2d0b478ab141a74d8c997e5)
+++ b/.idea/workspace.xml	(date 1748346342000)
@@ -10,9 +10,12 @@
       <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/checksums/sha1-checksums.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/launch.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/launch.cfg" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/log4j.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/log4j.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar.backup" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.jar.backup" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/minecraftMaven/net/minecraft/minecraft-merged-ac72eabcaa/1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2/minecraft-merged-ac72eabcaa-1.21.1-net.fabricmc.yarn.1_21_1.1.21.1+build.3-v2.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapClasspath.txt" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapClasspath.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/cloth-config-348521/5729125/cloth-config-348521-5729125.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/cloth-config-348521/5729125/cloth-config-348521-5729125.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/fabricskyboxes-408209/5424365/fabricskyboxes-408209-5424365.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/fabricskyboxes-408209/5424365/fabricskyboxes-408209-5424365.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/music-notification-817206/5617079/music-notification-817206-5617079.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/curse/maven/music-notification-817206/5617079/music-notification-817206-5617079.pom" afterDir="false" />
@@ -23,6 +26,8 @@
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/modmenu/11.0.3/modmenu-11.0.3.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/modmenu/11.0.3/modmenu-11.0.3.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/sodium/mc1.21.1-0.6.9-fabric/sodium-mc1.21.1-0.6.9-fabric.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/maven/modrinth/sodium/mc1.21.1-0.6.9-fabric/sodium-mc1.21.1-0.6.9-fabric.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c19/fabric-api-base-0.4.42+6573ed8c19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c19/fabric-api-base-0.4.42+6573ed8c19.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c48/fabric-api-base-0.4.42+6573ed8c48.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-base/0.4.42+6573ed8c48/fabric-api-base-0.4.42+6573ed8c48.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.64+b559734448/fabric-api-lookup-api-v1-1.6.64+b559734448.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.64+b559734448/fabric-api-lookup-api-v1-1.6.64+b559734448.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.70+b559734419/fabric-api-lookup-api-v1-1.6.70+b559734419.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api-lookup-api-v1/1.6.70+b559734419/fabric-api-lookup-api-v1-1.6.70+b559734419.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api/0.115.1+1.21.1/fabric-api-0.115.1+1.21.1.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-api/0.115.1+1.21.1/fabric-api-0.115.1+1.21.1.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-biome-api-v1/13.0.31+d527f9fd19/fabric-biome-api-v1-13.0.31+d527f9fd19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-biome-api-v1/13.0.31+d527f9fd19/fabric-biome-api-v1-13.0.31+d527f9fd19.pom" afterDir="false" />
@@ -48,6 +53,7 @@
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-group-api-v1/4.1.6+6823f7cd19/fabric-item-group-api-v1-4.1.6+6823f7cd19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-item-group-api-v1/4.1.6+6823f7cd19/fabric-item-group-api-v1-4.1.6+6823f7cd19.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-key-binding-api-v1/1.0.47+0af3f5a719/fabric-key-binding-api-v1-1.0.47+0af3f5a719.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-key-binding-api-v1/1.0.47+0af3f5a719/fabric-key-binding-api-v1-1.0.47+0af3f5a719.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-keybindings-v0/0.2.45+df3654b319/fabric-keybindings-v0-0.2.45+df3654b319.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-keybindings-v0/0.2.45+df3654b319/fabric-keybindings-v0-0.2.45+df3654b319.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.3.8+0684cd1248/fabric-lifecycle-events-v1-2.3.8+0684cd1248.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.3.8+0684cd1248/fabric-lifecycle-events-v1-2.3.8+0684cd1248.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.5.0+01d9a51c19/fabric-lifecycle-events-v1-2.5.0+01d9a51c19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-lifecycle-events-v1/2.5.0+01d9a51c19/fabric-lifecycle-events-v1-2.5.0+01d9a51c19.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v2/3.0.15+3f89f5a519/fabric-loot-api-v2-3.0.15+3f89f5a519.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v2/3.0.15+3f89f5a519/fabric-loot-api-v2-3.0.15+3f89f5a519.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v3/1.0.3+3f89f5a519/fabric-loot-api-v3-1.0.3+3f89f5a519.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-loot-api-v3/1.0.3+3f89f5a519/fabric-loot-api-v3-1.0.3+3f89f5a519.pom" afterDir="false" />
@@ -60,6 +66,7 @@
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-registries-v1/3.2.68+df3654b319/fabric-renderer-registries-v1-3.2.68+df3654b319.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-renderer-registries-v1/3.2.68+df3654b319/fabric-renderer-registries-v1-3.2.68+df3654b319.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-data-attachment-v1/0.3.48+73761d2e19/fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-data-attachment-v1/0.3.48+73761d2e19/fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+1daea21519/fabric-rendering-fluids-v1-3.1.6+1daea21519.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+1daea21519/fabric-rendering-fluids-v1-3.1.6+1daea21519.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+b559734448/fabric-rendering-fluids-v1-3.1.6+b559734448.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-fluids-v1/3.1.6+b559734448/fabric-rendering-fluids-v1-3.1.6+b559734448.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v0/1.1.71+df3654b319/fabric-rendering-v0-1.1.71+df3654b319.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v0/1.1.71+df3654b319/fabric-rendering-v0-1.1.71+df3654b319.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v1/5.0.5+df16efd019/fabric-rendering-v1-5.0.5+df16efd019.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-rendering-v1/5.0.5+df16efd019/fabric-rendering-v1-5.0.5+df16efd019.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-conditions-api-v1/4.3.0+8dc279b119/fabric-resource-conditions-api-v1-4.3.0+8dc279b119.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-resource-conditions-api-v1/4.3.0+8dc279b119/fabric-resource-conditions-api-v1-4.3.0+8dc279b119.pom" afterDir="false" />
@@ -67,9 +74,29 @@
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-api-v1/2.0.25+8b68f1c719/fabric-screen-api-v1-2.0.25+8b68f1c719.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-api-v1/2.0.25+8b68f1c719/fabric-screen-api-v1-2.0.25+8b68f1c719.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-handler-api-v1/1.3.88+b559734419/fabric-screen-handler-api-v1-1.3.88+b559734419.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-screen-handler-api-v1/1.3.88+b559734419/fabric-screen-handler-api-v1-1.3.88+b559734419.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-sound-api-v1/1.0.23+6573ed8c19/fabric-sound-api-v1-1.0.23+6573ed8c19.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-sound-api-v1/1.0.23+6573ed8c19/fabric-sound-api-v1-1.0.23+6573ed8c19.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.1.11+b559734448/fabric-transfer-api-v1-5.1.11+b559734448.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.1.11+b559734448/fabric-transfer-api-v1-5.1.11+b559734448.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.4.2+c24bd99419/fabric-transfer-api-v1-5.4.2+c24bd99419.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transfer-api-v1/5.4.2+c24bd99419/fabric-transfer-api-v1-5.4.2+c24bd99419.pom" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transitive-access-wideners-v1/6.2.0+45b9699719/fabric-transitive-access-wideners-v1-6.2.0+45b9699719.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/net/fabricmc/fabric-api/fabric-transitive-access-wideners-v1/6.2.0+45b9699719/fabric-transitive-access-wideners-v1-6.2.0+45b9699719.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/teamreborn/energy/4.1.0/energy-4.1.0.pom" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_21_1_1_21_1_build_3_v2/teamreborn/energy/4.1.0/energy-4.1.0.pom" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Client.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Client.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_05_2025_17_23__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/ModCommands.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/ModCommands.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/NewHorizonsMain.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/NewHorizonsClient.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/planets/CelestialBodyRegistry.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRenderer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/client/rendering/CelestialBodyRendererPanorama.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/core/entity/BlockColliderEntity.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/mixin/TitleScreenMixin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/BlockAttachmentHandler.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsConfig.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/PhysicsMain.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/copycraftDev/new_horizons/physics/block/AssemblerBlock.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/assets/new_horizons/shaders/core/rendertype_star.fsh" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/new_horizons.mixins.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/new_horizons.mixins.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -154,7 +181,7 @@
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/codemc/Fog-Of-War&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/codemc/backrooms&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors&quot;
   }
 }</component>
@@ -171,6 +198,9 @@
     </key>
     <key name="ExtractSuperBase.RECENT_KEYS">
       <recent name="org.copycraftDev.new_horizons.blackhole" />
+    </key>
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="org.copycraftDev.new_horizons.client" />
     </key>
   </component>
   <component name="RunManager" selected="Application.Minecraft Client">
@@ -331,7 +361,15 @@
       <option name="project" value="LOCAL" />
       <updated>1747591756897</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="stuff">
+      <option name="closed" value="true" />
+      <created>1747592315204</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1747592315204</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
