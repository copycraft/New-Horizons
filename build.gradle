plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


repositories {
    maven {
        name = 'BlameJared Maven (CrT / Bookshelf)'
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
    maven {
        name = "CurseMaven"
        url "https://cursemaven.com"
    }
    maven {
        name = "Modrinth Maven"
        url "https://api.modrinth.com/maven"
    }
    maven {
        name = "Jitpack"
        url 'https://jitpack.io'
    }
    maven {
        name = "Shedaniel Maven"
        url 'https://maven.shedaniel.me'
    }
    maven {
        name = "TheIllusivec4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "JamiesWhiteShirt"
        url = "https://maven.jamieswhiteshirt.com/libs-release"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        name = "MineBlock11 Maven"
        url = "https://maven.imb11.dev/releases/"
    }
    maven {
        name = "Architectury Maven"
        url = "https://maven.architectury.dev/"
    }
    maven {
        name = "Xander Maven"
        url = "https://maven.isxander.dev/releases"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "curse.maven:fabricskyboxes-408209:5424365"
    modImplementation "maven.modrinth:lithium:mc1.21.1-0.15.0-fabric"
    modImplementation "maven.modrinth:liby:1.21.1-build-2.1"
    implementation "org.reflections:reflections:0.10.2"
    modImplementation "maven.modrinth:cardinal-components-api:6.1.2"
    modImplementation "https://modrinth.com/project/fog-of-war-library:1.0-SNAPSHOT"
    modImplementation("foundry.veil:veil-fabric-1.21.1:1.0.0.206") {
       exclude group: "maven.modrinth"
   }
    include modApi('teamreborn:energy:4.1.0')
    modImplementation "maven.modrinth:modmenu:11.0.3"
    modImplementation "curse.maven:music-notification-817206:5617079"
    modImplementation "curse.maven:cloth-config-348521:5729125"
    modImplementation "maven.modrinth:sodium:mc1.21.1-0.6.9-fabric"
    modImplementation "maven.modrinth:iris:1.8.8+1.21.1-fabric"
}


processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
